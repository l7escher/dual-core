
03_4_CPP_SpiritLevel_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003db8  081002a0  081002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000380  08104058  08104058  00005058  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  081043d8  081043d8  000053d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  081043e0  081043e0  000053e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  081043e4  081043e4  000053e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000001d8  10000000  081043e8  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000170  100001d8  081045c0  000061d8  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  10000348  081045c0  00006348  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000061d8  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000965b  00000000  00000000  00006208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000162e  00000000  00000000  0000f863  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00000778  00000000  00000000  00010e98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 00000578  00000000  00000000  00011610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0003963e  00000000  00000000  00011b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0000855d  00000000  00000000  0004b1c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    0017d073  00000000  00000000  00053723  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  001d0796  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00002c60  00000000  00000000  001d07dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000006e  00000000  00000000  001d343c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

081002a0 <__do_global_dtors_aux>:
 81002a0:	b510      	push	{r4, lr}
 81002a2:	4c05      	ldr	r4, [pc, #20]	@ (81002b8 <__do_global_dtors_aux+0x18>)
 81002a4:	7823      	ldrb	r3, [r4, #0]
 81002a6:	b933      	cbnz	r3, 81002b6 <__do_global_dtors_aux+0x16>
 81002a8:	4b04      	ldr	r3, [pc, #16]	@ (81002bc <__do_global_dtors_aux+0x1c>)
 81002aa:	b113      	cbz	r3, 81002b2 <__do_global_dtors_aux+0x12>
 81002ac:	4804      	ldr	r0, [pc, #16]	@ (81002c0 <__do_global_dtors_aux+0x20>)
 81002ae:	f3af 8000 	nop.w
 81002b2:	2301      	movs	r3, #1
 81002b4:	7023      	strb	r3, [r4, #0]
 81002b6:	bd10      	pop	{r4, pc}
 81002b8:	100001d8 	.word	0x100001d8
 81002bc:	00000000 	.word	0x00000000
 81002c0:	08104040 	.word	0x08104040

081002c4 <frame_dummy>:
 81002c4:	b508      	push	{r3, lr}
 81002c6:	4b03      	ldr	r3, [pc, #12]	@ (81002d4 <frame_dummy+0x10>)
 81002c8:	b11b      	cbz	r3, 81002d2 <frame_dummy+0xe>
 81002ca:	4903      	ldr	r1, [pc, #12]	@ (81002d8 <frame_dummy+0x14>)
 81002cc:	4803      	ldr	r0, [pc, #12]	@ (81002dc <frame_dummy+0x18>)
 81002ce:	f3af 8000 	nop.w
 81002d2:	bd08      	pop	{r3, pc}
 81002d4:	00000000 	.word	0x00000000
 81002d8:	100001dc 	.word	0x100001dc
 81002dc:	08104040 	.word	0x08104040

081002e0 <memchr>:
 81002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 81002e4:	2a10      	cmp	r2, #16
 81002e6:	db2b      	blt.n	8100340 <memchr+0x60>
 81002e8:	f010 0f07 	tst.w	r0, #7
 81002ec:	d008      	beq.n	8100300 <memchr+0x20>
 81002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 81002f2:	3a01      	subs	r2, #1
 81002f4:	428b      	cmp	r3, r1
 81002f6:	d02d      	beq.n	8100354 <memchr+0x74>
 81002f8:	f010 0f07 	tst.w	r0, #7
 81002fc:	b342      	cbz	r2, 8100350 <memchr+0x70>
 81002fe:	d1f6      	bne.n	81002ee <memchr+0xe>
 8100300:	b4f0      	push	{r4, r5, r6, r7}
 8100302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8100306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 810030a:	f022 0407 	bic.w	r4, r2, #7
 810030e:	f07f 0700 	mvns.w	r7, #0
 8100312:	2300      	movs	r3, #0
 8100314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8100318:	3c08      	subs	r4, #8
 810031a:	ea85 0501 	eor.w	r5, r5, r1
 810031e:	ea86 0601 	eor.w	r6, r6, r1
 8100322:	fa85 f547 	uadd8	r5, r5, r7
 8100326:	faa3 f587 	sel	r5, r3, r7
 810032a:	fa86 f647 	uadd8	r6, r6, r7
 810032e:	faa5 f687 	sel	r6, r5, r7
 8100332:	b98e      	cbnz	r6, 8100358 <memchr+0x78>
 8100334:	d1ee      	bne.n	8100314 <memchr+0x34>
 8100336:	bcf0      	pop	{r4, r5, r6, r7}
 8100338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 810033c:	f002 0207 	and.w	r2, r2, #7
 8100340:	b132      	cbz	r2, 8100350 <memchr+0x70>
 8100342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8100346:	3a01      	subs	r2, #1
 8100348:	ea83 0301 	eor.w	r3, r3, r1
 810034c:	b113      	cbz	r3, 8100354 <memchr+0x74>
 810034e:	d1f8      	bne.n	8100342 <memchr+0x62>
 8100350:	2000      	movs	r0, #0
 8100352:	4770      	bx	lr
 8100354:	3801      	subs	r0, #1
 8100356:	4770      	bx	lr
 8100358:	2d00      	cmp	r5, #0
 810035a:	bf06      	itte	eq
 810035c:	4635      	moveq	r5, r6
 810035e:	3803      	subeq	r0, #3
 8100360:	3807      	subne	r0, #7
 8100362:	f015 0f01 	tst.w	r5, #1
 8100366:	d107      	bne.n	8100378 <memchr+0x98>
 8100368:	3001      	adds	r0, #1
 810036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 810036e:	bf02      	ittt	eq
 8100370:	3001      	addeq	r0, #1
 8100372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8100376:	3001      	addeq	r0, #1
 8100378:	bcf0      	pop	{r4, r5, r6, r7}
 810037a:	3801      	subs	r0, #1
 810037c:	4770      	bx	lr
 810037e:	bf00      	nop

08100380 <strlen>:
 8100380:	4603      	mov	r3, r0
 8100382:	f813 2b01 	ldrb.w	r2, [r3], #1
 8100386:	2a00      	cmp	r2, #0
 8100388:	d1fb      	bne.n	8100382 <strlen+0x2>
 810038a:	1a18      	subs	r0, r3, r0
 810038c:	3801      	subs	r0, #1
 810038e:	4770      	bx	lr

08100390 <__aeabi_drsub>:
 8100390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8100394:	e002      	b.n	810039c <__adddf3>
 8100396:	bf00      	nop

08100398 <__aeabi_dsub>:
 8100398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0810039c <__adddf3>:
 810039c:	b530      	push	{r4, r5, lr}
 810039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 81003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 81003a6:	ea94 0f05 	teq	r4, r5
 81003aa:	bf08      	it	eq
 81003ac:	ea90 0f02 	teqeq	r0, r2
 81003b0:	bf1f      	itttt	ne
 81003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 81003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 81003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 81003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 81003c2:	f000 80e2 	beq.w	810058a <__adddf3+0x1ee>
 81003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 81003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 81003ce:	bfb8      	it	lt
 81003d0:	426d      	neglt	r5, r5
 81003d2:	dd0c      	ble.n	81003ee <__adddf3+0x52>
 81003d4:	442c      	add	r4, r5
 81003d6:	ea80 0202 	eor.w	r2, r0, r2
 81003da:	ea81 0303 	eor.w	r3, r1, r3
 81003de:	ea82 0000 	eor.w	r0, r2, r0
 81003e2:	ea83 0101 	eor.w	r1, r3, r1
 81003e6:	ea80 0202 	eor.w	r2, r0, r2
 81003ea:	ea81 0303 	eor.w	r3, r1, r3
 81003ee:	2d36      	cmp	r5, #54	@ 0x36
 81003f0:	bf88      	it	hi
 81003f2:	bd30      	pophi	{r4, r5, pc}
 81003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 81003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 81003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8100400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8100404:	d002      	beq.n	810040c <__adddf3+0x70>
 8100406:	4240      	negs	r0, r0
 8100408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 810040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8100410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8100418:	d002      	beq.n	8100420 <__adddf3+0x84>
 810041a:	4252      	negs	r2, r2
 810041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8100420:	ea94 0f05 	teq	r4, r5
 8100424:	f000 80a7 	beq.w	8100576 <__adddf3+0x1da>
 8100428:	f1a4 0401 	sub.w	r4, r4, #1
 810042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8100430:	db0d      	blt.n	810044e <__adddf3+0xb2>
 8100432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8100436:	fa22 f205 	lsr.w	r2, r2, r5
 810043a:	1880      	adds	r0, r0, r2
 810043c:	f141 0100 	adc.w	r1, r1, #0
 8100440:	fa03 f20e 	lsl.w	r2, r3, lr
 8100444:	1880      	adds	r0, r0, r2
 8100446:	fa43 f305 	asr.w	r3, r3, r5
 810044a:	4159      	adcs	r1, r3
 810044c:	e00e      	b.n	810046c <__adddf3+0xd0>
 810044e:	f1a5 0520 	sub.w	r5, r5, #32
 8100452:	f10e 0e20 	add.w	lr, lr, #32
 8100456:	2a01      	cmp	r2, #1
 8100458:	fa03 fc0e 	lsl.w	ip, r3, lr
 810045c:	bf28      	it	cs
 810045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8100462:	fa43 f305 	asr.w	r3, r3, r5
 8100466:	18c0      	adds	r0, r0, r3
 8100468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 810046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100470:	d507      	bpl.n	8100482 <__adddf3+0xe6>
 8100472:	f04f 0e00 	mov.w	lr, #0
 8100476:	f1dc 0c00 	rsbs	ip, ip, #0
 810047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 810047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8100482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8100486:	d31b      	bcc.n	81004c0 <__adddf3+0x124>
 8100488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 810048c:	d30c      	bcc.n	81004a8 <__adddf3+0x10c>
 810048e:	0849      	lsrs	r1, r1, #1
 8100490:	ea5f 0030 	movs.w	r0, r0, rrx
 8100494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8100498:	f104 0401 	add.w	r4, r4, #1
 810049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 81004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 81004a4:	f080 809a 	bcs.w	81005dc <__adddf3+0x240>
 81004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 81004ac:	bf08      	it	eq
 81004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 81004b2:	f150 0000 	adcs.w	r0, r0, #0
 81004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81004ba:	ea41 0105 	orr.w	r1, r1, r5
 81004be:	bd30      	pop	{r4, r5, pc}
 81004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 81004c4:	4140      	adcs	r0, r0
 81004c6:	eb41 0101 	adc.w	r1, r1, r1
 81004ca:	3c01      	subs	r4, #1
 81004cc:	bf28      	it	cs
 81004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 81004d2:	d2e9      	bcs.n	81004a8 <__adddf3+0x10c>
 81004d4:	f091 0f00 	teq	r1, #0
 81004d8:	bf04      	itt	eq
 81004da:	4601      	moveq	r1, r0
 81004dc:	2000      	moveq	r0, #0
 81004de:	fab1 f381 	clz	r3, r1
 81004e2:	bf08      	it	eq
 81004e4:	3320      	addeq	r3, #32
 81004e6:	f1a3 030b 	sub.w	r3, r3, #11
 81004ea:	f1b3 0220 	subs.w	r2, r3, #32
 81004ee:	da0c      	bge.n	810050a <__adddf3+0x16e>
 81004f0:	320c      	adds	r2, #12
 81004f2:	dd08      	ble.n	8100506 <__adddf3+0x16a>
 81004f4:	f102 0c14 	add.w	ip, r2, #20
 81004f8:	f1c2 020c 	rsb	r2, r2, #12
 81004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8100500:	fa21 f102 	lsr.w	r1, r1, r2
 8100504:	e00c      	b.n	8100520 <__adddf3+0x184>
 8100506:	f102 0214 	add.w	r2, r2, #20
 810050a:	bfd8      	it	le
 810050c:	f1c2 0c20 	rsble	ip, r2, #32
 8100510:	fa01 f102 	lsl.w	r1, r1, r2
 8100514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8100518:	bfdc      	itt	le
 810051a:	ea41 010c 	orrle.w	r1, r1, ip
 810051e:	4090      	lslle	r0, r2
 8100520:	1ae4      	subs	r4, r4, r3
 8100522:	bfa2      	ittt	ge
 8100524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8100528:	4329      	orrge	r1, r5
 810052a:	bd30      	popge	{r4, r5, pc}
 810052c:	ea6f 0404 	mvn.w	r4, r4
 8100530:	3c1f      	subs	r4, #31
 8100532:	da1c      	bge.n	810056e <__adddf3+0x1d2>
 8100534:	340c      	adds	r4, #12
 8100536:	dc0e      	bgt.n	8100556 <__adddf3+0x1ba>
 8100538:	f104 0414 	add.w	r4, r4, #20
 810053c:	f1c4 0220 	rsb	r2, r4, #32
 8100540:	fa20 f004 	lsr.w	r0, r0, r4
 8100544:	fa01 f302 	lsl.w	r3, r1, r2
 8100548:	ea40 0003 	orr.w	r0, r0, r3
 810054c:	fa21 f304 	lsr.w	r3, r1, r4
 8100550:	ea45 0103 	orr.w	r1, r5, r3
 8100554:	bd30      	pop	{r4, r5, pc}
 8100556:	f1c4 040c 	rsb	r4, r4, #12
 810055a:	f1c4 0220 	rsb	r2, r4, #32
 810055e:	fa20 f002 	lsr.w	r0, r0, r2
 8100562:	fa01 f304 	lsl.w	r3, r1, r4
 8100566:	ea40 0003 	orr.w	r0, r0, r3
 810056a:	4629      	mov	r1, r5
 810056c:	bd30      	pop	{r4, r5, pc}
 810056e:	fa21 f004 	lsr.w	r0, r1, r4
 8100572:	4629      	mov	r1, r5
 8100574:	bd30      	pop	{r4, r5, pc}
 8100576:	f094 0f00 	teq	r4, #0
 810057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 810057e:	bf06      	itte	eq
 8100580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8100584:	3401      	addeq	r4, #1
 8100586:	3d01      	subne	r5, #1
 8100588:	e74e      	b.n	8100428 <__adddf3+0x8c>
 810058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 810058e:	bf18      	it	ne
 8100590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8100594:	d029      	beq.n	81005ea <__adddf3+0x24e>
 8100596:	ea94 0f05 	teq	r4, r5
 810059a:	bf08      	it	eq
 810059c:	ea90 0f02 	teqeq	r0, r2
 81005a0:	d005      	beq.n	81005ae <__adddf3+0x212>
 81005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 81005a6:	bf04      	itt	eq
 81005a8:	4619      	moveq	r1, r3
 81005aa:	4610      	moveq	r0, r2
 81005ac:	bd30      	pop	{r4, r5, pc}
 81005ae:	ea91 0f03 	teq	r1, r3
 81005b2:	bf1e      	ittt	ne
 81005b4:	2100      	movne	r1, #0
 81005b6:	2000      	movne	r0, #0
 81005b8:	bd30      	popne	{r4, r5, pc}
 81005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 81005be:	d105      	bne.n	81005cc <__adddf3+0x230>
 81005c0:	0040      	lsls	r0, r0, #1
 81005c2:	4149      	adcs	r1, r1
 81005c4:	bf28      	it	cs
 81005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 81005ca:	bd30      	pop	{r4, r5, pc}
 81005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 81005d0:	bf3c      	itt	cc
 81005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 81005d6:	bd30      	popcc	{r4, r5, pc}
 81005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 81005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 81005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 81005e4:	f04f 0000 	mov.w	r0, #0
 81005e8:	bd30      	pop	{r4, r5, pc}
 81005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 81005ee:	bf1a      	itte	ne
 81005f0:	4619      	movne	r1, r3
 81005f2:	4610      	movne	r0, r2
 81005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 81005f8:	bf1c      	itt	ne
 81005fa:	460b      	movne	r3, r1
 81005fc:	4602      	movne	r2, r0
 81005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100602:	bf06      	itte	eq
 8100604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8100608:	ea91 0f03 	teqeq	r1, r3
 810060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8100610:	bd30      	pop	{r4, r5, pc}
 8100612:	bf00      	nop

08100614 <__aeabi_ui2d>:
 8100614:	f090 0f00 	teq	r0, #0
 8100618:	bf04      	itt	eq
 810061a:	2100      	moveq	r1, #0
 810061c:	4770      	bxeq	lr
 810061e:	b530      	push	{r4, r5, lr}
 8100620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100628:	f04f 0500 	mov.w	r5, #0
 810062c:	f04f 0100 	mov.w	r1, #0
 8100630:	e750      	b.n	81004d4 <__adddf3+0x138>
 8100632:	bf00      	nop

08100634 <__aeabi_i2d>:
 8100634:	f090 0f00 	teq	r0, #0
 8100638:	bf04      	itt	eq
 810063a:	2100      	moveq	r1, #0
 810063c:	4770      	bxeq	lr
 810063e:	b530      	push	{r4, r5, lr}
 8100640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 810064c:	bf48      	it	mi
 810064e:	4240      	negmi	r0, r0
 8100650:	f04f 0100 	mov.w	r1, #0
 8100654:	e73e      	b.n	81004d4 <__adddf3+0x138>
 8100656:	bf00      	nop

08100658 <__aeabi_f2d>:
 8100658:	0042      	lsls	r2, r0, #1
 810065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 810065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8100662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8100666:	bf1f      	itttt	ne
 8100668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 810066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8100670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8100674:	4770      	bxne	lr
 8100676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 810067a:	bf08      	it	eq
 810067c:	4770      	bxeq	lr
 810067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8100682:	bf04      	itt	eq
 8100684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8100688:	4770      	bxeq	lr
 810068a:	b530      	push	{r4, r5, lr}
 810068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8100690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100698:	e71c      	b.n	81004d4 <__adddf3+0x138>
 810069a:	bf00      	nop

0810069c <__aeabi_ul2d>:
 810069c:	ea50 0201 	orrs.w	r2, r0, r1
 81006a0:	bf08      	it	eq
 81006a2:	4770      	bxeq	lr
 81006a4:	b530      	push	{r4, r5, lr}
 81006a6:	f04f 0500 	mov.w	r5, #0
 81006aa:	e00a      	b.n	81006c2 <__aeabi_l2d+0x16>

081006ac <__aeabi_l2d>:
 81006ac:	ea50 0201 	orrs.w	r2, r0, r1
 81006b0:	bf08      	it	eq
 81006b2:	4770      	bxeq	lr
 81006b4:	b530      	push	{r4, r5, lr}
 81006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 81006ba:	d502      	bpl.n	81006c2 <__aeabi_l2d+0x16>
 81006bc:	4240      	negs	r0, r0
 81006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 81006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 81006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 81006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 81006ce:	f43f aed8 	beq.w	8100482 <__adddf3+0xe6>
 81006d2:	f04f 0203 	mov.w	r2, #3
 81006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006da:	bf18      	it	ne
 81006dc:	3203      	addne	r2, #3
 81006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006e2:	bf18      	it	ne
 81006e4:	3203      	addne	r2, #3
 81006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 81006ea:	f1c2 0320 	rsb	r3, r2, #32
 81006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 81006f2:	fa20 f002 	lsr.w	r0, r0, r2
 81006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 81006fa:	ea40 000e 	orr.w	r0, r0, lr
 81006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8100702:	4414      	add	r4, r2
 8100704:	e6bd      	b.n	8100482 <__adddf3+0xe6>
 8100706:	bf00      	nop

08100708 <__aeabi_dmul>:
 8100708:	b570      	push	{r4, r5, r6, lr}
 810070a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 810070e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100712:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8100716:	bf1d      	ittte	ne
 8100718:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 810071c:	ea94 0f0c 	teqne	r4, ip
 8100720:	ea95 0f0c 	teqne	r5, ip
 8100724:	f000 f8de 	bleq	81008e4 <__aeabi_dmul+0x1dc>
 8100728:	442c      	add	r4, r5
 810072a:	ea81 0603 	eor.w	r6, r1, r3
 810072e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8100732:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8100736:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 810073a:	bf18      	it	ne
 810073c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8100740:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100744:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8100748:	d038      	beq.n	81007bc <__aeabi_dmul+0xb4>
 810074a:	fba0 ce02 	umull	ip, lr, r0, r2
 810074e:	f04f 0500 	mov.w	r5, #0
 8100752:	fbe1 e502 	umlal	lr, r5, r1, r2
 8100756:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 810075a:	fbe0 e503 	umlal	lr, r5, r0, r3
 810075e:	f04f 0600 	mov.w	r6, #0
 8100762:	fbe1 5603 	umlal	r5, r6, r1, r3
 8100766:	f09c 0f00 	teq	ip, #0
 810076a:	bf18      	it	ne
 810076c:	f04e 0e01 	orrne.w	lr, lr, #1
 8100770:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8100774:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8100778:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 810077c:	d204      	bcs.n	8100788 <__aeabi_dmul+0x80>
 810077e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8100782:	416d      	adcs	r5, r5
 8100784:	eb46 0606 	adc.w	r6, r6, r6
 8100788:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 810078c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8100790:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8100794:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8100798:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 810079c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 81007a0:	bf88      	it	hi
 81007a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 81007a6:	d81e      	bhi.n	81007e6 <__aeabi_dmul+0xde>
 81007a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 81007ac:	bf08      	it	eq
 81007ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 81007b2:	f150 0000 	adcs.w	r0, r0, #0
 81007b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81007ba:	bd70      	pop	{r4, r5, r6, pc}
 81007bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 81007c0:	ea46 0101 	orr.w	r1, r6, r1
 81007c4:	ea40 0002 	orr.w	r0, r0, r2
 81007c8:	ea81 0103 	eor.w	r1, r1, r3
 81007cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 81007d0:	bfc2      	ittt	gt
 81007d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 81007d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 81007da:	bd70      	popgt	{r4, r5, r6, pc}
 81007dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 81007e0:	f04f 0e00 	mov.w	lr, #0
 81007e4:	3c01      	subs	r4, #1
 81007e6:	f300 80ab 	bgt.w	8100940 <__aeabi_dmul+0x238>
 81007ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 81007ee:	bfde      	ittt	le
 81007f0:	2000      	movle	r0, #0
 81007f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 81007f6:	bd70      	pople	{r4, r5, r6, pc}
 81007f8:	f1c4 0400 	rsb	r4, r4, #0
 81007fc:	3c20      	subs	r4, #32
 81007fe:	da35      	bge.n	810086c <__aeabi_dmul+0x164>
 8100800:	340c      	adds	r4, #12
 8100802:	dc1b      	bgt.n	810083c <__aeabi_dmul+0x134>
 8100804:	f104 0414 	add.w	r4, r4, #20
 8100808:	f1c4 0520 	rsb	r5, r4, #32
 810080c:	fa00 f305 	lsl.w	r3, r0, r5
 8100810:	fa20 f004 	lsr.w	r0, r0, r4
 8100814:	fa01 f205 	lsl.w	r2, r1, r5
 8100818:	ea40 0002 	orr.w	r0, r0, r2
 810081c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8100820:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100824:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8100828:	fa21 f604 	lsr.w	r6, r1, r4
 810082c:	eb42 0106 	adc.w	r1, r2, r6
 8100830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100834:	bf08      	it	eq
 8100836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810083a:	bd70      	pop	{r4, r5, r6, pc}
 810083c:	f1c4 040c 	rsb	r4, r4, #12
 8100840:	f1c4 0520 	rsb	r5, r4, #32
 8100844:	fa00 f304 	lsl.w	r3, r0, r4
 8100848:	fa20 f005 	lsr.w	r0, r0, r5
 810084c:	fa01 f204 	lsl.w	r2, r1, r4
 8100850:	ea40 0002 	orr.w	r0, r0, r2
 8100854:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100858:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 810085c:	f141 0100 	adc.w	r1, r1, #0
 8100860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100864:	bf08      	it	eq
 8100866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810086a:	bd70      	pop	{r4, r5, r6, pc}
 810086c:	f1c4 0520 	rsb	r5, r4, #32
 8100870:	fa00 f205 	lsl.w	r2, r0, r5
 8100874:	ea4e 0e02 	orr.w	lr, lr, r2
 8100878:	fa20 f304 	lsr.w	r3, r0, r4
 810087c:	fa01 f205 	lsl.w	r2, r1, r5
 8100880:	ea43 0302 	orr.w	r3, r3, r2
 8100884:	fa21 f004 	lsr.w	r0, r1, r4
 8100888:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 810088c:	fa21 f204 	lsr.w	r2, r1, r4
 8100890:	ea20 0002 	bic.w	r0, r0, r2
 8100894:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8100898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 810089c:	bf08      	it	eq
 810089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81008a2:	bd70      	pop	{r4, r5, r6, pc}
 81008a4:	f094 0f00 	teq	r4, #0
 81008a8:	d10f      	bne.n	81008ca <__aeabi_dmul+0x1c2>
 81008aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 81008ae:	0040      	lsls	r0, r0, #1
 81008b0:	eb41 0101 	adc.w	r1, r1, r1
 81008b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 81008b8:	bf08      	it	eq
 81008ba:	3c01      	subeq	r4, #1
 81008bc:	d0f7      	beq.n	81008ae <__aeabi_dmul+0x1a6>
 81008be:	ea41 0106 	orr.w	r1, r1, r6
 81008c2:	f095 0f00 	teq	r5, #0
 81008c6:	bf18      	it	ne
 81008c8:	4770      	bxne	lr
 81008ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 81008ce:	0052      	lsls	r2, r2, #1
 81008d0:	eb43 0303 	adc.w	r3, r3, r3
 81008d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 81008d8:	bf08      	it	eq
 81008da:	3d01      	subeq	r5, #1
 81008dc:	d0f7      	beq.n	81008ce <__aeabi_dmul+0x1c6>
 81008de:	ea43 0306 	orr.w	r3, r3, r6
 81008e2:	4770      	bx	lr
 81008e4:	ea94 0f0c 	teq	r4, ip
 81008e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 81008ec:	bf18      	it	ne
 81008ee:	ea95 0f0c 	teqne	r5, ip
 81008f2:	d00c      	beq.n	810090e <__aeabi_dmul+0x206>
 81008f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 81008f8:	bf18      	it	ne
 81008fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 81008fe:	d1d1      	bne.n	81008a4 <__aeabi_dmul+0x19c>
 8100900:	ea81 0103 	eor.w	r1, r1, r3
 8100904:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100908:	f04f 0000 	mov.w	r0, #0
 810090c:	bd70      	pop	{r4, r5, r6, pc}
 810090e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100912:	bf06      	itte	eq
 8100914:	4610      	moveq	r0, r2
 8100916:	4619      	moveq	r1, r3
 8100918:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810091c:	d019      	beq.n	8100952 <__aeabi_dmul+0x24a>
 810091e:	ea94 0f0c 	teq	r4, ip
 8100922:	d102      	bne.n	810092a <__aeabi_dmul+0x222>
 8100924:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8100928:	d113      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810092a:	ea95 0f0c 	teq	r5, ip
 810092e:	d105      	bne.n	810093c <__aeabi_dmul+0x234>
 8100930:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8100934:	bf1c      	itt	ne
 8100936:	4610      	movne	r0, r2
 8100938:	4619      	movne	r1, r3
 810093a:	d10a      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810093c:	ea81 0103 	eor.w	r1, r1, r3
 8100940:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100944:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100948:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 810094c:	f04f 0000 	mov.w	r0, #0
 8100950:	bd70      	pop	{r4, r5, r6, pc}
 8100952:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100956:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 810095a:	bd70      	pop	{r4, r5, r6, pc}

0810095c <__aeabi_ddiv>:
 810095c:	b570      	push	{r4, r5, r6, lr}
 810095e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8100962:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100966:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 810096a:	bf1d      	ittte	ne
 810096c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8100970:	ea94 0f0c 	teqne	r4, ip
 8100974:	ea95 0f0c 	teqne	r5, ip
 8100978:	f000 f8a7 	bleq	8100aca <__aeabi_ddiv+0x16e>
 810097c:	eba4 0405 	sub.w	r4, r4, r5
 8100980:	ea81 0e03 	eor.w	lr, r1, r3
 8100984:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100988:	ea4f 3101 	mov.w	r1, r1, lsl #12
 810098c:	f000 8088 	beq.w	8100aa0 <__aeabi_ddiv+0x144>
 8100990:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100994:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8100998:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 810099c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 81009a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 81009a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 81009a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 81009ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 81009b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 81009b4:	429d      	cmp	r5, r3
 81009b6:	bf08      	it	eq
 81009b8:	4296      	cmpeq	r6, r2
 81009ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 81009be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 81009c2:	d202      	bcs.n	81009ca <__aeabi_ddiv+0x6e>
 81009c4:	085b      	lsrs	r3, r3, #1
 81009c6:	ea4f 0232 	mov.w	r2, r2, rrx
 81009ca:	1ab6      	subs	r6, r6, r2
 81009cc:	eb65 0503 	sbc.w	r5, r5, r3
 81009d0:	085b      	lsrs	r3, r3, #1
 81009d2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 81009da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 81009de:	ebb6 0e02 	subs.w	lr, r6, r2
 81009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009e6:	bf22      	ittt	cs
 81009e8:	1ab6      	subcs	r6, r6, r2
 81009ea:	4675      	movcs	r5, lr
 81009ec:	ea40 000c 	orrcs.w	r0, r0, ip
 81009f0:	085b      	lsrs	r3, r3, #1
 81009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 81009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009fe:	bf22      	ittt	cs
 8100a00:	1ab6      	subcs	r6, r6, r2
 8100a02:	4675      	movcs	r5, lr
 8100a04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8100a08:	085b      	lsrs	r3, r3, #1
 8100a0a:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a0e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a12:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a16:	bf22      	ittt	cs
 8100a18:	1ab6      	subcs	r6, r6, r2
 8100a1a:	4675      	movcs	r5, lr
 8100a1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8100a20:	085b      	lsrs	r3, r3, #1
 8100a22:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a26:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a2a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a2e:	bf22      	ittt	cs
 8100a30:	1ab6      	subcs	r6, r6, r2
 8100a32:	4675      	movcs	r5, lr
 8100a34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8100a38:	ea55 0e06 	orrs.w	lr, r5, r6
 8100a3c:	d018      	beq.n	8100a70 <__aeabi_ddiv+0x114>
 8100a3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8100a42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8100a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8100a4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8100a4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8100a52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8100a56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8100a5a:	d1c0      	bne.n	81009de <__aeabi_ddiv+0x82>
 8100a5c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a60:	d10b      	bne.n	8100a7a <__aeabi_ddiv+0x11e>
 8100a62:	ea41 0100 	orr.w	r1, r1, r0
 8100a66:	f04f 0000 	mov.w	r0, #0
 8100a6a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8100a6e:	e7b6      	b.n	81009de <__aeabi_ddiv+0x82>
 8100a70:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a74:	bf04      	itt	eq
 8100a76:	4301      	orreq	r1, r0
 8100a78:	2000      	moveq	r0, #0
 8100a7a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8100a7e:	bf88      	it	hi
 8100a80:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8100a84:	f63f aeaf 	bhi.w	81007e6 <__aeabi_dmul+0xde>
 8100a88:	ebb5 0c03 	subs.w	ip, r5, r3
 8100a8c:	bf04      	itt	eq
 8100a8e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8100a92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8100a96:	f150 0000 	adcs.w	r0, r0, #0
 8100a9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8100a9e:	bd70      	pop	{r4, r5, r6, pc}
 8100aa0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8100aa4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8100aa8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8100aac:	bfc2      	ittt	gt
 8100aae:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8100ab6:	bd70      	popgt	{r4, r5, r6, pc}
 8100ab8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100abc:	f04f 0e00 	mov.w	lr, #0
 8100ac0:	3c01      	subs	r4, #1
 8100ac2:	e690      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100ac4:	ea45 0e06 	orr.w	lr, r5, r6
 8100ac8:	e68d      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100aca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8100ace:	ea94 0f0c 	teq	r4, ip
 8100ad2:	bf08      	it	eq
 8100ad4:	ea95 0f0c 	teqeq	r5, ip
 8100ad8:	f43f af3b 	beq.w	8100952 <__aeabi_dmul+0x24a>
 8100adc:	ea94 0f0c 	teq	r4, ip
 8100ae0:	d10a      	bne.n	8100af8 <__aeabi_ddiv+0x19c>
 8100ae2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100ae6:	f47f af34 	bne.w	8100952 <__aeabi_dmul+0x24a>
 8100aea:	ea95 0f0c 	teq	r5, ip
 8100aee:	f47f af25 	bne.w	810093c <__aeabi_dmul+0x234>
 8100af2:	4610      	mov	r0, r2
 8100af4:	4619      	mov	r1, r3
 8100af6:	e72c      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100af8:	ea95 0f0c 	teq	r5, ip
 8100afc:	d106      	bne.n	8100b0c <__aeabi_ddiv+0x1b0>
 8100afe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100b02:	f43f aefd 	beq.w	8100900 <__aeabi_dmul+0x1f8>
 8100b06:	4610      	mov	r0, r2
 8100b08:	4619      	mov	r1, r3
 8100b0a:	e722      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100b0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100b10:	bf18      	it	ne
 8100b12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8100b16:	f47f aec5 	bne.w	81008a4 <__aeabi_dmul+0x19c>
 8100b1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8100b1e:	f47f af0d 	bne.w	810093c <__aeabi_dmul+0x234>
 8100b22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8100b26:	f47f aeeb 	bne.w	8100900 <__aeabi_dmul+0x1f8>
 8100b2a:	e712      	b.n	8100952 <__aeabi_dmul+0x24a>

08100b2c <__gedf2>:
 8100b2c:	f04f 3cff 	mov.w	ip, #4294967295
 8100b30:	e006      	b.n	8100b40 <__cmpdf2+0x4>
 8100b32:	bf00      	nop

08100b34 <__ledf2>:
 8100b34:	f04f 0c01 	mov.w	ip, #1
 8100b38:	e002      	b.n	8100b40 <__cmpdf2+0x4>
 8100b3a:	bf00      	nop

08100b3c <__cmpdf2>:
 8100b3c:	f04f 0c01 	mov.w	ip, #1
 8100b40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8100b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100b50:	bf18      	it	ne
 8100b52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8100b56:	d01b      	beq.n	8100b90 <__cmpdf2+0x54>
 8100b58:	b001      	add	sp, #4
 8100b5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8100b5e:	bf0c      	ite	eq
 8100b60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8100b64:	ea91 0f03 	teqne	r1, r3
 8100b68:	bf02      	ittt	eq
 8100b6a:	ea90 0f02 	teqeq	r0, r2
 8100b6e:	2000      	moveq	r0, #0
 8100b70:	4770      	bxeq	lr
 8100b72:	f110 0f00 	cmn.w	r0, #0
 8100b76:	ea91 0f03 	teq	r1, r3
 8100b7a:	bf58      	it	pl
 8100b7c:	4299      	cmppl	r1, r3
 8100b7e:	bf08      	it	eq
 8100b80:	4290      	cmpeq	r0, r2
 8100b82:	bf2c      	ite	cs
 8100b84:	17d8      	asrcs	r0, r3, #31
 8100b86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8100b8a:	f040 0001 	orr.w	r0, r0, #1
 8100b8e:	4770      	bx	lr
 8100b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b98:	d102      	bne.n	8100ba0 <__cmpdf2+0x64>
 8100b9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100b9e:	d107      	bne.n	8100bb0 <__cmpdf2+0x74>
 8100ba0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100ba8:	d1d6      	bne.n	8100b58 <__cmpdf2+0x1c>
 8100baa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100bae:	d0d3      	beq.n	8100b58 <__cmpdf2+0x1c>
 8100bb0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8100bb4:	4770      	bx	lr
 8100bb6:	bf00      	nop

08100bb8 <__aeabi_cdrcmple>:
 8100bb8:	4684      	mov	ip, r0
 8100bba:	4610      	mov	r0, r2
 8100bbc:	4662      	mov	r2, ip
 8100bbe:	468c      	mov	ip, r1
 8100bc0:	4619      	mov	r1, r3
 8100bc2:	4663      	mov	r3, ip
 8100bc4:	e000      	b.n	8100bc8 <__aeabi_cdcmpeq>
 8100bc6:	bf00      	nop

08100bc8 <__aeabi_cdcmpeq>:
 8100bc8:	b501      	push	{r0, lr}
 8100bca:	f7ff ffb7 	bl	8100b3c <__cmpdf2>
 8100bce:	2800      	cmp	r0, #0
 8100bd0:	bf48      	it	mi
 8100bd2:	f110 0f00 	cmnmi.w	r0, #0
 8100bd6:	bd01      	pop	{r0, pc}

08100bd8 <__aeabi_dcmpeq>:
 8100bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bdc:	f7ff fff4 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100be0:	bf0c      	ite	eq
 8100be2:	2001      	moveq	r0, #1
 8100be4:	2000      	movne	r0, #0
 8100be6:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bea:	bf00      	nop

08100bec <__aeabi_dcmplt>:
 8100bec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bf0:	f7ff ffea 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100bf4:	bf34      	ite	cc
 8100bf6:	2001      	movcc	r0, #1
 8100bf8:	2000      	movcs	r0, #0
 8100bfa:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bfe:	bf00      	nop

08100c00 <__aeabi_dcmple>:
 8100c00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c04:	f7ff ffe0 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100c08:	bf94      	ite	ls
 8100c0a:	2001      	movls	r0, #1
 8100c0c:	2000      	movhi	r0, #0
 8100c0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c12:	bf00      	nop

08100c14 <__aeabi_dcmpge>:
 8100c14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c18:	f7ff ffce 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c1c:	bf94      	ite	ls
 8100c1e:	2001      	movls	r0, #1
 8100c20:	2000      	movhi	r0, #0
 8100c22:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c26:	bf00      	nop

08100c28 <__aeabi_dcmpgt>:
 8100c28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c2c:	f7ff ffc4 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c30:	bf34      	ite	cc
 8100c32:	2001      	movcc	r0, #1
 8100c34:	2000      	movcs	r0, #0
 8100c36:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c3a:	bf00      	nop

08100c3c <__aeabi_dcmpun>:
 8100c3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100c40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c44:	d102      	bne.n	8100c4c <__aeabi_dcmpun+0x10>
 8100c46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100c4a:	d10a      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100c50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c54:	d102      	bne.n	8100c5c <__aeabi_dcmpun+0x20>
 8100c56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100c5a:	d102      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c5c:	f04f 0000 	mov.w	r0, #0
 8100c60:	4770      	bx	lr
 8100c62:	f04f 0001 	mov.w	r0, #1
 8100c66:	4770      	bx	lr

08100c68 <__aeabi_d2iz>:
 8100c68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8100c6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8100c70:	d215      	bcs.n	8100c9e <__aeabi_d2iz+0x36>
 8100c72:	d511      	bpl.n	8100c98 <__aeabi_d2iz+0x30>
 8100c74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8100c78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8100c7c:	d912      	bls.n	8100ca4 <__aeabi_d2iz+0x3c>
 8100c7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8100c82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8100c86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8100c8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8100c8e:	fa23 f002 	lsr.w	r0, r3, r2
 8100c92:	bf18      	it	ne
 8100c94:	4240      	negne	r0, r0
 8100c96:	4770      	bx	lr
 8100c98:	f04f 0000 	mov.w	r0, #0
 8100c9c:	4770      	bx	lr
 8100c9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8100ca2:	d105      	bne.n	8100cb0 <__aeabi_d2iz+0x48>
 8100ca4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8100ca8:	bf08      	it	eq
 8100caa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8100cae:	4770      	bx	lr
 8100cb0:	f04f 0000 	mov.w	r0, #0
 8100cb4:	4770      	bx	lr
 8100cb6:	bf00      	nop

08100cb8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8100cb8:	b480      	push	{r7}
 8100cba:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8100cbc:	4b09      	ldr	r3, [pc, #36]	@ (8100ce4 <SystemInit+0x2c>)
 8100cbe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8100cc2:	4a08      	ldr	r2, [pc, #32]	@ (8100ce4 <SystemInit+0x2c>)
 8100cc4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8100cc8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 8100ccc:	4b05      	ldr	r3, [pc, #20]	@ (8100ce4 <SystemInit+0x2c>)
 8100cce:	691b      	ldr	r3, [r3, #16]
 8100cd0:	4a04      	ldr	r2, [pc, #16]	@ (8100ce4 <SystemInit+0x2c>)
 8100cd2:	f043 0310 	orr.w	r3, r3, #16
 8100cd6:	6113      	str	r3, [r2, #16]
#endif /* USER_VECT_TAB_ADDRESS */

#else
#error Please #define CORE_CM4 or CORE_CM7
#endif /* CORE_CM4 */
}
 8100cd8:	bf00      	nop
 8100cda:	46bd      	mov	sp, r7
 8100cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ce0:	4770      	bx	lr
 8100ce2:	bf00      	nop
 8100ce4:	e000ed00 	.word	0xe000ed00

08100ce8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8100ce8:	b580      	push	{r7, lr}
 8100cea:	b082      	sub	sp, #8
 8100cec:	af00      	add	r7, sp, #0

  /* USER CODE END 1 */

/* USER CODE BEGIN Boot_Mode_Sequence_1 */
  /*HW semaphore Clock enable*/
  __HAL_RCC_HSEM_CLK_ENABLE();
 8100cee:	4b1a      	ldr	r3, [pc, #104]	@ (8100d58 <main+0x70>)
 8100cf0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100cf4:	4a18      	ldr	r2, [pc, #96]	@ (8100d58 <main+0x70>)
 8100cf6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8100cfa:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8100cfe:	4b16      	ldr	r3, [pc, #88]	@ (8100d58 <main+0x70>)
 8100d00:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100d04:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8100d08:	607b      	str	r3, [r7, #4]
 8100d0a:	687b      	ldr	r3, [r7, #4]
  /* Activate HSEM notification for Cortex-M4*/
  HAL_HSEM_ActivateNotification(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d0c:	2001      	movs	r0, #1
 8100d0e:	f000 fb03 	bl	8101318 <HAL_HSEM_ActivateNotification>
  /*
  Domain D2 goes to STOP mode (Cortex-M4 in deep-sleep) waiting for Cortex-M7 to
  perform system initialization (system clock config, external memory configuration.. )
  */
  HAL_PWREx_ClearPendingEvent();
 8100d12:	f000 fb8d 	bl	8101430 <HAL_PWREx_ClearPendingEvent>
  HAL_PWREx_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_STOPENTRY_WFE, PWR_D2_DOMAIN);
 8100d16:	2201      	movs	r2, #1
 8100d18:	2102      	movs	r1, #2
 8100d1a:	2000      	movs	r0, #0
 8100d1c:	f000 fb0e 	bl	810133c <HAL_PWREx_EnterSTOPMode>
  /* Clear HSEM flag */
  __HAL_HSEM_CLEAR_FLAG(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d20:	4b0e      	ldr	r3, [pc, #56]	@ (8100d5c <main+0x74>)
 8100d22:	681b      	ldr	r3, [r3, #0]
 8100d24:	091b      	lsrs	r3, r3, #4
 8100d26:	f003 030f 	and.w	r3, r3, #15
 8100d2a:	2b07      	cmp	r3, #7
 8100d2c:	d108      	bne.n	8100d40 <main+0x58>
 8100d2e:	4b0c      	ldr	r3, [pc, #48]	@ (8100d60 <main+0x78>)
 8100d30:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 8100d34:	4a0a      	ldr	r2, [pc, #40]	@ (8100d60 <main+0x78>)
 8100d36:	f043 0301 	orr.w	r3, r3, #1
 8100d3a:	f8c2 3104 	str.w	r3, [r2, #260]	@ 0x104
 8100d3e:	e007      	b.n	8100d50 <main+0x68>
 8100d40:	4b07      	ldr	r3, [pc, #28]	@ (8100d60 <main+0x78>)
 8100d42:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8100d46:	4a06      	ldr	r2, [pc, #24]	@ (8100d60 <main+0x78>)
 8100d48:	f043 0301 	orr.w	r3, r3, #1
 8100d4c:	f8c2 3114 	str.w	r3, [r2, #276]	@ 0x114

/* USER CODE END Boot_Mode_Sequence_1 */
  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8100d50:	f000 f942 	bl	8100fd8 <HAL_Init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8100d54:	bf00      	nop
 8100d56:	e7fd      	b.n	8100d54 <main+0x6c>
 8100d58:	58024400 	.word	0x58024400
 8100d5c:	e000ed00 	.word	0xe000ed00
 8100d60:	58026400 	.word	0x58026400

08100d64 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8100d64:	b480      	push	{r7}
 8100d66:	b083      	sub	sp, #12
 8100d68:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8100d6a:	4b0a      	ldr	r3, [pc, #40]	@ (8100d94 <HAL_MspInit+0x30>)
 8100d6c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8100d70:	4a08      	ldr	r2, [pc, #32]	@ (8100d94 <HAL_MspInit+0x30>)
 8100d72:	f043 0302 	orr.w	r3, r3, #2
 8100d76:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8100d7a:	4b06      	ldr	r3, [pc, #24]	@ (8100d94 <HAL_MspInit+0x30>)
 8100d7c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8100d80:	f003 0302 	and.w	r3, r3, #2
 8100d84:	607b      	str	r3, [r7, #4]
 8100d86:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8100d88:	bf00      	nop
 8100d8a:	370c      	adds	r7, #12
 8100d8c:	46bd      	mov	sp, r7
 8100d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100d92:	4770      	bx	lr
 8100d94:	58024400 	.word	0x58024400

08100d98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8100d98:	b480      	push	{r7}
 8100d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8100d9c:	bf00      	nop
 8100d9e:	e7fd      	b.n	8100d9c <NMI_Handler+0x4>

08100da0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8100da0:	b480      	push	{r7}
 8100da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8100da4:	bf00      	nop
 8100da6:	e7fd      	b.n	8100da4 <HardFault_Handler+0x4>

08100da8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8100da8:	b480      	push	{r7}
 8100daa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8100dac:	bf00      	nop
 8100dae:	e7fd      	b.n	8100dac <MemManage_Handler+0x4>

08100db0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8100db0:	b480      	push	{r7}
 8100db2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8100db4:	bf00      	nop
 8100db6:	e7fd      	b.n	8100db4 <BusFault_Handler+0x4>

08100db8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8100db8:	b480      	push	{r7}
 8100dba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8100dbc:	bf00      	nop
 8100dbe:	e7fd      	b.n	8100dbc <UsageFault_Handler+0x4>

08100dc0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8100dc0:	b480      	push	{r7}
 8100dc2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8100dc4:	bf00      	nop
 8100dc6:	46bd      	mov	sp, r7
 8100dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dcc:	4770      	bx	lr

08100dce <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8100dce:	b480      	push	{r7}
 8100dd0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8100dd2:	bf00      	nop
 8100dd4:	46bd      	mov	sp, r7
 8100dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dda:	4770      	bx	lr

08100ddc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8100ddc:	b480      	push	{r7}
 8100dde:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8100de0:	bf00      	nop
 8100de2:	46bd      	mov	sp, r7
 8100de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100de8:	4770      	bx	lr

08100dea <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8100dea:	b580      	push	{r7, lr}
 8100dec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8100dee:	f000 f987 	bl	8101100 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8100df2:	bf00      	nop
 8100df4:	bd80      	pop	{r7, pc}

08100df6 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8100df6:	b480      	push	{r7}
 8100df8:	af00      	add	r7, sp, #0
	return 1;
 8100dfa:	2301      	movs	r3, #1
}
 8100dfc:	4618      	mov	r0, r3
 8100dfe:	46bd      	mov	sp, r7
 8100e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e04:	4770      	bx	lr

08100e06 <_kill>:

int _kill(int pid, int sig)
{
 8100e06:	b580      	push	{r7, lr}
 8100e08:	b082      	sub	sp, #8
 8100e0a:	af00      	add	r7, sp, #0
 8100e0c:	6078      	str	r0, [r7, #4]
 8100e0e:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8100e10:	f001 fa46 	bl	81022a0 <__errno>
 8100e14:	4603      	mov	r3, r0
 8100e16:	2216      	movs	r2, #22
 8100e18:	601a      	str	r2, [r3, #0]
	return -1;
 8100e1a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8100e1e:	4618      	mov	r0, r3
 8100e20:	3708      	adds	r7, #8
 8100e22:	46bd      	mov	sp, r7
 8100e24:	bd80      	pop	{r7, pc}

08100e26 <_exit>:

void _exit (int status)
{
 8100e26:	b580      	push	{r7, lr}
 8100e28:	b082      	sub	sp, #8
 8100e2a:	af00      	add	r7, sp, #0
 8100e2c:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8100e2e:	f04f 31ff 	mov.w	r1, #4294967295
 8100e32:	6878      	ldr	r0, [r7, #4]
 8100e34:	f7ff ffe7 	bl	8100e06 <_kill>
	while (1) {}		/* Make sure we hang here */
 8100e38:	bf00      	nop
 8100e3a:	e7fd      	b.n	8100e38 <_exit+0x12>

08100e3c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8100e3c:	b580      	push	{r7, lr}
 8100e3e:	b086      	sub	sp, #24
 8100e40:	af00      	add	r7, sp, #0
 8100e42:	60f8      	str	r0, [r7, #12]
 8100e44:	60b9      	str	r1, [r7, #8]
 8100e46:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e48:	2300      	movs	r3, #0
 8100e4a:	617b      	str	r3, [r7, #20]
 8100e4c:	e00a      	b.n	8100e64 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8100e4e:	f3af 8000 	nop.w
 8100e52:	4601      	mov	r1, r0
 8100e54:	68bb      	ldr	r3, [r7, #8]
 8100e56:	1c5a      	adds	r2, r3, #1
 8100e58:	60ba      	str	r2, [r7, #8]
 8100e5a:	b2ca      	uxtb	r2, r1
 8100e5c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e5e:	697b      	ldr	r3, [r7, #20]
 8100e60:	3301      	adds	r3, #1
 8100e62:	617b      	str	r3, [r7, #20]
 8100e64:	697a      	ldr	r2, [r7, #20]
 8100e66:	687b      	ldr	r3, [r7, #4]
 8100e68:	429a      	cmp	r2, r3
 8100e6a:	dbf0      	blt.n	8100e4e <_read+0x12>
	}

return len;
 8100e6c:	687b      	ldr	r3, [r7, #4]
}
 8100e6e:	4618      	mov	r0, r3
 8100e70:	3718      	adds	r7, #24
 8100e72:	46bd      	mov	sp, r7
 8100e74:	bd80      	pop	{r7, pc}

08100e76 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8100e76:	b580      	push	{r7, lr}
 8100e78:	b086      	sub	sp, #24
 8100e7a:	af00      	add	r7, sp, #0
 8100e7c:	60f8      	str	r0, [r7, #12]
 8100e7e:	60b9      	str	r1, [r7, #8]
 8100e80:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e82:	2300      	movs	r3, #0
 8100e84:	617b      	str	r3, [r7, #20]
 8100e86:	e009      	b.n	8100e9c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8100e88:	68bb      	ldr	r3, [r7, #8]
 8100e8a:	1c5a      	adds	r2, r3, #1
 8100e8c:	60ba      	str	r2, [r7, #8]
 8100e8e:	781b      	ldrb	r3, [r3, #0]
 8100e90:	4618      	mov	r0, r3
 8100e92:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e96:	697b      	ldr	r3, [r7, #20]
 8100e98:	3301      	adds	r3, #1
 8100e9a:	617b      	str	r3, [r7, #20]
 8100e9c:	697a      	ldr	r2, [r7, #20]
 8100e9e:	687b      	ldr	r3, [r7, #4]
 8100ea0:	429a      	cmp	r2, r3
 8100ea2:	dbf1      	blt.n	8100e88 <_write+0x12>
	}
	return len;
 8100ea4:	687b      	ldr	r3, [r7, #4]
}
 8100ea6:	4618      	mov	r0, r3
 8100ea8:	3718      	adds	r7, #24
 8100eaa:	46bd      	mov	sp, r7
 8100eac:	bd80      	pop	{r7, pc}

08100eae <_close>:

int _close(int file)
{
 8100eae:	b480      	push	{r7}
 8100eb0:	b083      	sub	sp, #12
 8100eb2:	af00      	add	r7, sp, #0
 8100eb4:	6078      	str	r0, [r7, #4]
	return -1;
 8100eb6:	f04f 33ff 	mov.w	r3, #4294967295
}
 8100eba:	4618      	mov	r0, r3
 8100ebc:	370c      	adds	r7, #12
 8100ebe:	46bd      	mov	sp, r7
 8100ec0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ec4:	4770      	bx	lr

08100ec6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8100ec6:	b480      	push	{r7}
 8100ec8:	b083      	sub	sp, #12
 8100eca:	af00      	add	r7, sp, #0
 8100ecc:	6078      	str	r0, [r7, #4]
 8100ece:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8100ed0:	683b      	ldr	r3, [r7, #0]
 8100ed2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8100ed6:	605a      	str	r2, [r3, #4]
	return 0;
 8100ed8:	2300      	movs	r3, #0
}
 8100eda:	4618      	mov	r0, r3
 8100edc:	370c      	adds	r7, #12
 8100ede:	46bd      	mov	sp, r7
 8100ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ee4:	4770      	bx	lr

08100ee6 <_isatty>:

int _isatty(int file)
{
 8100ee6:	b480      	push	{r7}
 8100ee8:	b083      	sub	sp, #12
 8100eea:	af00      	add	r7, sp, #0
 8100eec:	6078      	str	r0, [r7, #4]
	return 1;
 8100eee:	2301      	movs	r3, #1
}
 8100ef0:	4618      	mov	r0, r3
 8100ef2:	370c      	adds	r7, #12
 8100ef4:	46bd      	mov	sp, r7
 8100ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100efa:	4770      	bx	lr

08100efc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8100efc:	b480      	push	{r7}
 8100efe:	b085      	sub	sp, #20
 8100f00:	af00      	add	r7, sp, #0
 8100f02:	60f8      	str	r0, [r7, #12]
 8100f04:	60b9      	str	r1, [r7, #8]
 8100f06:	607a      	str	r2, [r7, #4]
	return 0;
 8100f08:	2300      	movs	r3, #0
}
 8100f0a:	4618      	mov	r0, r3
 8100f0c:	3714      	adds	r7, #20
 8100f0e:	46bd      	mov	sp, r7
 8100f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f14:	4770      	bx	lr
	...

08100f18 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8100f18:	b580      	push	{r7, lr}
 8100f1a:	b086      	sub	sp, #24
 8100f1c:	af00      	add	r7, sp, #0
 8100f1e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8100f20:	4a14      	ldr	r2, [pc, #80]	@ (8100f74 <_sbrk+0x5c>)
 8100f22:	4b15      	ldr	r3, [pc, #84]	@ (8100f78 <_sbrk+0x60>)
 8100f24:	1ad3      	subs	r3, r2, r3
 8100f26:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8100f28:	697b      	ldr	r3, [r7, #20]
 8100f2a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8100f2c:	4b13      	ldr	r3, [pc, #76]	@ (8100f7c <_sbrk+0x64>)
 8100f2e:	681b      	ldr	r3, [r3, #0]
 8100f30:	2b00      	cmp	r3, #0
 8100f32:	d102      	bne.n	8100f3a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8100f34:	4b11      	ldr	r3, [pc, #68]	@ (8100f7c <_sbrk+0x64>)
 8100f36:	4a12      	ldr	r2, [pc, #72]	@ (8100f80 <_sbrk+0x68>)
 8100f38:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8100f3a:	4b10      	ldr	r3, [pc, #64]	@ (8100f7c <_sbrk+0x64>)
 8100f3c:	681a      	ldr	r2, [r3, #0]
 8100f3e:	687b      	ldr	r3, [r7, #4]
 8100f40:	4413      	add	r3, r2
 8100f42:	693a      	ldr	r2, [r7, #16]
 8100f44:	429a      	cmp	r2, r3
 8100f46:	d207      	bcs.n	8100f58 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8100f48:	f001 f9aa 	bl	81022a0 <__errno>
 8100f4c:	4603      	mov	r3, r0
 8100f4e:	220c      	movs	r2, #12
 8100f50:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8100f52:	f04f 33ff 	mov.w	r3, #4294967295
 8100f56:	e009      	b.n	8100f6c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8100f58:	4b08      	ldr	r3, [pc, #32]	@ (8100f7c <_sbrk+0x64>)
 8100f5a:	681b      	ldr	r3, [r3, #0]
 8100f5c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8100f5e:	4b07      	ldr	r3, [pc, #28]	@ (8100f7c <_sbrk+0x64>)
 8100f60:	681a      	ldr	r2, [r3, #0]
 8100f62:	687b      	ldr	r3, [r7, #4]
 8100f64:	4413      	add	r3, r2
 8100f66:	4a05      	ldr	r2, [pc, #20]	@ (8100f7c <_sbrk+0x64>)
 8100f68:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8100f6a:	68fb      	ldr	r3, [r7, #12]
}
 8100f6c:	4618      	mov	r0, r3
 8100f6e:	3718      	adds	r7, #24
 8100f70:	46bd      	mov	sp, r7
 8100f72:	bd80      	pop	{r7, pc}
 8100f74:	10048000 	.word	0x10048000
 8100f78:	00000400 	.word	0x00000400
 8100f7c:	100001f4 	.word	0x100001f4
 8100f80:	10000348 	.word	0x10000348

08100f84 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8100f84:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8100fbc <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8100f88:	f7ff fe96 	bl	8100cb8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8100f8c:	480c      	ldr	r0, [pc, #48]	@ (8100fc0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8100f8e:	490d      	ldr	r1, [pc, #52]	@ (8100fc4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8100f90:	4a0d      	ldr	r2, [pc, #52]	@ (8100fc8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8100f92:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8100f94:	e002      	b.n	8100f9c <LoopCopyDataInit>

08100f96 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8100f96:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8100f98:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8100f9a:	3304      	adds	r3, #4

08100f9c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8100f9c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8100f9e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8100fa0:	d3f9      	bcc.n	8100f96 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8100fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8100fcc <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8100fa4:	4c0a      	ldr	r4, [pc, #40]	@ (8100fd0 <LoopFillZerobss+0x22>)
  movs r3, #0
 8100fa6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8100fa8:	e001      	b.n	8100fae <LoopFillZerobss>

08100faa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8100faa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8100fac:	3204      	adds	r2, #4

08100fae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8100fae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8100fb0:	d3fb      	bcc.n	8100faa <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8100fb2:	f001 f97b 	bl	81022ac <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8100fb6:	f7ff fe97 	bl	8100ce8 <main>
  bx  lr
 8100fba:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8100fbc:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 8100fc0:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8100fc4:	100001d8 	.word	0x100001d8
  ldr r2, =_sidata
 8100fc8:	081043e8 	.word	0x081043e8
  ldr r2, =_sbss
 8100fcc:	100001d8 	.word	0x100001d8
  ldr r4, =_ebss
 8100fd0:	10000348 	.word	0x10000348

08100fd4 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8100fd4:	e7fe      	b.n	8100fd4 <ADC3_IRQHandler>
	...

08100fd8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8100fd8:	b580      	push	{r7, lr}
 8100fda:	b082      	sub	sp, #8
 8100fdc:	af00      	add	r7, sp, #0

uint32_t common_system_clock;

#if defined(DUAL_CORE) && defined(CORE_CM4)
   /* Configure Cortex-M4 Instruction cache through ART accelerator */
   __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 8100fde:	4b28      	ldr	r3, [pc, #160]	@ (8101080 <HAL_Init+0xa8>)
 8100fe0:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8100fe4:	4a26      	ldr	r2, [pc, #152]	@ (8101080 <HAL_Init+0xa8>)
 8100fe6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8100fea:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8100fee:	4b24      	ldr	r3, [pc, #144]	@ (8101080 <HAL_Init+0xa8>)
 8100ff0:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8100ff4:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8100ff8:	603b      	str	r3, [r7, #0]
 8100ffa:	683b      	ldr	r3, [r7, #0]
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
 8100ffc:	4b21      	ldr	r3, [pc, #132]	@ (8101084 <HAL_Init+0xac>)
 8100ffe:	681b      	ldr	r3, [r3, #0]
 8101000:	f423 237f 	bic.w	r3, r3, #1044480	@ 0xff000
 8101004:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8101008:	4a1e      	ldr	r2, [pc, #120]	@ (8101084 <HAL_Init+0xac>)
 810100a:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 810100e:	6013      	str	r3, [r2, #0]
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 8101010:	4b1c      	ldr	r3, [pc, #112]	@ (8101084 <HAL_Init+0xac>)
 8101012:	681b      	ldr	r3, [r3, #0]
 8101014:	4a1b      	ldr	r2, [pc, #108]	@ (8101084 <HAL_Init+0xac>)
 8101016:	f043 0301 	orr.w	r3, r3, #1
 810101a:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 810101c:	2003      	movs	r0, #3
 810101e:	f000 f935 	bl	810128c <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8101022:	f000 fa13 	bl	810144c <HAL_RCC_GetSysClockFreq>
 8101026:	4602      	mov	r2, r0
 8101028:	4b15      	ldr	r3, [pc, #84]	@ (8101080 <HAL_Init+0xa8>)
 810102a:	699b      	ldr	r3, [r3, #24]
 810102c:	0a1b      	lsrs	r3, r3, #8
 810102e:	f003 030f 	and.w	r3, r3, #15
 8101032:	4915      	ldr	r1, [pc, #84]	@ (8101088 <HAL_Init+0xb0>)
 8101034:	5ccb      	ldrb	r3, [r1, r3]
 8101036:	f003 031f 	and.w	r3, r3, #31
 810103a:	fa22 f303 	lsr.w	r3, r2, r3
 810103e:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8101040:	4b0f      	ldr	r3, [pc, #60]	@ (8101080 <HAL_Init+0xa8>)
 8101042:	699b      	ldr	r3, [r3, #24]
 8101044:	f003 030f 	and.w	r3, r3, #15
 8101048:	4a0f      	ldr	r2, [pc, #60]	@ (8101088 <HAL_Init+0xb0>)
 810104a:	5cd3      	ldrb	r3, [r2, r3]
 810104c:	f003 031f 	and.w	r3, r3, #31
 8101050:	687a      	ldr	r2, [r7, #4]
 8101052:	fa22 f303 	lsr.w	r3, r2, r3
 8101056:	4a0d      	ldr	r2, [pc, #52]	@ (810108c <HAL_Init+0xb4>)
 8101058:	6013      	str	r3, [r2, #0]
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
 810105a:	4b0c      	ldr	r3, [pc, #48]	@ (810108c <HAL_Init+0xb4>)
 810105c:	681b      	ldr	r3, [r3, #0]
 810105e:	4a0c      	ldr	r2, [pc, #48]	@ (8101090 <HAL_Init+0xb8>)
 8101060:	6013      	str	r3, [r2, #0]
#else
  SystemCoreClock = common_system_clock;
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8101062:	2000      	movs	r0, #0
 8101064:	f000 f816 	bl	8101094 <HAL_InitTick>
 8101068:	4603      	mov	r3, r0
 810106a:	2b00      	cmp	r3, #0
 810106c:	d001      	beq.n	8101072 <HAL_Init+0x9a>
  {
    return HAL_ERROR;
 810106e:	2301      	movs	r3, #1
 8101070:	e002      	b.n	8101078 <HAL_Init+0xa0>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8101072:	f7ff fe77 	bl	8100d64 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8101076:	2300      	movs	r3, #0
}
 8101078:	4618      	mov	r0, r3
 810107a:	3708      	adds	r7, #8
 810107c:	46bd      	mov	sp, r7
 810107e:	bd80      	pop	{r7, pc}
 8101080:	58024400 	.word	0x58024400
 8101084:	40024400 	.word	0x40024400
 8101088:	08104058 	.word	0x08104058
 810108c:	10000004 	.word	0x10000004
 8101090:	10000000 	.word	0x10000000

08101094 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8101094:	b580      	push	{r7, lr}
 8101096:	b082      	sub	sp, #8
 8101098:	af00      	add	r7, sp, #0
 810109a:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 810109c:	4b15      	ldr	r3, [pc, #84]	@ (81010f4 <HAL_InitTick+0x60>)
 810109e:	781b      	ldrb	r3, [r3, #0]
 81010a0:	2b00      	cmp	r3, #0
 81010a2:	d101      	bne.n	81010a8 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 81010a4:	2301      	movs	r3, #1
 81010a6:	e021      	b.n	81010ec <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 81010a8:	4b13      	ldr	r3, [pc, #76]	@ (81010f8 <HAL_InitTick+0x64>)
 81010aa:	681a      	ldr	r2, [r3, #0]
 81010ac:	4b11      	ldr	r3, [pc, #68]	@ (81010f4 <HAL_InitTick+0x60>)
 81010ae:	781b      	ldrb	r3, [r3, #0]
 81010b0:	4619      	mov	r1, r3
 81010b2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 81010b6:	fbb3 f3f1 	udiv	r3, r3, r1
 81010ba:	fbb2 f3f3 	udiv	r3, r2, r3
 81010be:	4618      	mov	r0, r3
 81010c0:	f000 f909 	bl	81012d6 <HAL_SYSTICK_Config>
 81010c4:	4603      	mov	r3, r0
 81010c6:	2b00      	cmp	r3, #0
 81010c8:	d001      	beq.n	81010ce <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 81010ca:	2301      	movs	r3, #1
 81010cc:	e00e      	b.n	81010ec <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 81010ce:	687b      	ldr	r3, [r7, #4]
 81010d0:	2b0f      	cmp	r3, #15
 81010d2:	d80a      	bhi.n	81010ea <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 81010d4:	2200      	movs	r2, #0
 81010d6:	6879      	ldr	r1, [r7, #4]
 81010d8:	f04f 30ff 	mov.w	r0, #4294967295
 81010dc:	f000 f8e1 	bl	81012a2 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 81010e0:	4a06      	ldr	r2, [pc, #24]	@ (81010fc <HAL_InitTick+0x68>)
 81010e2:	687b      	ldr	r3, [r7, #4]
 81010e4:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 81010e6:	2300      	movs	r3, #0
 81010e8:	e000      	b.n	81010ec <HAL_InitTick+0x58>
    return HAL_ERROR;
 81010ea:	2301      	movs	r3, #1
}
 81010ec:	4618      	mov	r0, r3
 81010ee:	3708      	adds	r7, #8
 81010f0:	46bd      	mov	sp, r7
 81010f2:	bd80      	pop	{r7, pc}
 81010f4:	1000000c 	.word	0x1000000c
 81010f8:	10000000 	.word	0x10000000
 81010fc:	10000008 	.word	0x10000008

08101100 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8101100:	b480      	push	{r7}
 8101102:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8101104:	4b06      	ldr	r3, [pc, #24]	@ (8101120 <HAL_IncTick+0x20>)
 8101106:	781b      	ldrb	r3, [r3, #0]
 8101108:	461a      	mov	r2, r3
 810110a:	4b06      	ldr	r3, [pc, #24]	@ (8101124 <HAL_IncTick+0x24>)
 810110c:	681b      	ldr	r3, [r3, #0]
 810110e:	4413      	add	r3, r2
 8101110:	4a04      	ldr	r2, [pc, #16]	@ (8101124 <HAL_IncTick+0x24>)
 8101112:	6013      	str	r3, [r2, #0]
}
 8101114:	bf00      	nop
 8101116:	46bd      	mov	sp, r7
 8101118:	f85d 7b04 	ldr.w	r7, [sp], #4
 810111c:	4770      	bx	lr
 810111e:	bf00      	nop
 8101120:	1000000c 	.word	0x1000000c
 8101124:	100001f8 	.word	0x100001f8

08101128 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8101128:	b480      	push	{r7}
 810112a:	b085      	sub	sp, #20
 810112c:	af00      	add	r7, sp, #0
 810112e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8101130:	687b      	ldr	r3, [r7, #4]
 8101132:	f003 0307 	and.w	r3, r3, #7
 8101136:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8101138:	4b0c      	ldr	r3, [pc, #48]	@ (810116c <__NVIC_SetPriorityGrouping+0x44>)
 810113a:	68db      	ldr	r3, [r3, #12]
 810113c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 810113e:	68ba      	ldr	r2, [r7, #8]
 8101140:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8101144:	4013      	ands	r3, r2
 8101146:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8101148:	68fb      	ldr	r3, [r7, #12]
 810114a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 810114c:	68bb      	ldr	r3, [r7, #8]
 810114e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8101150:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8101154:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8101158:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 810115a:	4a04      	ldr	r2, [pc, #16]	@ (810116c <__NVIC_SetPriorityGrouping+0x44>)
 810115c:	68bb      	ldr	r3, [r7, #8]
 810115e:	60d3      	str	r3, [r2, #12]
}
 8101160:	bf00      	nop
 8101162:	3714      	adds	r7, #20
 8101164:	46bd      	mov	sp, r7
 8101166:	f85d 7b04 	ldr.w	r7, [sp], #4
 810116a:	4770      	bx	lr
 810116c:	e000ed00 	.word	0xe000ed00

08101170 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8101170:	b480      	push	{r7}
 8101172:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8101174:	4b04      	ldr	r3, [pc, #16]	@ (8101188 <__NVIC_GetPriorityGrouping+0x18>)
 8101176:	68db      	ldr	r3, [r3, #12]
 8101178:	0a1b      	lsrs	r3, r3, #8
 810117a:	f003 0307 	and.w	r3, r3, #7
}
 810117e:	4618      	mov	r0, r3
 8101180:	46bd      	mov	sp, r7
 8101182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101186:	4770      	bx	lr
 8101188:	e000ed00 	.word	0xe000ed00

0810118c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 810118c:	b480      	push	{r7}
 810118e:	b083      	sub	sp, #12
 8101190:	af00      	add	r7, sp, #0
 8101192:	4603      	mov	r3, r0
 8101194:	6039      	str	r1, [r7, #0]
 8101196:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8101198:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810119c:	2b00      	cmp	r3, #0
 810119e:	db0a      	blt.n	81011b6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 81011a0:	683b      	ldr	r3, [r7, #0]
 81011a2:	b2da      	uxtb	r2, r3
 81011a4:	490c      	ldr	r1, [pc, #48]	@ (81011d8 <__NVIC_SetPriority+0x4c>)
 81011a6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 81011aa:	0112      	lsls	r2, r2, #4
 81011ac:	b2d2      	uxtb	r2, r2
 81011ae:	440b      	add	r3, r1
 81011b0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 81011b4:	e00a      	b.n	81011cc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 81011b6:	683b      	ldr	r3, [r7, #0]
 81011b8:	b2da      	uxtb	r2, r3
 81011ba:	4908      	ldr	r1, [pc, #32]	@ (81011dc <__NVIC_SetPriority+0x50>)
 81011bc:	88fb      	ldrh	r3, [r7, #6]
 81011be:	f003 030f 	and.w	r3, r3, #15
 81011c2:	3b04      	subs	r3, #4
 81011c4:	0112      	lsls	r2, r2, #4
 81011c6:	b2d2      	uxtb	r2, r2
 81011c8:	440b      	add	r3, r1
 81011ca:	761a      	strb	r2, [r3, #24]
}
 81011cc:	bf00      	nop
 81011ce:	370c      	adds	r7, #12
 81011d0:	46bd      	mov	sp, r7
 81011d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 81011d6:	4770      	bx	lr
 81011d8:	e000e100 	.word	0xe000e100
 81011dc:	e000ed00 	.word	0xe000ed00

081011e0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 81011e0:	b480      	push	{r7}
 81011e2:	b089      	sub	sp, #36	@ 0x24
 81011e4:	af00      	add	r7, sp, #0
 81011e6:	60f8      	str	r0, [r7, #12]
 81011e8:	60b9      	str	r1, [r7, #8]
 81011ea:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 81011ec:	68fb      	ldr	r3, [r7, #12]
 81011ee:	f003 0307 	and.w	r3, r3, #7
 81011f2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 81011f4:	69fb      	ldr	r3, [r7, #28]
 81011f6:	f1c3 0307 	rsb	r3, r3, #7
 81011fa:	2b04      	cmp	r3, #4
 81011fc:	bf28      	it	cs
 81011fe:	2304      	movcs	r3, #4
 8101200:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8101202:	69fb      	ldr	r3, [r7, #28]
 8101204:	3304      	adds	r3, #4
 8101206:	2b06      	cmp	r3, #6
 8101208:	d902      	bls.n	8101210 <NVIC_EncodePriority+0x30>
 810120a:	69fb      	ldr	r3, [r7, #28]
 810120c:	3b03      	subs	r3, #3
 810120e:	e000      	b.n	8101212 <NVIC_EncodePriority+0x32>
 8101210:	2300      	movs	r3, #0
 8101212:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8101214:	f04f 32ff 	mov.w	r2, #4294967295
 8101218:	69bb      	ldr	r3, [r7, #24]
 810121a:	fa02 f303 	lsl.w	r3, r2, r3
 810121e:	43da      	mvns	r2, r3
 8101220:	68bb      	ldr	r3, [r7, #8]
 8101222:	401a      	ands	r2, r3
 8101224:	697b      	ldr	r3, [r7, #20]
 8101226:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8101228:	f04f 31ff 	mov.w	r1, #4294967295
 810122c:	697b      	ldr	r3, [r7, #20]
 810122e:	fa01 f303 	lsl.w	r3, r1, r3
 8101232:	43d9      	mvns	r1, r3
 8101234:	687b      	ldr	r3, [r7, #4]
 8101236:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8101238:	4313      	orrs	r3, r2
         );
}
 810123a:	4618      	mov	r0, r3
 810123c:	3724      	adds	r7, #36	@ 0x24
 810123e:	46bd      	mov	sp, r7
 8101240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101244:	4770      	bx	lr
	...

08101248 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8101248:	b580      	push	{r7, lr}
 810124a:	b082      	sub	sp, #8
 810124c:	af00      	add	r7, sp, #0
 810124e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8101250:	687b      	ldr	r3, [r7, #4]
 8101252:	3b01      	subs	r3, #1
 8101254:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8101258:	d301      	bcc.n	810125e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 810125a:	2301      	movs	r3, #1
 810125c:	e00f      	b.n	810127e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 810125e:	4a0a      	ldr	r2, [pc, #40]	@ (8101288 <SysTick_Config+0x40>)
 8101260:	687b      	ldr	r3, [r7, #4]
 8101262:	3b01      	subs	r3, #1
 8101264:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8101266:	210f      	movs	r1, #15
 8101268:	f04f 30ff 	mov.w	r0, #4294967295
 810126c:	f7ff ff8e 	bl	810118c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8101270:	4b05      	ldr	r3, [pc, #20]	@ (8101288 <SysTick_Config+0x40>)
 8101272:	2200      	movs	r2, #0
 8101274:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8101276:	4b04      	ldr	r3, [pc, #16]	@ (8101288 <SysTick_Config+0x40>)
 8101278:	2207      	movs	r2, #7
 810127a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 810127c:	2300      	movs	r3, #0
}
 810127e:	4618      	mov	r0, r3
 8101280:	3708      	adds	r7, #8
 8101282:	46bd      	mov	sp, r7
 8101284:	bd80      	pop	{r7, pc}
 8101286:	bf00      	nop
 8101288:	e000e010 	.word	0xe000e010

0810128c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 810128c:	b580      	push	{r7, lr}
 810128e:	b082      	sub	sp, #8
 8101290:	af00      	add	r7, sp, #0
 8101292:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8101294:	6878      	ldr	r0, [r7, #4]
 8101296:	f7ff ff47 	bl	8101128 <__NVIC_SetPriorityGrouping>
}
 810129a:	bf00      	nop
 810129c:	3708      	adds	r7, #8
 810129e:	46bd      	mov	sp, r7
 81012a0:	bd80      	pop	{r7, pc}

081012a2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 81012a2:	b580      	push	{r7, lr}
 81012a4:	b086      	sub	sp, #24
 81012a6:	af00      	add	r7, sp, #0
 81012a8:	4603      	mov	r3, r0
 81012aa:	60b9      	str	r1, [r7, #8]
 81012ac:	607a      	str	r2, [r7, #4]
 81012ae:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 81012b0:	f7ff ff5e 	bl	8101170 <__NVIC_GetPriorityGrouping>
 81012b4:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 81012b6:	687a      	ldr	r2, [r7, #4]
 81012b8:	68b9      	ldr	r1, [r7, #8]
 81012ba:	6978      	ldr	r0, [r7, #20]
 81012bc:	f7ff ff90 	bl	81011e0 <NVIC_EncodePriority>
 81012c0:	4602      	mov	r2, r0
 81012c2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 81012c6:	4611      	mov	r1, r2
 81012c8:	4618      	mov	r0, r3
 81012ca:	f7ff ff5f 	bl	810118c <__NVIC_SetPriority>
}
 81012ce:	bf00      	nop
 81012d0:	3718      	adds	r7, #24
 81012d2:	46bd      	mov	sp, r7
 81012d4:	bd80      	pop	{r7, pc}

081012d6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 81012d6:	b580      	push	{r7, lr}
 81012d8:	b082      	sub	sp, #8
 81012da:	af00      	add	r7, sp, #0
 81012dc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 81012de:	6878      	ldr	r0, [r7, #4]
 81012e0:	f7ff ffb2 	bl	8101248 <SysTick_Config>
 81012e4:	4603      	mov	r3, r0
}
 81012e6:	4618      	mov	r0, r3
 81012e8:	3708      	adds	r7, #8
 81012ea:	46bd      	mov	sp, r7
 81012ec:	bd80      	pop	{r7, pc}
	...

081012f0 <HAL_GetCurrentCPUID>:
/**
  * @brief  Returns the current CPU ID.
  * @retval CPU identifier
  */
uint32_t HAL_GetCurrentCPUID(void)
{
 81012f0:	b480      	push	{r7}
 81012f2:	af00      	add	r7, sp, #0
  if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 81012f4:	4b07      	ldr	r3, [pc, #28]	@ (8101314 <HAL_GetCurrentCPUID+0x24>)
 81012f6:	681b      	ldr	r3, [r3, #0]
 81012f8:	091b      	lsrs	r3, r3, #4
 81012fa:	f003 030f 	and.w	r3, r3, #15
 81012fe:	2b07      	cmp	r3, #7
 8101300:	d101      	bne.n	8101306 <HAL_GetCurrentCPUID+0x16>
  {
    return  CM7_CPUID;
 8101302:	2303      	movs	r3, #3
 8101304:	e000      	b.n	8101308 <HAL_GetCurrentCPUID+0x18>
  }
  else
  {
    return CM4_CPUID;
 8101306:	2301      	movs	r3, #1
  }
}
 8101308:	4618      	mov	r0, r3
 810130a:	46bd      	mov	sp, r7
 810130c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101310:	4770      	bx	lr
 8101312:	bf00      	nop
 8101314:	e000ed00 	.word	0xe000ed00

08101318 <HAL_HSEM_ActivateNotification>:
  * @brief  Activate Semaphore release Notification for a given Semaphores Mask .
  * @param  SemMask: Mask of Released semaphores
  * @retval Semaphore Key
  */
void HAL_HSEM_ActivateNotification(uint32_t SemMask)
{
 8101318:	b480      	push	{r7}
 810131a:	b083      	sub	sp, #12
 810131c:	af00      	add	r7, sp, #0
 810131e:	6078      	str	r0, [r7, #4]
  {
    /*Use interrupt line 1 for CPU2 Master*/
    HSEM->C2IER |= SemMask;
  }
#else
  HSEM_COMMON->IER |= SemMask;
 8101320:	4b05      	ldr	r3, [pc, #20]	@ (8101338 <HAL_HSEM_ActivateNotification+0x20>)
 8101322:	681a      	ldr	r2, [r3, #0]
 8101324:	4904      	ldr	r1, [pc, #16]	@ (8101338 <HAL_HSEM_ActivateNotification+0x20>)
 8101326:	687b      	ldr	r3, [r7, #4]
 8101328:	4313      	orrs	r3, r2
 810132a:	600b      	str	r3, [r1, #0]
#endif
}
 810132c:	bf00      	nop
 810132e:	370c      	adds	r7, #12
 8101330:	46bd      	mov	sp, r7
 8101332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101336:	4770      	bx	lr
 8101338:	58026510 	.word	0x58026510

0810133c <HAL_PWREx_EnterSTOPMode>:
  *            @arg PWR_D2_DOMAIN : Enter D2 Domain to DSTOP mode.
  *            @arg PWR_D3_DOMAIN : Enter D3/SRD Domain to DSTOP mode.
  * @retval None.
  */
void HAL_PWREx_EnterSTOPMode (uint32_t Regulator, uint8_t STOPEntry, uint32_t Domain)
{
 810133c:	b580      	push	{r7, lr}
 810133e:	b084      	sub	sp, #16
 8101340:	af00      	add	r7, sp, #0
 8101342:	60f8      	str	r0, [r7, #12]
 8101344:	460b      	mov	r3, r1
 8101346:	607a      	str	r2, [r7, #4]
 8101348:	72fb      	strb	r3, [r7, #11]
  assert_param (IS_PWR_REGULATOR (Regulator));
  assert_param (IS_PWR_STOP_ENTRY (STOPEntry));
  assert_param (IS_PWR_DOMAIN (Domain));

  /* Select the regulator state in Stop mode */
  MODIFY_REG (PWR->CR1, PWR_CR1_LPDS, Regulator);
 810134a:	4b37      	ldr	r3, [pc, #220]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 810134c:	681b      	ldr	r3, [r3, #0]
 810134e:	f023 0201 	bic.w	r2, r3, #1
 8101352:	4935      	ldr	r1, [pc, #212]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101354:	68fb      	ldr	r3, [r7, #12]
 8101356:	4313      	orrs	r3, r2
 8101358:	600b      	str	r3, [r1, #0]

  /* Select the domain Power Down DeepSleep */
  if (Domain == PWR_D1_DOMAIN)
 810135a:	687b      	ldr	r3, [r7, #4]
 810135c:	2b00      	cmp	r3, #0
 810135e:	d123      	bne.n	81013a8 <HAL_PWREx_EnterSTOPMode+0x6c>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM7_CPUID)
 8101360:	f7ff ffc6 	bl	81012f0 <HAL_GetCurrentCPUID>
 8101364:	4603      	mov	r3, r0
 8101366:	2b03      	cmp	r3, #3
 8101368:	d158      	bne.n	810141c <HAL_PWREx_EnterSTOPMode+0xe0>
      return;
    }
#endif /* defined (DUAL_CORE) */

    /* Keep DSTOP mode when D1/CD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D1);
 810136a:	4b2f      	ldr	r3, [pc, #188]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 810136c:	691b      	ldr	r3, [r3, #16]
 810136e:	4a2e      	ldr	r2, [pc, #184]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101370:	f023 0301 	bic.w	r3, r3, #1
 8101374:	6113      	str	r3, [r2, #16]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 8101376:	4b2d      	ldr	r3, [pc, #180]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101378:	691b      	ldr	r3, [r3, #16]
 810137a:	4a2c      	ldr	r2, [pc, #176]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 810137c:	f043 0304 	orr.w	r3, r3, #4
 8101380:	6113      	str	r3, [r2, #16]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8101382:	f3bf 8f4f 	dsb	sy
}
 8101386:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8101388:	f3bf 8f6f 	isb	sy
}
 810138c:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 810138e:	7afb      	ldrb	r3, [r7, #11]
 8101390:	2b01      	cmp	r3, #1
 8101392:	d101      	bne.n	8101398 <HAL_PWREx_EnterSTOPMode+0x5c>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 8101394:	bf30      	wfi
 8101396:	e000      	b.n	810139a <HAL_PWREx_EnterSTOPMode+0x5e>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 8101398:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810139a:	4b24      	ldr	r3, [pc, #144]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 810139c:	691b      	ldr	r3, [r3, #16]
 810139e:	4a23      	ldr	r2, [pc, #140]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013a0:	f023 0304 	bic.w	r3, r3, #4
 81013a4:	6113      	str	r3, [r2, #16]
 81013a6:	e03c      	b.n	8101422 <HAL_PWREx_EnterSTOPMode+0xe6>
  }
#if defined (PWR_CPUCR_PDDS_D2)
  else if (Domain == PWR_D2_DOMAIN)
 81013a8:	687b      	ldr	r3, [r7, #4]
 81013aa:	2b01      	cmp	r3, #1
 81013ac:	d123      	bne.n	81013f6 <HAL_PWREx_EnterSTOPMode+0xba>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM4_CPUID)
 81013ae:	f7ff ff9f 	bl	81012f0 <HAL_GetCurrentCPUID>
 81013b2:	4603      	mov	r3, r0
 81013b4:	2b01      	cmp	r3, #1
 81013b6:	d133      	bne.n	8101420 <HAL_PWREx_EnterSTOPMode+0xe4>
      */
      return;
    }

    /* Keep DSTOP mode when D2 domain enters Deepsleep */
    CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D2);
 81013b8:	4b1b      	ldr	r3, [pc, #108]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 81013ba:	695b      	ldr	r3, [r3, #20]
 81013bc:	4a1a      	ldr	r2, [pc, #104]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 81013be:	f023 0302 	bic.w	r3, r3, #2
 81013c2:	6153      	str	r3, [r2, #20]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 81013c4:	4b19      	ldr	r3, [pc, #100]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013c6:	691b      	ldr	r3, [r3, #16]
 81013c8:	4a18      	ldr	r2, [pc, #96]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013ca:	f043 0304 	orr.w	r3, r3, #4
 81013ce:	6113      	str	r3, [r2, #16]
  __ASM volatile ("dsb 0xF":::"memory");
 81013d0:	f3bf 8f4f 	dsb	sy
}
 81013d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 81013d6:	f3bf 8f6f 	isb	sy
}
 81013da:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 81013dc:	7afb      	ldrb	r3, [r7, #11]
 81013de:	2b01      	cmp	r3, #1
 81013e0:	d101      	bne.n	81013e6 <HAL_PWREx_EnterSTOPMode+0xaa>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 81013e2:	bf30      	wfi
 81013e4:	e000      	b.n	81013e8 <HAL_PWREx_EnterSTOPMode+0xac>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 81013e6:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 81013e8:	4b10      	ldr	r3, [pc, #64]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013ea:	691b      	ldr	r3, [r3, #16]
 81013ec:	4a0f      	ldr	r2, [pc, #60]	@ (810142c <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013ee:	f023 0304 	bic.w	r3, r3, #4
 81013f2:	6113      	str	r3, [r2, #16]
 81013f4:	e015      	b.n	8101422 <HAL_PWREx_EnterSTOPMode+0xe6>
#endif /* defined (PWR_CPUCR_PDDS_D2) */
  else
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () == CM7_CPUID)
 81013f6:	f7ff ff7b 	bl	81012f0 <HAL_GetCurrentCPUID>
 81013fa:	4603      	mov	r3, r0
 81013fc:	2b03      	cmp	r3, #3
 81013fe:	d106      	bne.n	810140e <HAL_PWREx_EnterSTOPMode+0xd2>
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
 8101400:	4b09      	ldr	r3, [pc, #36]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101402:	691b      	ldr	r3, [r3, #16]
 8101404:	4a08      	ldr	r2, [pc, #32]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101406:	f023 0304 	bic.w	r3, r3, #4
 810140a:	6113      	str	r3, [r2, #16]
 810140c:	e009      	b.n	8101422 <HAL_PWREx_EnterSTOPMode+0xe6>
    }
    else
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D3);
 810140e:	4b06      	ldr	r3, [pc, #24]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101410:	695b      	ldr	r3, [r3, #20]
 8101412:	4a05      	ldr	r2, [pc, #20]	@ (8101428 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101414:	f023 0304 	bic.w	r3, r3, #4
 8101418:	6153      	str	r3, [r2, #20]
 810141a:	e002      	b.n	8101422 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 810141c:	bf00      	nop
 810141e:	e000      	b.n	8101422 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 8101420:	bf00      	nop
#else
    /* Keep DSTOP mode when D3/SRD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
#endif  /* defined (DUAL_CORE) */
  }
}
 8101422:	3710      	adds	r7, #16
 8101424:	46bd      	mov	sp, r7
 8101426:	bd80      	pop	{r7, pc}
 8101428:	58024800 	.word	0x58024800
 810142c:	e000ed00 	.word	0xe000ed00

08101430 <HAL_PWREx_ClearPendingEvent>:
  *         enter low power mode using Wait For Event request.
  * @note   Cortex-M7 must be in CRUN mode when calling this API by Cortex-M4.
  * @retval None.
  */
void HAL_PWREx_ClearPendingEvent (void)
{
 8101430:	b580      	push	{r7, lr}
 8101432:	af00      	add	r7, sp, #0
#if defined (DUAL_CORE)
  /* Check the current Core */
  if (HAL_GetCurrentCPUID () == CM7_CPUID)
 8101434:	f7ff ff5c 	bl	81012f0 <HAL_GetCurrentCPUID>
 8101438:	4603      	mov	r3, r0
 810143a:	2b03      	cmp	r3, #3
 810143c:	d101      	bne.n	8101442 <HAL_PWREx_ClearPendingEvent+0x12>
  {
    __WFE ();
 810143e:	bf20      	wfe
    __WFE ();
  }
#else
  __WFE ();
#endif /* defined (DUAL_CORE) */
}
 8101440:	e001      	b.n	8101446 <HAL_PWREx_ClearPendingEvent+0x16>
    __SEV ();
 8101442:	bf40      	sev
    __WFE ();
 8101444:	bf20      	wfe
}
 8101446:	bf00      	nop
 8101448:	bd80      	pop	{r7, pc}
	...

0810144c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 810144c:	b480      	push	{r7}
 810144e:	b089      	sub	sp, #36	@ 0x24
 8101450:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8101452:	4bb3      	ldr	r3, [pc, #716]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101454:	691b      	ldr	r3, [r3, #16]
 8101456:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 810145a:	2b18      	cmp	r3, #24
 810145c:	f200 8155 	bhi.w	810170a <HAL_RCC_GetSysClockFreq+0x2be>
 8101460:	a201      	add	r2, pc, #4	@ (adr r2, 8101468 <HAL_RCC_GetSysClockFreq+0x1c>)
 8101462:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8101466:	bf00      	nop
 8101468:	081014cd 	.word	0x081014cd
 810146c:	0810170b 	.word	0x0810170b
 8101470:	0810170b 	.word	0x0810170b
 8101474:	0810170b 	.word	0x0810170b
 8101478:	0810170b 	.word	0x0810170b
 810147c:	0810170b 	.word	0x0810170b
 8101480:	0810170b 	.word	0x0810170b
 8101484:	0810170b 	.word	0x0810170b
 8101488:	081014f3 	.word	0x081014f3
 810148c:	0810170b 	.word	0x0810170b
 8101490:	0810170b 	.word	0x0810170b
 8101494:	0810170b 	.word	0x0810170b
 8101498:	0810170b 	.word	0x0810170b
 810149c:	0810170b 	.word	0x0810170b
 81014a0:	0810170b 	.word	0x0810170b
 81014a4:	0810170b 	.word	0x0810170b
 81014a8:	081014f9 	.word	0x081014f9
 81014ac:	0810170b 	.word	0x0810170b
 81014b0:	0810170b 	.word	0x0810170b
 81014b4:	0810170b 	.word	0x0810170b
 81014b8:	0810170b 	.word	0x0810170b
 81014bc:	0810170b 	.word	0x0810170b
 81014c0:	0810170b 	.word	0x0810170b
 81014c4:	0810170b 	.word	0x0810170b
 81014c8:	081014ff 	.word	0x081014ff
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 81014cc:	4b94      	ldr	r3, [pc, #592]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014ce:	681b      	ldr	r3, [r3, #0]
 81014d0:	f003 0320 	and.w	r3, r3, #32
 81014d4:	2b00      	cmp	r3, #0
 81014d6:	d009      	beq.n	81014ec <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 81014d8:	4b91      	ldr	r3, [pc, #580]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014da:	681b      	ldr	r3, [r3, #0]
 81014dc:	08db      	lsrs	r3, r3, #3
 81014de:	f003 0303 	and.w	r3, r3, #3
 81014e2:	4a90      	ldr	r2, [pc, #576]	@ (8101724 <HAL_RCC_GetSysClockFreq+0x2d8>)
 81014e4:	fa22 f303 	lsr.w	r3, r2, r3
 81014e8:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

    break;
 81014ea:	e111      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 81014ec:	4b8d      	ldr	r3, [pc, #564]	@ (8101724 <HAL_RCC_GetSysClockFreq+0x2d8>)
 81014ee:	61bb      	str	r3, [r7, #24]
    break;
 81014f0:	e10e      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>

  case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
    sysclockfreq = CSI_VALUE;
 81014f2:	4b8d      	ldr	r3, [pc, #564]	@ (8101728 <HAL_RCC_GetSysClockFreq+0x2dc>)
 81014f4:	61bb      	str	r3, [r7, #24]
    break;
 81014f6:	e10b      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>

  case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    sysclockfreq = HSE_VALUE;
 81014f8:	4b8c      	ldr	r3, [pc, #560]	@ (810172c <HAL_RCC_GetSysClockFreq+0x2e0>)
 81014fa:	61bb      	str	r3, [r7, #24]
    break;
 81014fc:	e108      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>
  case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 81014fe:	4b88      	ldr	r3, [pc, #544]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101500:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8101502:	f003 0303 	and.w	r3, r3, #3
 8101506:	617b      	str	r3, [r7, #20]
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 8101508:	4b85      	ldr	r3, [pc, #532]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810150a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810150c:	091b      	lsrs	r3, r3, #4
 810150e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8101512:	613b      	str	r3, [r7, #16]
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 8101514:	4b82      	ldr	r3, [pc, #520]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101516:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8101518:	f003 0301 	and.w	r3, r3, #1
 810151c:	60fb      	str	r3, [r7, #12]
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 810151e:	4b80      	ldr	r3, [pc, #512]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101520:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8101522:	08db      	lsrs	r3, r3, #3
 8101524:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8101528:	68fa      	ldr	r2, [r7, #12]
 810152a:	fb02 f303 	mul.w	r3, r2, r3
 810152e:	ee07 3a90 	vmov	s15, r3
 8101532:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101536:	edc7 7a02 	vstr	s15, [r7, #8]

    if (pllm != 0U)
 810153a:	693b      	ldr	r3, [r7, #16]
 810153c:	2b00      	cmp	r3, #0
 810153e:	f000 80e1 	beq.w	8101704 <HAL_RCC_GetSysClockFreq+0x2b8>
 8101542:	697b      	ldr	r3, [r7, #20]
 8101544:	2b02      	cmp	r3, #2
 8101546:	f000 8083 	beq.w	8101650 <HAL_RCC_GetSysClockFreq+0x204>
 810154a:	697b      	ldr	r3, [r7, #20]
 810154c:	2b02      	cmp	r3, #2
 810154e:	f200 80a1 	bhi.w	8101694 <HAL_RCC_GetSysClockFreq+0x248>
 8101552:	697b      	ldr	r3, [r7, #20]
 8101554:	2b00      	cmp	r3, #0
 8101556:	d003      	beq.n	8101560 <HAL_RCC_GetSysClockFreq+0x114>
 8101558:	697b      	ldr	r3, [r7, #20]
 810155a:	2b01      	cmp	r3, #1
 810155c:	d056      	beq.n	810160c <HAL_RCC_GetSysClockFreq+0x1c0>
 810155e:	e099      	b.n	8101694 <HAL_RCC_GetSysClockFreq+0x248>
    {
      switch (pllsource)
      {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8101560:	4b6f      	ldr	r3, [pc, #444]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101562:	681b      	ldr	r3, [r3, #0]
 8101564:	f003 0320 	and.w	r3, r3, #32
 8101568:	2b00      	cmp	r3, #0
 810156a:	d02d      	beq.n	81015c8 <HAL_RCC_GetSysClockFreq+0x17c>
        {
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 810156c:	4b6c      	ldr	r3, [pc, #432]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810156e:	681b      	ldr	r3, [r3, #0]
 8101570:	08db      	lsrs	r3, r3, #3
 8101572:	f003 0303 	and.w	r3, r3, #3
 8101576:	4a6b      	ldr	r2, [pc, #428]	@ (8101724 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8101578:	fa22 f303 	lsr.w	r3, r2, r3
 810157c:	607b      	str	r3, [r7, #4]
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 810157e:	687b      	ldr	r3, [r7, #4]
 8101580:	ee07 3a90 	vmov	s15, r3
 8101584:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101588:	693b      	ldr	r3, [r7, #16]
 810158a:	ee07 3a90 	vmov	s15, r3
 810158e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101592:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101596:	4b62      	ldr	r3, [pc, #392]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101598:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 810159a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810159e:	ee07 3a90 	vmov	s15, r3
 81015a2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81015a6:	ed97 6a02 	vldr	s12, [r7, #8]
 81015aa:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8101730 <HAL_RCC_GetSysClockFreq+0x2e4>
 81015ae:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81015b2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81015b6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81015ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81015be:	ee67 7a27 	vmul.f32	s15, s14, s15
 81015c2:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
        }
        break;
 81015c6:	e087      	b.n	81016d8 <HAL_RCC_GetSysClockFreq+0x28c>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 81015c8:	693b      	ldr	r3, [r7, #16]
 81015ca:	ee07 3a90 	vmov	s15, r3
 81015ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81015d2:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8101734 <HAL_RCC_GetSysClockFreq+0x2e8>
 81015d6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81015da:	4b51      	ldr	r3, [pc, #324]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81015dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 81015de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81015e2:	ee07 3a90 	vmov	s15, r3
 81015e6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81015ea:	ed97 6a02 	vldr	s12, [r7, #8]
 81015ee:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8101730 <HAL_RCC_GetSysClockFreq+0x2e4>
 81015f2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81015f6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81015fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81015fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101602:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101606:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 810160a:	e065      	b.n	81016d8 <HAL_RCC_GetSysClockFreq+0x28c>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 810160c:	693b      	ldr	r3, [r7, #16]
 810160e:	ee07 3a90 	vmov	s15, r3
 8101612:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101616:	eddf 6a48 	vldr	s13, [pc, #288]	@ 8101738 <HAL_RCC_GetSysClockFreq+0x2ec>
 810161a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810161e:	4b40      	ldr	r3, [pc, #256]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101622:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101626:	ee07 3a90 	vmov	s15, r3
 810162a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810162e:	ed97 6a02 	vldr	s12, [r7, #8]
 8101632:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8101730 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101636:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810163a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810163e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101642:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101646:	ee67 7a27 	vmul.f32	s15, s14, s15
 810164a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 810164e:	e043      	b.n	81016d8 <HAL_RCC_GetSysClockFreq+0x28c>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8101650:	693b      	ldr	r3, [r7, #16]
 8101652:	ee07 3a90 	vmov	s15, r3
 8101656:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810165a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 810173c <HAL_RCC_GetSysClockFreq+0x2f0>
 810165e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101662:	4b2f      	ldr	r3, [pc, #188]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101664:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101666:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810166a:	ee07 3a90 	vmov	s15, r3
 810166e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101672:	ed97 6a02 	vldr	s12, [r7, #8]
 8101676:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8101730 <HAL_RCC_GetSysClockFreq+0x2e4>
 810167a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810167e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101682:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101686:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810168a:	ee67 7a27 	vmul.f32	s15, s14, s15
 810168e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8101692:	e021      	b.n	81016d8 <HAL_RCC_GetSysClockFreq+0x28c>

      default:
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8101694:	693b      	ldr	r3, [r7, #16]
 8101696:	ee07 3a90 	vmov	s15, r3
 810169a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810169e:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8101738 <HAL_RCC_GetSysClockFreq+0x2ec>
 81016a2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81016a6:	4b1e      	ldr	r3, [pc, #120]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81016a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 81016aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81016ae:	ee07 3a90 	vmov	s15, r3
 81016b2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81016b6:	ed97 6a02 	vldr	s12, [r7, #8]
 81016ba:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8101730 <HAL_RCC_GetSysClockFreq+0x2e4>
 81016be:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81016c2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81016c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81016ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81016ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 81016d2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 81016d6:	bf00      	nop
      }
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 81016d8:	4b11      	ldr	r3, [pc, #68]	@ (8101720 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81016da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 81016dc:	0a5b      	lsrs	r3, r3, #9
 81016de:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 81016e2:	3301      	adds	r3, #1
 81016e4:	603b      	str	r3, [r7, #0]
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 81016e6:	683b      	ldr	r3, [r7, #0]
 81016e8:	ee07 3a90 	vmov	s15, r3
 81016ec:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 81016f0:	edd7 6a07 	vldr	s13, [r7, #28]
 81016f4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 81016f8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 81016fc:	ee17 3a90 	vmov	r3, s15
 8101700:	61bb      	str	r3, [r7, #24]
    }
    else
    {
      sysclockfreq = 0U;
    }
    break;
 8101702:	e005      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>
      sysclockfreq = 0U;
 8101704:	2300      	movs	r3, #0
 8101706:	61bb      	str	r3, [r7, #24]
    break;
 8101708:	e002      	b.n	8101710 <HAL_RCC_GetSysClockFreq+0x2c4>

  default:
    sysclockfreq = CSI_VALUE;
 810170a:	4b07      	ldr	r3, [pc, #28]	@ (8101728 <HAL_RCC_GetSysClockFreq+0x2dc>)
 810170c:	61bb      	str	r3, [r7, #24]
    break;
 810170e:	bf00      	nop
  }

  return sysclockfreq;
 8101710:	69bb      	ldr	r3, [r7, #24]
}
 8101712:	4618      	mov	r0, r3
 8101714:	3724      	adds	r7, #36	@ 0x24
 8101716:	46bd      	mov	sp, r7
 8101718:	f85d 7b04 	ldr.w	r7, [sp], #4
 810171c:	4770      	bx	lr
 810171e:	bf00      	nop
 8101720:	58024400 	.word	0x58024400
 8101724:	03d09000 	.word	0x03d09000
 8101728:	003d0900 	.word	0x003d0900
 810172c:	007a1200 	.word	0x007a1200
 8101730:	46000000 	.word	0x46000000
 8101734:	4c742400 	.word	0x4c742400
 8101738:	4a742400 	.word	0x4a742400
 810173c:	4af42400 	.word	0x4af42400

08101740 <__cvt>:
 8101740:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8101744:	ec57 6b10 	vmov	r6, r7, d0
 8101748:	2f00      	cmp	r7, #0
 810174a:	460c      	mov	r4, r1
 810174c:	4619      	mov	r1, r3
 810174e:	463b      	mov	r3, r7
 8101750:	bfbb      	ittet	lt
 8101752:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8101756:	461f      	movlt	r7, r3
 8101758:	2300      	movge	r3, #0
 810175a:	232d      	movlt	r3, #45	@ 0x2d
 810175c:	700b      	strb	r3, [r1, #0]
 810175e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8101760:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8101764:	4691      	mov	r9, r2
 8101766:	f023 0820 	bic.w	r8, r3, #32
 810176a:	bfbc      	itt	lt
 810176c:	4632      	movlt	r2, r6
 810176e:	4616      	movlt	r6, r2
 8101770:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8101774:	d005      	beq.n	8101782 <__cvt+0x42>
 8101776:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 810177a:	d100      	bne.n	810177e <__cvt+0x3e>
 810177c:	3401      	adds	r4, #1
 810177e:	2102      	movs	r1, #2
 8101780:	e000      	b.n	8101784 <__cvt+0x44>
 8101782:	2103      	movs	r1, #3
 8101784:	ab03      	add	r3, sp, #12
 8101786:	9301      	str	r3, [sp, #4]
 8101788:	ab02      	add	r3, sp, #8
 810178a:	9300      	str	r3, [sp, #0]
 810178c:	ec47 6b10 	vmov	d0, r6, r7
 8101790:	4653      	mov	r3, sl
 8101792:	4622      	mov	r2, r4
 8101794:	f000 fe3c 	bl	8102410 <_dtoa_r>
 8101798:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 810179c:	4605      	mov	r5, r0
 810179e:	d119      	bne.n	81017d4 <__cvt+0x94>
 81017a0:	f019 0f01 	tst.w	r9, #1
 81017a4:	d00e      	beq.n	81017c4 <__cvt+0x84>
 81017a6:	eb00 0904 	add.w	r9, r0, r4
 81017aa:	2200      	movs	r2, #0
 81017ac:	2300      	movs	r3, #0
 81017ae:	4630      	mov	r0, r6
 81017b0:	4639      	mov	r1, r7
 81017b2:	f7ff fa11 	bl	8100bd8 <__aeabi_dcmpeq>
 81017b6:	b108      	cbz	r0, 81017bc <__cvt+0x7c>
 81017b8:	f8cd 900c 	str.w	r9, [sp, #12]
 81017bc:	2230      	movs	r2, #48	@ 0x30
 81017be:	9b03      	ldr	r3, [sp, #12]
 81017c0:	454b      	cmp	r3, r9
 81017c2:	d31e      	bcc.n	8101802 <__cvt+0xc2>
 81017c4:	9b03      	ldr	r3, [sp, #12]
 81017c6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 81017c8:	1b5b      	subs	r3, r3, r5
 81017ca:	4628      	mov	r0, r5
 81017cc:	6013      	str	r3, [r2, #0]
 81017ce:	b004      	add	sp, #16
 81017d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 81017d4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 81017d8:	eb00 0904 	add.w	r9, r0, r4
 81017dc:	d1e5      	bne.n	81017aa <__cvt+0x6a>
 81017de:	7803      	ldrb	r3, [r0, #0]
 81017e0:	2b30      	cmp	r3, #48	@ 0x30
 81017e2:	d10a      	bne.n	81017fa <__cvt+0xba>
 81017e4:	2200      	movs	r2, #0
 81017e6:	2300      	movs	r3, #0
 81017e8:	4630      	mov	r0, r6
 81017ea:	4639      	mov	r1, r7
 81017ec:	f7ff f9f4 	bl	8100bd8 <__aeabi_dcmpeq>
 81017f0:	b918      	cbnz	r0, 81017fa <__cvt+0xba>
 81017f2:	f1c4 0401 	rsb	r4, r4, #1
 81017f6:	f8ca 4000 	str.w	r4, [sl]
 81017fa:	f8da 3000 	ldr.w	r3, [sl]
 81017fe:	4499      	add	r9, r3
 8101800:	e7d3      	b.n	81017aa <__cvt+0x6a>
 8101802:	1c59      	adds	r1, r3, #1
 8101804:	9103      	str	r1, [sp, #12]
 8101806:	701a      	strb	r2, [r3, #0]
 8101808:	e7d9      	b.n	81017be <__cvt+0x7e>

0810180a <__exponent>:
 810180a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 810180c:	2900      	cmp	r1, #0
 810180e:	bfba      	itte	lt
 8101810:	4249      	neglt	r1, r1
 8101812:	232d      	movlt	r3, #45	@ 0x2d
 8101814:	232b      	movge	r3, #43	@ 0x2b
 8101816:	2909      	cmp	r1, #9
 8101818:	7002      	strb	r2, [r0, #0]
 810181a:	7043      	strb	r3, [r0, #1]
 810181c:	dd29      	ble.n	8101872 <__exponent+0x68>
 810181e:	f10d 0307 	add.w	r3, sp, #7
 8101822:	461d      	mov	r5, r3
 8101824:	270a      	movs	r7, #10
 8101826:	461a      	mov	r2, r3
 8101828:	fbb1 f6f7 	udiv	r6, r1, r7
 810182c:	fb07 1416 	mls	r4, r7, r6, r1
 8101830:	3430      	adds	r4, #48	@ 0x30
 8101832:	f802 4c01 	strb.w	r4, [r2, #-1]
 8101836:	460c      	mov	r4, r1
 8101838:	2c63      	cmp	r4, #99	@ 0x63
 810183a:	f103 33ff 	add.w	r3, r3, #4294967295
 810183e:	4631      	mov	r1, r6
 8101840:	dcf1      	bgt.n	8101826 <__exponent+0x1c>
 8101842:	3130      	adds	r1, #48	@ 0x30
 8101844:	1e94      	subs	r4, r2, #2
 8101846:	f803 1c01 	strb.w	r1, [r3, #-1]
 810184a:	1c41      	adds	r1, r0, #1
 810184c:	4623      	mov	r3, r4
 810184e:	42ab      	cmp	r3, r5
 8101850:	d30a      	bcc.n	8101868 <__exponent+0x5e>
 8101852:	f10d 0309 	add.w	r3, sp, #9
 8101856:	1a9b      	subs	r3, r3, r2
 8101858:	42ac      	cmp	r4, r5
 810185a:	bf88      	it	hi
 810185c:	2300      	movhi	r3, #0
 810185e:	3302      	adds	r3, #2
 8101860:	4403      	add	r3, r0
 8101862:	1a18      	subs	r0, r3, r0
 8101864:	b003      	add	sp, #12
 8101866:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8101868:	f813 6b01 	ldrb.w	r6, [r3], #1
 810186c:	f801 6f01 	strb.w	r6, [r1, #1]!
 8101870:	e7ed      	b.n	810184e <__exponent+0x44>
 8101872:	2330      	movs	r3, #48	@ 0x30
 8101874:	3130      	adds	r1, #48	@ 0x30
 8101876:	7083      	strb	r3, [r0, #2]
 8101878:	70c1      	strb	r1, [r0, #3]
 810187a:	1d03      	adds	r3, r0, #4
 810187c:	e7f1      	b.n	8101862 <__exponent+0x58>
	...

08101880 <_printf_float>:
 8101880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8101884:	b08d      	sub	sp, #52	@ 0x34
 8101886:	460c      	mov	r4, r1
 8101888:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 810188c:	4616      	mov	r6, r2
 810188e:	461f      	mov	r7, r3
 8101890:	4605      	mov	r5, r0
 8101892:	f000 fcbb 	bl	810220c <_localeconv_r>
 8101896:	6803      	ldr	r3, [r0, #0]
 8101898:	9304      	str	r3, [sp, #16]
 810189a:	4618      	mov	r0, r3
 810189c:	f7fe fd70 	bl	8100380 <strlen>
 81018a0:	2300      	movs	r3, #0
 81018a2:	930a      	str	r3, [sp, #40]	@ 0x28
 81018a4:	f8d8 3000 	ldr.w	r3, [r8]
 81018a8:	9005      	str	r0, [sp, #20]
 81018aa:	3307      	adds	r3, #7
 81018ac:	f023 0307 	bic.w	r3, r3, #7
 81018b0:	f103 0208 	add.w	r2, r3, #8
 81018b4:	f894 a018 	ldrb.w	sl, [r4, #24]
 81018b8:	f8d4 b000 	ldr.w	fp, [r4]
 81018bc:	f8c8 2000 	str.w	r2, [r8]
 81018c0:	e9d3 8900 	ldrd	r8, r9, [r3]
 81018c4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 81018c8:	9307      	str	r3, [sp, #28]
 81018ca:	f8cd 8018 	str.w	r8, [sp, #24]
 81018ce:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 81018d2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 81018d6:	4b9c      	ldr	r3, [pc, #624]	@ (8101b48 <_printf_float+0x2c8>)
 81018d8:	f04f 32ff 	mov.w	r2, #4294967295
 81018dc:	f7ff f9ae 	bl	8100c3c <__aeabi_dcmpun>
 81018e0:	bb70      	cbnz	r0, 8101940 <_printf_float+0xc0>
 81018e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 81018e6:	4b98      	ldr	r3, [pc, #608]	@ (8101b48 <_printf_float+0x2c8>)
 81018e8:	f04f 32ff 	mov.w	r2, #4294967295
 81018ec:	f7ff f988 	bl	8100c00 <__aeabi_dcmple>
 81018f0:	bb30      	cbnz	r0, 8101940 <_printf_float+0xc0>
 81018f2:	2200      	movs	r2, #0
 81018f4:	2300      	movs	r3, #0
 81018f6:	4640      	mov	r0, r8
 81018f8:	4649      	mov	r1, r9
 81018fa:	f7ff f977 	bl	8100bec <__aeabi_dcmplt>
 81018fe:	b110      	cbz	r0, 8101906 <_printf_float+0x86>
 8101900:	232d      	movs	r3, #45	@ 0x2d
 8101902:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8101906:	4a91      	ldr	r2, [pc, #580]	@ (8101b4c <_printf_float+0x2cc>)
 8101908:	4b91      	ldr	r3, [pc, #580]	@ (8101b50 <_printf_float+0x2d0>)
 810190a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 810190e:	bf94      	ite	ls
 8101910:	4690      	movls	r8, r2
 8101912:	4698      	movhi	r8, r3
 8101914:	2303      	movs	r3, #3
 8101916:	6123      	str	r3, [r4, #16]
 8101918:	f02b 0304 	bic.w	r3, fp, #4
 810191c:	6023      	str	r3, [r4, #0]
 810191e:	f04f 0900 	mov.w	r9, #0
 8101922:	9700      	str	r7, [sp, #0]
 8101924:	4633      	mov	r3, r6
 8101926:	aa0b      	add	r2, sp, #44	@ 0x2c
 8101928:	4621      	mov	r1, r4
 810192a:	4628      	mov	r0, r5
 810192c:	f000 f9d2 	bl	8101cd4 <_printf_common>
 8101930:	3001      	adds	r0, #1
 8101932:	f040 808d 	bne.w	8101a50 <_printf_float+0x1d0>
 8101936:	f04f 30ff 	mov.w	r0, #4294967295
 810193a:	b00d      	add	sp, #52	@ 0x34
 810193c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8101940:	4642      	mov	r2, r8
 8101942:	464b      	mov	r3, r9
 8101944:	4640      	mov	r0, r8
 8101946:	4649      	mov	r1, r9
 8101948:	f7ff f978 	bl	8100c3c <__aeabi_dcmpun>
 810194c:	b140      	cbz	r0, 8101960 <_printf_float+0xe0>
 810194e:	464b      	mov	r3, r9
 8101950:	2b00      	cmp	r3, #0
 8101952:	bfbc      	itt	lt
 8101954:	232d      	movlt	r3, #45	@ 0x2d
 8101956:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 810195a:	4a7e      	ldr	r2, [pc, #504]	@ (8101b54 <_printf_float+0x2d4>)
 810195c:	4b7e      	ldr	r3, [pc, #504]	@ (8101b58 <_printf_float+0x2d8>)
 810195e:	e7d4      	b.n	810190a <_printf_float+0x8a>
 8101960:	6863      	ldr	r3, [r4, #4]
 8101962:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8101966:	9206      	str	r2, [sp, #24]
 8101968:	1c5a      	adds	r2, r3, #1
 810196a:	d13b      	bne.n	81019e4 <_printf_float+0x164>
 810196c:	2306      	movs	r3, #6
 810196e:	6063      	str	r3, [r4, #4]
 8101970:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8101974:	2300      	movs	r3, #0
 8101976:	6022      	str	r2, [r4, #0]
 8101978:	9303      	str	r3, [sp, #12]
 810197a:	ab0a      	add	r3, sp, #40	@ 0x28
 810197c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8101980:	ab09      	add	r3, sp, #36	@ 0x24
 8101982:	9300      	str	r3, [sp, #0]
 8101984:	6861      	ldr	r1, [r4, #4]
 8101986:	ec49 8b10 	vmov	d0, r8, r9
 810198a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 810198e:	4628      	mov	r0, r5
 8101990:	f7ff fed6 	bl	8101740 <__cvt>
 8101994:	9b06      	ldr	r3, [sp, #24]
 8101996:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8101998:	2b47      	cmp	r3, #71	@ 0x47
 810199a:	4680      	mov	r8, r0
 810199c:	d129      	bne.n	81019f2 <_printf_float+0x172>
 810199e:	1cc8      	adds	r0, r1, #3
 81019a0:	db02      	blt.n	81019a8 <_printf_float+0x128>
 81019a2:	6863      	ldr	r3, [r4, #4]
 81019a4:	4299      	cmp	r1, r3
 81019a6:	dd41      	ble.n	8101a2c <_printf_float+0x1ac>
 81019a8:	f1aa 0a02 	sub.w	sl, sl, #2
 81019ac:	fa5f fa8a 	uxtb.w	sl, sl
 81019b0:	3901      	subs	r1, #1
 81019b2:	4652      	mov	r2, sl
 81019b4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 81019b8:	9109      	str	r1, [sp, #36]	@ 0x24
 81019ba:	f7ff ff26 	bl	810180a <__exponent>
 81019be:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 81019c0:	1813      	adds	r3, r2, r0
 81019c2:	2a01      	cmp	r2, #1
 81019c4:	4681      	mov	r9, r0
 81019c6:	6123      	str	r3, [r4, #16]
 81019c8:	dc02      	bgt.n	81019d0 <_printf_float+0x150>
 81019ca:	6822      	ldr	r2, [r4, #0]
 81019cc:	07d2      	lsls	r2, r2, #31
 81019ce:	d501      	bpl.n	81019d4 <_printf_float+0x154>
 81019d0:	3301      	adds	r3, #1
 81019d2:	6123      	str	r3, [r4, #16]
 81019d4:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 81019d8:	2b00      	cmp	r3, #0
 81019da:	d0a2      	beq.n	8101922 <_printf_float+0xa2>
 81019dc:	232d      	movs	r3, #45	@ 0x2d
 81019de:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 81019e2:	e79e      	b.n	8101922 <_printf_float+0xa2>
 81019e4:	9a06      	ldr	r2, [sp, #24]
 81019e6:	2a47      	cmp	r2, #71	@ 0x47
 81019e8:	d1c2      	bne.n	8101970 <_printf_float+0xf0>
 81019ea:	2b00      	cmp	r3, #0
 81019ec:	d1c0      	bne.n	8101970 <_printf_float+0xf0>
 81019ee:	2301      	movs	r3, #1
 81019f0:	e7bd      	b.n	810196e <_printf_float+0xee>
 81019f2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 81019f6:	d9db      	bls.n	81019b0 <_printf_float+0x130>
 81019f8:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 81019fc:	d118      	bne.n	8101a30 <_printf_float+0x1b0>
 81019fe:	2900      	cmp	r1, #0
 8101a00:	6863      	ldr	r3, [r4, #4]
 8101a02:	dd0b      	ble.n	8101a1c <_printf_float+0x19c>
 8101a04:	6121      	str	r1, [r4, #16]
 8101a06:	b913      	cbnz	r3, 8101a0e <_printf_float+0x18e>
 8101a08:	6822      	ldr	r2, [r4, #0]
 8101a0a:	07d0      	lsls	r0, r2, #31
 8101a0c:	d502      	bpl.n	8101a14 <_printf_float+0x194>
 8101a0e:	3301      	adds	r3, #1
 8101a10:	440b      	add	r3, r1
 8101a12:	6123      	str	r3, [r4, #16]
 8101a14:	65a1      	str	r1, [r4, #88]	@ 0x58
 8101a16:	f04f 0900 	mov.w	r9, #0
 8101a1a:	e7db      	b.n	81019d4 <_printf_float+0x154>
 8101a1c:	b913      	cbnz	r3, 8101a24 <_printf_float+0x1a4>
 8101a1e:	6822      	ldr	r2, [r4, #0]
 8101a20:	07d2      	lsls	r2, r2, #31
 8101a22:	d501      	bpl.n	8101a28 <_printf_float+0x1a8>
 8101a24:	3302      	adds	r3, #2
 8101a26:	e7f4      	b.n	8101a12 <_printf_float+0x192>
 8101a28:	2301      	movs	r3, #1
 8101a2a:	e7f2      	b.n	8101a12 <_printf_float+0x192>
 8101a2c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8101a30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8101a32:	4299      	cmp	r1, r3
 8101a34:	db05      	blt.n	8101a42 <_printf_float+0x1c2>
 8101a36:	6823      	ldr	r3, [r4, #0]
 8101a38:	6121      	str	r1, [r4, #16]
 8101a3a:	07d8      	lsls	r0, r3, #31
 8101a3c:	d5ea      	bpl.n	8101a14 <_printf_float+0x194>
 8101a3e:	1c4b      	adds	r3, r1, #1
 8101a40:	e7e7      	b.n	8101a12 <_printf_float+0x192>
 8101a42:	2900      	cmp	r1, #0
 8101a44:	bfd4      	ite	le
 8101a46:	f1c1 0202 	rsble	r2, r1, #2
 8101a4a:	2201      	movgt	r2, #1
 8101a4c:	4413      	add	r3, r2
 8101a4e:	e7e0      	b.n	8101a12 <_printf_float+0x192>
 8101a50:	6823      	ldr	r3, [r4, #0]
 8101a52:	055a      	lsls	r2, r3, #21
 8101a54:	d407      	bmi.n	8101a66 <_printf_float+0x1e6>
 8101a56:	6923      	ldr	r3, [r4, #16]
 8101a58:	4642      	mov	r2, r8
 8101a5a:	4631      	mov	r1, r6
 8101a5c:	4628      	mov	r0, r5
 8101a5e:	47b8      	blx	r7
 8101a60:	3001      	adds	r0, #1
 8101a62:	d12b      	bne.n	8101abc <_printf_float+0x23c>
 8101a64:	e767      	b.n	8101936 <_printf_float+0xb6>
 8101a66:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8101a6a:	f240 80dd 	bls.w	8101c28 <_printf_float+0x3a8>
 8101a6e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8101a72:	2200      	movs	r2, #0
 8101a74:	2300      	movs	r3, #0
 8101a76:	f7ff f8af 	bl	8100bd8 <__aeabi_dcmpeq>
 8101a7a:	2800      	cmp	r0, #0
 8101a7c:	d033      	beq.n	8101ae6 <_printf_float+0x266>
 8101a7e:	4a37      	ldr	r2, [pc, #220]	@ (8101b5c <_printf_float+0x2dc>)
 8101a80:	2301      	movs	r3, #1
 8101a82:	4631      	mov	r1, r6
 8101a84:	4628      	mov	r0, r5
 8101a86:	47b8      	blx	r7
 8101a88:	3001      	adds	r0, #1
 8101a8a:	f43f af54 	beq.w	8101936 <_printf_float+0xb6>
 8101a8e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8101a92:	4543      	cmp	r3, r8
 8101a94:	db02      	blt.n	8101a9c <_printf_float+0x21c>
 8101a96:	6823      	ldr	r3, [r4, #0]
 8101a98:	07d8      	lsls	r0, r3, #31
 8101a9a:	d50f      	bpl.n	8101abc <_printf_float+0x23c>
 8101a9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101aa0:	4631      	mov	r1, r6
 8101aa2:	4628      	mov	r0, r5
 8101aa4:	47b8      	blx	r7
 8101aa6:	3001      	adds	r0, #1
 8101aa8:	f43f af45 	beq.w	8101936 <_printf_float+0xb6>
 8101aac:	f04f 0900 	mov.w	r9, #0
 8101ab0:	f108 38ff 	add.w	r8, r8, #4294967295
 8101ab4:	f104 0a1a 	add.w	sl, r4, #26
 8101ab8:	45c8      	cmp	r8, r9
 8101aba:	dc09      	bgt.n	8101ad0 <_printf_float+0x250>
 8101abc:	6823      	ldr	r3, [r4, #0]
 8101abe:	079b      	lsls	r3, r3, #30
 8101ac0:	f100 8103 	bmi.w	8101cca <_printf_float+0x44a>
 8101ac4:	68e0      	ldr	r0, [r4, #12]
 8101ac6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8101ac8:	4298      	cmp	r0, r3
 8101aca:	bfb8      	it	lt
 8101acc:	4618      	movlt	r0, r3
 8101ace:	e734      	b.n	810193a <_printf_float+0xba>
 8101ad0:	2301      	movs	r3, #1
 8101ad2:	4652      	mov	r2, sl
 8101ad4:	4631      	mov	r1, r6
 8101ad6:	4628      	mov	r0, r5
 8101ad8:	47b8      	blx	r7
 8101ada:	3001      	adds	r0, #1
 8101adc:	f43f af2b 	beq.w	8101936 <_printf_float+0xb6>
 8101ae0:	f109 0901 	add.w	r9, r9, #1
 8101ae4:	e7e8      	b.n	8101ab8 <_printf_float+0x238>
 8101ae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101ae8:	2b00      	cmp	r3, #0
 8101aea:	dc39      	bgt.n	8101b60 <_printf_float+0x2e0>
 8101aec:	4a1b      	ldr	r2, [pc, #108]	@ (8101b5c <_printf_float+0x2dc>)
 8101aee:	2301      	movs	r3, #1
 8101af0:	4631      	mov	r1, r6
 8101af2:	4628      	mov	r0, r5
 8101af4:	47b8      	blx	r7
 8101af6:	3001      	adds	r0, #1
 8101af8:	f43f af1d 	beq.w	8101936 <_printf_float+0xb6>
 8101afc:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8101b00:	ea59 0303 	orrs.w	r3, r9, r3
 8101b04:	d102      	bne.n	8101b0c <_printf_float+0x28c>
 8101b06:	6823      	ldr	r3, [r4, #0]
 8101b08:	07d9      	lsls	r1, r3, #31
 8101b0a:	d5d7      	bpl.n	8101abc <_printf_float+0x23c>
 8101b0c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101b10:	4631      	mov	r1, r6
 8101b12:	4628      	mov	r0, r5
 8101b14:	47b8      	blx	r7
 8101b16:	3001      	adds	r0, #1
 8101b18:	f43f af0d 	beq.w	8101936 <_printf_float+0xb6>
 8101b1c:	f04f 0a00 	mov.w	sl, #0
 8101b20:	f104 0b1a 	add.w	fp, r4, #26
 8101b24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101b26:	425b      	negs	r3, r3
 8101b28:	4553      	cmp	r3, sl
 8101b2a:	dc01      	bgt.n	8101b30 <_printf_float+0x2b0>
 8101b2c:	464b      	mov	r3, r9
 8101b2e:	e793      	b.n	8101a58 <_printf_float+0x1d8>
 8101b30:	2301      	movs	r3, #1
 8101b32:	465a      	mov	r2, fp
 8101b34:	4631      	mov	r1, r6
 8101b36:	4628      	mov	r0, r5
 8101b38:	47b8      	blx	r7
 8101b3a:	3001      	adds	r0, #1
 8101b3c:	f43f aefb 	beq.w	8101936 <_printf_float+0xb6>
 8101b40:	f10a 0a01 	add.w	sl, sl, #1
 8101b44:	e7ee      	b.n	8101b24 <_printf_float+0x2a4>
 8101b46:	bf00      	nop
 8101b48:	7fefffff 	.word	0x7fefffff
 8101b4c:	08104068 	.word	0x08104068
 8101b50:	0810406c 	.word	0x0810406c
 8101b54:	08104070 	.word	0x08104070
 8101b58:	08104074 	.word	0x08104074
 8101b5c:	08104078 	.word	0x08104078
 8101b60:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8101b62:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8101b66:	4553      	cmp	r3, sl
 8101b68:	bfa8      	it	ge
 8101b6a:	4653      	movge	r3, sl
 8101b6c:	2b00      	cmp	r3, #0
 8101b6e:	4699      	mov	r9, r3
 8101b70:	dc36      	bgt.n	8101be0 <_printf_float+0x360>
 8101b72:	f04f 0b00 	mov.w	fp, #0
 8101b76:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8101b7a:	f104 021a 	add.w	r2, r4, #26
 8101b7e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8101b80:	9306      	str	r3, [sp, #24]
 8101b82:	eba3 0309 	sub.w	r3, r3, r9
 8101b86:	455b      	cmp	r3, fp
 8101b88:	dc31      	bgt.n	8101bee <_printf_float+0x36e>
 8101b8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101b8c:	459a      	cmp	sl, r3
 8101b8e:	dc3a      	bgt.n	8101c06 <_printf_float+0x386>
 8101b90:	6823      	ldr	r3, [r4, #0]
 8101b92:	07da      	lsls	r2, r3, #31
 8101b94:	d437      	bmi.n	8101c06 <_printf_float+0x386>
 8101b96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101b98:	ebaa 0903 	sub.w	r9, sl, r3
 8101b9c:	9b06      	ldr	r3, [sp, #24]
 8101b9e:	ebaa 0303 	sub.w	r3, sl, r3
 8101ba2:	4599      	cmp	r9, r3
 8101ba4:	bfa8      	it	ge
 8101ba6:	4699      	movge	r9, r3
 8101ba8:	f1b9 0f00 	cmp.w	r9, #0
 8101bac:	dc33      	bgt.n	8101c16 <_printf_float+0x396>
 8101bae:	f04f 0800 	mov.w	r8, #0
 8101bb2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8101bb6:	f104 0b1a 	add.w	fp, r4, #26
 8101bba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101bbc:	ebaa 0303 	sub.w	r3, sl, r3
 8101bc0:	eba3 0309 	sub.w	r3, r3, r9
 8101bc4:	4543      	cmp	r3, r8
 8101bc6:	f77f af79 	ble.w	8101abc <_printf_float+0x23c>
 8101bca:	2301      	movs	r3, #1
 8101bcc:	465a      	mov	r2, fp
 8101bce:	4631      	mov	r1, r6
 8101bd0:	4628      	mov	r0, r5
 8101bd2:	47b8      	blx	r7
 8101bd4:	3001      	adds	r0, #1
 8101bd6:	f43f aeae 	beq.w	8101936 <_printf_float+0xb6>
 8101bda:	f108 0801 	add.w	r8, r8, #1
 8101bde:	e7ec      	b.n	8101bba <_printf_float+0x33a>
 8101be0:	4642      	mov	r2, r8
 8101be2:	4631      	mov	r1, r6
 8101be4:	4628      	mov	r0, r5
 8101be6:	47b8      	blx	r7
 8101be8:	3001      	adds	r0, #1
 8101bea:	d1c2      	bne.n	8101b72 <_printf_float+0x2f2>
 8101bec:	e6a3      	b.n	8101936 <_printf_float+0xb6>
 8101bee:	2301      	movs	r3, #1
 8101bf0:	4631      	mov	r1, r6
 8101bf2:	4628      	mov	r0, r5
 8101bf4:	9206      	str	r2, [sp, #24]
 8101bf6:	47b8      	blx	r7
 8101bf8:	3001      	adds	r0, #1
 8101bfa:	f43f ae9c 	beq.w	8101936 <_printf_float+0xb6>
 8101bfe:	9a06      	ldr	r2, [sp, #24]
 8101c00:	f10b 0b01 	add.w	fp, fp, #1
 8101c04:	e7bb      	b.n	8101b7e <_printf_float+0x2fe>
 8101c06:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101c0a:	4631      	mov	r1, r6
 8101c0c:	4628      	mov	r0, r5
 8101c0e:	47b8      	blx	r7
 8101c10:	3001      	adds	r0, #1
 8101c12:	d1c0      	bne.n	8101b96 <_printf_float+0x316>
 8101c14:	e68f      	b.n	8101936 <_printf_float+0xb6>
 8101c16:	9a06      	ldr	r2, [sp, #24]
 8101c18:	464b      	mov	r3, r9
 8101c1a:	4442      	add	r2, r8
 8101c1c:	4631      	mov	r1, r6
 8101c1e:	4628      	mov	r0, r5
 8101c20:	47b8      	blx	r7
 8101c22:	3001      	adds	r0, #1
 8101c24:	d1c3      	bne.n	8101bae <_printf_float+0x32e>
 8101c26:	e686      	b.n	8101936 <_printf_float+0xb6>
 8101c28:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8101c2c:	f1ba 0f01 	cmp.w	sl, #1
 8101c30:	dc01      	bgt.n	8101c36 <_printf_float+0x3b6>
 8101c32:	07db      	lsls	r3, r3, #31
 8101c34:	d536      	bpl.n	8101ca4 <_printf_float+0x424>
 8101c36:	2301      	movs	r3, #1
 8101c38:	4642      	mov	r2, r8
 8101c3a:	4631      	mov	r1, r6
 8101c3c:	4628      	mov	r0, r5
 8101c3e:	47b8      	blx	r7
 8101c40:	3001      	adds	r0, #1
 8101c42:	f43f ae78 	beq.w	8101936 <_printf_float+0xb6>
 8101c46:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101c4a:	4631      	mov	r1, r6
 8101c4c:	4628      	mov	r0, r5
 8101c4e:	47b8      	blx	r7
 8101c50:	3001      	adds	r0, #1
 8101c52:	f43f ae70 	beq.w	8101936 <_printf_float+0xb6>
 8101c56:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8101c5a:	2200      	movs	r2, #0
 8101c5c:	2300      	movs	r3, #0
 8101c5e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8101c62:	f7fe ffb9 	bl	8100bd8 <__aeabi_dcmpeq>
 8101c66:	b9c0      	cbnz	r0, 8101c9a <_printf_float+0x41a>
 8101c68:	4653      	mov	r3, sl
 8101c6a:	f108 0201 	add.w	r2, r8, #1
 8101c6e:	4631      	mov	r1, r6
 8101c70:	4628      	mov	r0, r5
 8101c72:	47b8      	blx	r7
 8101c74:	3001      	adds	r0, #1
 8101c76:	d10c      	bne.n	8101c92 <_printf_float+0x412>
 8101c78:	e65d      	b.n	8101936 <_printf_float+0xb6>
 8101c7a:	2301      	movs	r3, #1
 8101c7c:	465a      	mov	r2, fp
 8101c7e:	4631      	mov	r1, r6
 8101c80:	4628      	mov	r0, r5
 8101c82:	47b8      	blx	r7
 8101c84:	3001      	adds	r0, #1
 8101c86:	f43f ae56 	beq.w	8101936 <_printf_float+0xb6>
 8101c8a:	f108 0801 	add.w	r8, r8, #1
 8101c8e:	45d0      	cmp	r8, sl
 8101c90:	dbf3      	blt.n	8101c7a <_printf_float+0x3fa>
 8101c92:	464b      	mov	r3, r9
 8101c94:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8101c98:	e6df      	b.n	8101a5a <_printf_float+0x1da>
 8101c9a:	f04f 0800 	mov.w	r8, #0
 8101c9e:	f104 0b1a 	add.w	fp, r4, #26
 8101ca2:	e7f4      	b.n	8101c8e <_printf_float+0x40e>
 8101ca4:	2301      	movs	r3, #1
 8101ca6:	4642      	mov	r2, r8
 8101ca8:	e7e1      	b.n	8101c6e <_printf_float+0x3ee>
 8101caa:	2301      	movs	r3, #1
 8101cac:	464a      	mov	r2, r9
 8101cae:	4631      	mov	r1, r6
 8101cb0:	4628      	mov	r0, r5
 8101cb2:	47b8      	blx	r7
 8101cb4:	3001      	adds	r0, #1
 8101cb6:	f43f ae3e 	beq.w	8101936 <_printf_float+0xb6>
 8101cba:	f108 0801 	add.w	r8, r8, #1
 8101cbe:	68e3      	ldr	r3, [r4, #12]
 8101cc0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8101cc2:	1a5b      	subs	r3, r3, r1
 8101cc4:	4543      	cmp	r3, r8
 8101cc6:	dcf0      	bgt.n	8101caa <_printf_float+0x42a>
 8101cc8:	e6fc      	b.n	8101ac4 <_printf_float+0x244>
 8101cca:	f04f 0800 	mov.w	r8, #0
 8101cce:	f104 0919 	add.w	r9, r4, #25
 8101cd2:	e7f4      	b.n	8101cbe <_printf_float+0x43e>

08101cd4 <_printf_common>:
 8101cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8101cd8:	4616      	mov	r6, r2
 8101cda:	4698      	mov	r8, r3
 8101cdc:	688a      	ldr	r2, [r1, #8]
 8101cde:	690b      	ldr	r3, [r1, #16]
 8101ce0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8101ce4:	4293      	cmp	r3, r2
 8101ce6:	bfb8      	it	lt
 8101ce8:	4613      	movlt	r3, r2
 8101cea:	6033      	str	r3, [r6, #0]
 8101cec:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8101cf0:	4607      	mov	r7, r0
 8101cf2:	460c      	mov	r4, r1
 8101cf4:	b10a      	cbz	r2, 8101cfa <_printf_common+0x26>
 8101cf6:	3301      	adds	r3, #1
 8101cf8:	6033      	str	r3, [r6, #0]
 8101cfa:	6823      	ldr	r3, [r4, #0]
 8101cfc:	0699      	lsls	r1, r3, #26
 8101cfe:	bf42      	ittt	mi
 8101d00:	6833      	ldrmi	r3, [r6, #0]
 8101d02:	3302      	addmi	r3, #2
 8101d04:	6033      	strmi	r3, [r6, #0]
 8101d06:	6825      	ldr	r5, [r4, #0]
 8101d08:	f015 0506 	ands.w	r5, r5, #6
 8101d0c:	d106      	bne.n	8101d1c <_printf_common+0x48>
 8101d0e:	f104 0a19 	add.w	sl, r4, #25
 8101d12:	68e3      	ldr	r3, [r4, #12]
 8101d14:	6832      	ldr	r2, [r6, #0]
 8101d16:	1a9b      	subs	r3, r3, r2
 8101d18:	42ab      	cmp	r3, r5
 8101d1a:	dc26      	bgt.n	8101d6a <_printf_common+0x96>
 8101d1c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8101d20:	6822      	ldr	r2, [r4, #0]
 8101d22:	3b00      	subs	r3, #0
 8101d24:	bf18      	it	ne
 8101d26:	2301      	movne	r3, #1
 8101d28:	0692      	lsls	r2, r2, #26
 8101d2a:	d42b      	bmi.n	8101d84 <_printf_common+0xb0>
 8101d2c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8101d30:	4641      	mov	r1, r8
 8101d32:	4638      	mov	r0, r7
 8101d34:	47c8      	blx	r9
 8101d36:	3001      	adds	r0, #1
 8101d38:	d01e      	beq.n	8101d78 <_printf_common+0xa4>
 8101d3a:	6823      	ldr	r3, [r4, #0]
 8101d3c:	6922      	ldr	r2, [r4, #16]
 8101d3e:	f003 0306 	and.w	r3, r3, #6
 8101d42:	2b04      	cmp	r3, #4
 8101d44:	bf02      	ittt	eq
 8101d46:	68e5      	ldreq	r5, [r4, #12]
 8101d48:	6833      	ldreq	r3, [r6, #0]
 8101d4a:	1aed      	subeq	r5, r5, r3
 8101d4c:	68a3      	ldr	r3, [r4, #8]
 8101d4e:	bf0c      	ite	eq
 8101d50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8101d54:	2500      	movne	r5, #0
 8101d56:	4293      	cmp	r3, r2
 8101d58:	bfc4      	itt	gt
 8101d5a:	1a9b      	subgt	r3, r3, r2
 8101d5c:	18ed      	addgt	r5, r5, r3
 8101d5e:	2600      	movs	r6, #0
 8101d60:	341a      	adds	r4, #26
 8101d62:	42b5      	cmp	r5, r6
 8101d64:	d11a      	bne.n	8101d9c <_printf_common+0xc8>
 8101d66:	2000      	movs	r0, #0
 8101d68:	e008      	b.n	8101d7c <_printf_common+0xa8>
 8101d6a:	2301      	movs	r3, #1
 8101d6c:	4652      	mov	r2, sl
 8101d6e:	4641      	mov	r1, r8
 8101d70:	4638      	mov	r0, r7
 8101d72:	47c8      	blx	r9
 8101d74:	3001      	adds	r0, #1
 8101d76:	d103      	bne.n	8101d80 <_printf_common+0xac>
 8101d78:	f04f 30ff 	mov.w	r0, #4294967295
 8101d7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101d80:	3501      	adds	r5, #1
 8101d82:	e7c6      	b.n	8101d12 <_printf_common+0x3e>
 8101d84:	18e1      	adds	r1, r4, r3
 8101d86:	1c5a      	adds	r2, r3, #1
 8101d88:	2030      	movs	r0, #48	@ 0x30
 8101d8a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8101d8e:	4422      	add	r2, r4
 8101d90:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8101d94:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8101d98:	3302      	adds	r3, #2
 8101d9a:	e7c7      	b.n	8101d2c <_printf_common+0x58>
 8101d9c:	2301      	movs	r3, #1
 8101d9e:	4622      	mov	r2, r4
 8101da0:	4641      	mov	r1, r8
 8101da2:	4638      	mov	r0, r7
 8101da4:	47c8      	blx	r9
 8101da6:	3001      	adds	r0, #1
 8101da8:	d0e6      	beq.n	8101d78 <_printf_common+0xa4>
 8101daa:	3601      	adds	r6, #1
 8101dac:	e7d9      	b.n	8101d62 <_printf_common+0x8e>
	...

08101db0 <_printf_i>:
 8101db0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8101db4:	7e0f      	ldrb	r7, [r1, #24]
 8101db6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8101db8:	2f78      	cmp	r7, #120	@ 0x78
 8101dba:	4691      	mov	r9, r2
 8101dbc:	4680      	mov	r8, r0
 8101dbe:	460c      	mov	r4, r1
 8101dc0:	469a      	mov	sl, r3
 8101dc2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8101dc6:	d807      	bhi.n	8101dd8 <_printf_i+0x28>
 8101dc8:	2f62      	cmp	r7, #98	@ 0x62
 8101dca:	d80a      	bhi.n	8101de2 <_printf_i+0x32>
 8101dcc:	2f00      	cmp	r7, #0
 8101dce:	f000 80d2 	beq.w	8101f76 <_printf_i+0x1c6>
 8101dd2:	2f58      	cmp	r7, #88	@ 0x58
 8101dd4:	f000 80b9 	beq.w	8101f4a <_printf_i+0x19a>
 8101dd8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8101ddc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8101de0:	e03a      	b.n	8101e58 <_printf_i+0xa8>
 8101de2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8101de6:	2b15      	cmp	r3, #21
 8101de8:	d8f6      	bhi.n	8101dd8 <_printf_i+0x28>
 8101dea:	a101      	add	r1, pc, #4	@ (adr r1, 8101df0 <_printf_i+0x40>)
 8101dec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8101df0:	08101e49 	.word	0x08101e49
 8101df4:	08101e5d 	.word	0x08101e5d
 8101df8:	08101dd9 	.word	0x08101dd9
 8101dfc:	08101dd9 	.word	0x08101dd9
 8101e00:	08101dd9 	.word	0x08101dd9
 8101e04:	08101dd9 	.word	0x08101dd9
 8101e08:	08101e5d 	.word	0x08101e5d
 8101e0c:	08101dd9 	.word	0x08101dd9
 8101e10:	08101dd9 	.word	0x08101dd9
 8101e14:	08101dd9 	.word	0x08101dd9
 8101e18:	08101dd9 	.word	0x08101dd9
 8101e1c:	08101f5d 	.word	0x08101f5d
 8101e20:	08101e87 	.word	0x08101e87
 8101e24:	08101f17 	.word	0x08101f17
 8101e28:	08101dd9 	.word	0x08101dd9
 8101e2c:	08101dd9 	.word	0x08101dd9
 8101e30:	08101f7f 	.word	0x08101f7f
 8101e34:	08101dd9 	.word	0x08101dd9
 8101e38:	08101e87 	.word	0x08101e87
 8101e3c:	08101dd9 	.word	0x08101dd9
 8101e40:	08101dd9 	.word	0x08101dd9
 8101e44:	08101f1f 	.word	0x08101f1f
 8101e48:	6833      	ldr	r3, [r6, #0]
 8101e4a:	1d1a      	adds	r2, r3, #4
 8101e4c:	681b      	ldr	r3, [r3, #0]
 8101e4e:	6032      	str	r2, [r6, #0]
 8101e50:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8101e54:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8101e58:	2301      	movs	r3, #1
 8101e5a:	e09d      	b.n	8101f98 <_printf_i+0x1e8>
 8101e5c:	6833      	ldr	r3, [r6, #0]
 8101e5e:	6820      	ldr	r0, [r4, #0]
 8101e60:	1d19      	adds	r1, r3, #4
 8101e62:	6031      	str	r1, [r6, #0]
 8101e64:	0606      	lsls	r6, r0, #24
 8101e66:	d501      	bpl.n	8101e6c <_printf_i+0xbc>
 8101e68:	681d      	ldr	r5, [r3, #0]
 8101e6a:	e003      	b.n	8101e74 <_printf_i+0xc4>
 8101e6c:	0645      	lsls	r5, r0, #25
 8101e6e:	d5fb      	bpl.n	8101e68 <_printf_i+0xb8>
 8101e70:	f9b3 5000 	ldrsh.w	r5, [r3]
 8101e74:	2d00      	cmp	r5, #0
 8101e76:	da03      	bge.n	8101e80 <_printf_i+0xd0>
 8101e78:	232d      	movs	r3, #45	@ 0x2d
 8101e7a:	426d      	negs	r5, r5
 8101e7c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8101e80:	4859      	ldr	r0, [pc, #356]	@ (8101fe8 <_printf_i+0x238>)
 8101e82:	230a      	movs	r3, #10
 8101e84:	e011      	b.n	8101eaa <_printf_i+0xfa>
 8101e86:	6821      	ldr	r1, [r4, #0]
 8101e88:	6833      	ldr	r3, [r6, #0]
 8101e8a:	0608      	lsls	r0, r1, #24
 8101e8c:	f853 5b04 	ldr.w	r5, [r3], #4
 8101e90:	d402      	bmi.n	8101e98 <_printf_i+0xe8>
 8101e92:	0649      	lsls	r1, r1, #25
 8101e94:	bf48      	it	mi
 8101e96:	b2ad      	uxthmi	r5, r5
 8101e98:	2f6f      	cmp	r7, #111	@ 0x6f
 8101e9a:	4853      	ldr	r0, [pc, #332]	@ (8101fe8 <_printf_i+0x238>)
 8101e9c:	6033      	str	r3, [r6, #0]
 8101e9e:	bf14      	ite	ne
 8101ea0:	230a      	movne	r3, #10
 8101ea2:	2308      	moveq	r3, #8
 8101ea4:	2100      	movs	r1, #0
 8101ea6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8101eaa:	6866      	ldr	r6, [r4, #4]
 8101eac:	60a6      	str	r6, [r4, #8]
 8101eae:	2e00      	cmp	r6, #0
 8101eb0:	bfa2      	ittt	ge
 8101eb2:	6821      	ldrge	r1, [r4, #0]
 8101eb4:	f021 0104 	bicge.w	r1, r1, #4
 8101eb8:	6021      	strge	r1, [r4, #0]
 8101eba:	b90d      	cbnz	r5, 8101ec0 <_printf_i+0x110>
 8101ebc:	2e00      	cmp	r6, #0
 8101ebe:	d04b      	beq.n	8101f58 <_printf_i+0x1a8>
 8101ec0:	4616      	mov	r6, r2
 8101ec2:	fbb5 f1f3 	udiv	r1, r5, r3
 8101ec6:	fb03 5711 	mls	r7, r3, r1, r5
 8101eca:	5dc7      	ldrb	r7, [r0, r7]
 8101ecc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8101ed0:	462f      	mov	r7, r5
 8101ed2:	42bb      	cmp	r3, r7
 8101ed4:	460d      	mov	r5, r1
 8101ed6:	d9f4      	bls.n	8101ec2 <_printf_i+0x112>
 8101ed8:	2b08      	cmp	r3, #8
 8101eda:	d10b      	bne.n	8101ef4 <_printf_i+0x144>
 8101edc:	6823      	ldr	r3, [r4, #0]
 8101ede:	07df      	lsls	r7, r3, #31
 8101ee0:	d508      	bpl.n	8101ef4 <_printf_i+0x144>
 8101ee2:	6923      	ldr	r3, [r4, #16]
 8101ee4:	6861      	ldr	r1, [r4, #4]
 8101ee6:	4299      	cmp	r1, r3
 8101ee8:	bfde      	ittt	le
 8101eea:	2330      	movle	r3, #48	@ 0x30
 8101eec:	f806 3c01 	strble.w	r3, [r6, #-1]
 8101ef0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8101ef4:	1b92      	subs	r2, r2, r6
 8101ef6:	6122      	str	r2, [r4, #16]
 8101ef8:	f8cd a000 	str.w	sl, [sp]
 8101efc:	464b      	mov	r3, r9
 8101efe:	aa03      	add	r2, sp, #12
 8101f00:	4621      	mov	r1, r4
 8101f02:	4640      	mov	r0, r8
 8101f04:	f7ff fee6 	bl	8101cd4 <_printf_common>
 8101f08:	3001      	adds	r0, #1
 8101f0a:	d14a      	bne.n	8101fa2 <_printf_i+0x1f2>
 8101f0c:	f04f 30ff 	mov.w	r0, #4294967295
 8101f10:	b004      	add	sp, #16
 8101f12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101f16:	6823      	ldr	r3, [r4, #0]
 8101f18:	f043 0320 	orr.w	r3, r3, #32
 8101f1c:	6023      	str	r3, [r4, #0]
 8101f1e:	4833      	ldr	r0, [pc, #204]	@ (8101fec <_printf_i+0x23c>)
 8101f20:	2778      	movs	r7, #120	@ 0x78
 8101f22:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8101f26:	6823      	ldr	r3, [r4, #0]
 8101f28:	6831      	ldr	r1, [r6, #0]
 8101f2a:	061f      	lsls	r7, r3, #24
 8101f2c:	f851 5b04 	ldr.w	r5, [r1], #4
 8101f30:	d402      	bmi.n	8101f38 <_printf_i+0x188>
 8101f32:	065f      	lsls	r7, r3, #25
 8101f34:	bf48      	it	mi
 8101f36:	b2ad      	uxthmi	r5, r5
 8101f38:	6031      	str	r1, [r6, #0]
 8101f3a:	07d9      	lsls	r1, r3, #31
 8101f3c:	bf44      	itt	mi
 8101f3e:	f043 0320 	orrmi.w	r3, r3, #32
 8101f42:	6023      	strmi	r3, [r4, #0]
 8101f44:	b11d      	cbz	r5, 8101f4e <_printf_i+0x19e>
 8101f46:	2310      	movs	r3, #16
 8101f48:	e7ac      	b.n	8101ea4 <_printf_i+0xf4>
 8101f4a:	4827      	ldr	r0, [pc, #156]	@ (8101fe8 <_printf_i+0x238>)
 8101f4c:	e7e9      	b.n	8101f22 <_printf_i+0x172>
 8101f4e:	6823      	ldr	r3, [r4, #0]
 8101f50:	f023 0320 	bic.w	r3, r3, #32
 8101f54:	6023      	str	r3, [r4, #0]
 8101f56:	e7f6      	b.n	8101f46 <_printf_i+0x196>
 8101f58:	4616      	mov	r6, r2
 8101f5a:	e7bd      	b.n	8101ed8 <_printf_i+0x128>
 8101f5c:	6833      	ldr	r3, [r6, #0]
 8101f5e:	6825      	ldr	r5, [r4, #0]
 8101f60:	6961      	ldr	r1, [r4, #20]
 8101f62:	1d18      	adds	r0, r3, #4
 8101f64:	6030      	str	r0, [r6, #0]
 8101f66:	062e      	lsls	r6, r5, #24
 8101f68:	681b      	ldr	r3, [r3, #0]
 8101f6a:	d501      	bpl.n	8101f70 <_printf_i+0x1c0>
 8101f6c:	6019      	str	r1, [r3, #0]
 8101f6e:	e002      	b.n	8101f76 <_printf_i+0x1c6>
 8101f70:	0668      	lsls	r0, r5, #25
 8101f72:	d5fb      	bpl.n	8101f6c <_printf_i+0x1bc>
 8101f74:	8019      	strh	r1, [r3, #0]
 8101f76:	2300      	movs	r3, #0
 8101f78:	6123      	str	r3, [r4, #16]
 8101f7a:	4616      	mov	r6, r2
 8101f7c:	e7bc      	b.n	8101ef8 <_printf_i+0x148>
 8101f7e:	6833      	ldr	r3, [r6, #0]
 8101f80:	1d1a      	adds	r2, r3, #4
 8101f82:	6032      	str	r2, [r6, #0]
 8101f84:	681e      	ldr	r6, [r3, #0]
 8101f86:	6862      	ldr	r2, [r4, #4]
 8101f88:	2100      	movs	r1, #0
 8101f8a:	4630      	mov	r0, r6
 8101f8c:	f7fe f9a8 	bl	81002e0 <memchr>
 8101f90:	b108      	cbz	r0, 8101f96 <_printf_i+0x1e6>
 8101f92:	1b80      	subs	r0, r0, r6
 8101f94:	6060      	str	r0, [r4, #4]
 8101f96:	6863      	ldr	r3, [r4, #4]
 8101f98:	6123      	str	r3, [r4, #16]
 8101f9a:	2300      	movs	r3, #0
 8101f9c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8101fa0:	e7aa      	b.n	8101ef8 <_printf_i+0x148>
 8101fa2:	6923      	ldr	r3, [r4, #16]
 8101fa4:	4632      	mov	r2, r6
 8101fa6:	4649      	mov	r1, r9
 8101fa8:	4640      	mov	r0, r8
 8101faa:	47d0      	blx	sl
 8101fac:	3001      	adds	r0, #1
 8101fae:	d0ad      	beq.n	8101f0c <_printf_i+0x15c>
 8101fb0:	6823      	ldr	r3, [r4, #0]
 8101fb2:	079b      	lsls	r3, r3, #30
 8101fb4:	d413      	bmi.n	8101fde <_printf_i+0x22e>
 8101fb6:	68e0      	ldr	r0, [r4, #12]
 8101fb8:	9b03      	ldr	r3, [sp, #12]
 8101fba:	4298      	cmp	r0, r3
 8101fbc:	bfb8      	it	lt
 8101fbe:	4618      	movlt	r0, r3
 8101fc0:	e7a6      	b.n	8101f10 <_printf_i+0x160>
 8101fc2:	2301      	movs	r3, #1
 8101fc4:	4632      	mov	r2, r6
 8101fc6:	4649      	mov	r1, r9
 8101fc8:	4640      	mov	r0, r8
 8101fca:	47d0      	blx	sl
 8101fcc:	3001      	adds	r0, #1
 8101fce:	d09d      	beq.n	8101f0c <_printf_i+0x15c>
 8101fd0:	3501      	adds	r5, #1
 8101fd2:	68e3      	ldr	r3, [r4, #12]
 8101fd4:	9903      	ldr	r1, [sp, #12]
 8101fd6:	1a5b      	subs	r3, r3, r1
 8101fd8:	42ab      	cmp	r3, r5
 8101fda:	dcf2      	bgt.n	8101fc2 <_printf_i+0x212>
 8101fdc:	e7eb      	b.n	8101fb6 <_printf_i+0x206>
 8101fde:	2500      	movs	r5, #0
 8101fe0:	f104 0619 	add.w	r6, r4, #25
 8101fe4:	e7f5      	b.n	8101fd2 <_printf_i+0x222>
 8101fe6:	bf00      	nop
 8101fe8:	0810407a 	.word	0x0810407a
 8101fec:	0810408b 	.word	0x0810408b

08101ff0 <std>:
 8101ff0:	2300      	movs	r3, #0
 8101ff2:	b510      	push	{r4, lr}
 8101ff4:	4604      	mov	r4, r0
 8101ff6:	e9c0 3300 	strd	r3, r3, [r0]
 8101ffa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8101ffe:	6083      	str	r3, [r0, #8]
 8102000:	8181      	strh	r1, [r0, #12]
 8102002:	6643      	str	r3, [r0, #100]	@ 0x64
 8102004:	81c2      	strh	r2, [r0, #14]
 8102006:	6183      	str	r3, [r0, #24]
 8102008:	4619      	mov	r1, r3
 810200a:	2208      	movs	r2, #8
 810200c:	305c      	adds	r0, #92	@ 0x5c
 810200e:	f000 f8f4 	bl	81021fa <memset>
 8102012:	4b0d      	ldr	r3, [pc, #52]	@ (8102048 <std+0x58>)
 8102014:	6263      	str	r3, [r4, #36]	@ 0x24
 8102016:	4b0d      	ldr	r3, [pc, #52]	@ (810204c <std+0x5c>)
 8102018:	62a3      	str	r3, [r4, #40]	@ 0x28
 810201a:	4b0d      	ldr	r3, [pc, #52]	@ (8102050 <std+0x60>)
 810201c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 810201e:	4b0d      	ldr	r3, [pc, #52]	@ (8102054 <std+0x64>)
 8102020:	6323      	str	r3, [r4, #48]	@ 0x30
 8102022:	4b0d      	ldr	r3, [pc, #52]	@ (8102058 <std+0x68>)
 8102024:	6224      	str	r4, [r4, #32]
 8102026:	429c      	cmp	r4, r3
 8102028:	d006      	beq.n	8102038 <std+0x48>
 810202a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 810202e:	4294      	cmp	r4, r2
 8102030:	d002      	beq.n	8102038 <std+0x48>
 8102032:	33d0      	adds	r3, #208	@ 0xd0
 8102034:	429c      	cmp	r4, r3
 8102036:	d105      	bne.n	8102044 <std+0x54>
 8102038:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 810203c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8102040:	f000 b958 	b.w	81022f4 <__retarget_lock_init_recursive>
 8102044:	bd10      	pop	{r4, pc}
 8102046:	bf00      	nop
 8102048:	08102175 	.word	0x08102175
 810204c:	08102197 	.word	0x08102197
 8102050:	081021cf 	.word	0x081021cf
 8102054:	081021f3 	.word	0x081021f3
 8102058:	100001fc 	.word	0x100001fc

0810205c <stdio_exit_handler>:
 810205c:	4a02      	ldr	r2, [pc, #8]	@ (8102068 <stdio_exit_handler+0xc>)
 810205e:	4903      	ldr	r1, [pc, #12]	@ (810206c <stdio_exit_handler+0x10>)
 8102060:	4803      	ldr	r0, [pc, #12]	@ (8102070 <stdio_exit_handler+0x14>)
 8102062:	f000 b869 	b.w	8102138 <_fwalk_sglue>
 8102066:	bf00      	nop
 8102068:	10000010 	.word	0x10000010
 810206c:	081039a5 	.word	0x081039a5
 8102070:	10000020 	.word	0x10000020

08102074 <cleanup_stdio>:
 8102074:	6841      	ldr	r1, [r0, #4]
 8102076:	4b0c      	ldr	r3, [pc, #48]	@ (81020a8 <cleanup_stdio+0x34>)
 8102078:	4299      	cmp	r1, r3
 810207a:	b510      	push	{r4, lr}
 810207c:	4604      	mov	r4, r0
 810207e:	d001      	beq.n	8102084 <cleanup_stdio+0x10>
 8102080:	f001 fc90 	bl	81039a4 <_fflush_r>
 8102084:	68a1      	ldr	r1, [r4, #8]
 8102086:	4b09      	ldr	r3, [pc, #36]	@ (81020ac <cleanup_stdio+0x38>)
 8102088:	4299      	cmp	r1, r3
 810208a:	d002      	beq.n	8102092 <cleanup_stdio+0x1e>
 810208c:	4620      	mov	r0, r4
 810208e:	f001 fc89 	bl	81039a4 <_fflush_r>
 8102092:	68e1      	ldr	r1, [r4, #12]
 8102094:	4b06      	ldr	r3, [pc, #24]	@ (81020b0 <cleanup_stdio+0x3c>)
 8102096:	4299      	cmp	r1, r3
 8102098:	d004      	beq.n	81020a4 <cleanup_stdio+0x30>
 810209a:	4620      	mov	r0, r4
 810209c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 81020a0:	f001 bc80 	b.w	81039a4 <_fflush_r>
 81020a4:	bd10      	pop	{r4, pc}
 81020a6:	bf00      	nop
 81020a8:	100001fc 	.word	0x100001fc
 81020ac:	10000264 	.word	0x10000264
 81020b0:	100002cc 	.word	0x100002cc

081020b4 <global_stdio_init.part.0>:
 81020b4:	b510      	push	{r4, lr}
 81020b6:	4b0b      	ldr	r3, [pc, #44]	@ (81020e4 <global_stdio_init.part.0+0x30>)
 81020b8:	4c0b      	ldr	r4, [pc, #44]	@ (81020e8 <global_stdio_init.part.0+0x34>)
 81020ba:	4a0c      	ldr	r2, [pc, #48]	@ (81020ec <global_stdio_init.part.0+0x38>)
 81020bc:	601a      	str	r2, [r3, #0]
 81020be:	4620      	mov	r0, r4
 81020c0:	2200      	movs	r2, #0
 81020c2:	2104      	movs	r1, #4
 81020c4:	f7ff ff94 	bl	8101ff0 <std>
 81020c8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 81020cc:	2201      	movs	r2, #1
 81020ce:	2109      	movs	r1, #9
 81020d0:	f7ff ff8e 	bl	8101ff0 <std>
 81020d4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 81020d8:	2202      	movs	r2, #2
 81020da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 81020de:	2112      	movs	r1, #18
 81020e0:	f7ff bf86 	b.w	8101ff0 <std>
 81020e4:	10000334 	.word	0x10000334
 81020e8:	100001fc 	.word	0x100001fc
 81020ec:	0810205d 	.word	0x0810205d

081020f0 <__sfp_lock_acquire>:
 81020f0:	4801      	ldr	r0, [pc, #4]	@ (81020f8 <__sfp_lock_acquire+0x8>)
 81020f2:	f000 b900 	b.w	81022f6 <__retarget_lock_acquire_recursive>
 81020f6:	bf00      	nop
 81020f8:	1000033d 	.word	0x1000033d

081020fc <__sfp_lock_release>:
 81020fc:	4801      	ldr	r0, [pc, #4]	@ (8102104 <__sfp_lock_release+0x8>)
 81020fe:	f000 b8fb 	b.w	81022f8 <__retarget_lock_release_recursive>
 8102102:	bf00      	nop
 8102104:	1000033d 	.word	0x1000033d

08102108 <__sinit>:
 8102108:	b510      	push	{r4, lr}
 810210a:	4604      	mov	r4, r0
 810210c:	f7ff fff0 	bl	81020f0 <__sfp_lock_acquire>
 8102110:	6a23      	ldr	r3, [r4, #32]
 8102112:	b11b      	cbz	r3, 810211c <__sinit+0x14>
 8102114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8102118:	f7ff bff0 	b.w	81020fc <__sfp_lock_release>
 810211c:	4b04      	ldr	r3, [pc, #16]	@ (8102130 <__sinit+0x28>)
 810211e:	6223      	str	r3, [r4, #32]
 8102120:	4b04      	ldr	r3, [pc, #16]	@ (8102134 <__sinit+0x2c>)
 8102122:	681b      	ldr	r3, [r3, #0]
 8102124:	2b00      	cmp	r3, #0
 8102126:	d1f5      	bne.n	8102114 <__sinit+0xc>
 8102128:	f7ff ffc4 	bl	81020b4 <global_stdio_init.part.0>
 810212c:	e7f2      	b.n	8102114 <__sinit+0xc>
 810212e:	bf00      	nop
 8102130:	08102075 	.word	0x08102075
 8102134:	10000334 	.word	0x10000334

08102138 <_fwalk_sglue>:
 8102138:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810213c:	4607      	mov	r7, r0
 810213e:	4688      	mov	r8, r1
 8102140:	4614      	mov	r4, r2
 8102142:	2600      	movs	r6, #0
 8102144:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8102148:	f1b9 0901 	subs.w	r9, r9, #1
 810214c:	d505      	bpl.n	810215a <_fwalk_sglue+0x22>
 810214e:	6824      	ldr	r4, [r4, #0]
 8102150:	2c00      	cmp	r4, #0
 8102152:	d1f7      	bne.n	8102144 <_fwalk_sglue+0xc>
 8102154:	4630      	mov	r0, r6
 8102156:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 810215a:	89ab      	ldrh	r3, [r5, #12]
 810215c:	2b01      	cmp	r3, #1
 810215e:	d907      	bls.n	8102170 <_fwalk_sglue+0x38>
 8102160:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8102164:	3301      	adds	r3, #1
 8102166:	d003      	beq.n	8102170 <_fwalk_sglue+0x38>
 8102168:	4629      	mov	r1, r5
 810216a:	4638      	mov	r0, r7
 810216c:	47c0      	blx	r8
 810216e:	4306      	orrs	r6, r0
 8102170:	3568      	adds	r5, #104	@ 0x68
 8102172:	e7e9      	b.n	8102148 <_fwalk_sglue+0x10>

08102174 <__sread>:
 8102174:	b510      	push	{r4, lr}
 8102176:	460c      	mov	r4, r1
 8102178:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810217c:	f000 f86c 	bl	8102258 <_read_r>
 8102180:	2800      	cmp	r0, #0
 8102182:	bfab      	itete	ge
 8102184:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8102186:	89a3      	ldrhlt	r3, [r4, #12]
 8102188:	181b      	addge	r3, r3, r0
 810218a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 810218e:	bfac      	ite	ge
 8102190:	6563      	strge	r3, [r4, #84]	@ 0x54
 8102192:	81a3      	strhlt	r3, [r4, #12]
 8102194:	bd10      	pop	{r4, pc}

08102196 <__swrite>:
 8102196:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 810219a:	461f      	mov	r7, r3
 810219c:	898b      	ldrh	r3, [r1, #12]
 810219e:	05db      	lsls	r3, r3, #23
 81021a0:	4605      	mov	r5, r0
 81021a2:	460c      	mov	r4, r1
 81021a4:	4616      	mov	r6, r2
 81021a6:	d505      	bpl.n	81021b4 <__swrite+0x1e>
 81021a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81021ac:	2302      	movs	r3, #2
 81021ae:	2200      	movs	r2, #0
 81021b0:	f000 f840 	bl	8102234 <_lseek_r>
 81021b4:	89a3      	ldrh	r3, [r4, #12]
 81021b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 81021ba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 81021be:	81a3      	strh	r3, [r4, #12]
 81021c0:	4632      	mov	r2, r6
 81021c2:	463b      	mov	r3, r7
 81021c4:	4628      	mov	r0, r5
 81021c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 81021ca:	f000 b857 	b.w	810227c <_write_r>

081021ce <__sseek>:
 81021ce:	b510      	push	{r4, lr}
 81021d0:	460c      	mov	r4, r1
 81021d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81021d6:	f000 f82d 	bl	8102234 <_lseek_r>
 81021da:	1c43      	adds	r3, r0, #1
 81021dc:	89a3      	ldrh	r3, [r4, #12]
 81021de:	bf15      	itete	ne
 81021e0:	6560      	strne	r0, [r4, #84]	@ 0x54
 81021e2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 81021e6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 81021ea:	81a3      	strheq	r3, [r4, #12]
 81021ec:	bf18      	it	ne
 81021ee:	81a3      	strhne	r3, [r4, #12]
 81021f0:	bd10      	pop	{r4, pc}

081021f2 <__sclose>:
 81021f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81021f6:	f000 b80d 	b.w	8102214 <_close_r>

081021fa <memset>:
 81021fa:	4402      	add	r2, r0
 81021fc:	4603      	mov	r3, r0
 81021fe:	4293      	cmp	r3, r2
 8102200:	d100      	bne.n	8102204 <memset+0xa>
 8102202:	4770      	bx	lr
 8102204:	f803 1b01 	strb.w	r1, [r3], #1
 8102208:	e7f9      	b.n	81021fe <memset+0x4>
	...

0810220c <_localeconv_r>:
 810220c:	4800      	ldr	r0, [pc, #0]	@ (8102210 <_localeconv_r+0x4>)
 810220e:	4770      	bx	lr
 8102210:	1000015c 	.word	0x1000015c

08102214 <_close_r>:
 8102214:	b538      	push	{r3, r4, r5, lr}
 8102216:	4d06      	ldr	r5, [pc, #24]	@ (8102230 <_close_r+0x1c>)
 8102218:	2300      	movs	r3, #0
 810221a:	4604      	mov	r4, r0
 810221c:	4608      	mov	r0, r1
 810221e:	602b      	str	r3, [r5, #0]
 8102220:	f7fe fe45 	bl	8100eae <_close>
 8102224:	1c43      	adds	r3, r0, #1
 8102226:	d102      	bne.n	810222e <_close_r+0x1a>
 8102228:	682b      	ldr	r3, [r5, #0]
 810222a:	b103      	cbz	r3, 810222e <_close_r+0x1a>
 810222c:	6023      	str	r3, [r4, #0]
 810222e:	bd38      	pop	{r3, r4, r5, pc}
 8102230:	10000338 	.word	0x10000338

08102234 <_lseek_r>:
 8102234:	b538      	push	{r3, r4, r5, lr}
 8102236:	4d07      	ldr	r5, [pc, #28]	@ (8102254 <_lseek_r+0x20>)
 8102238:	4604      	mov	r4, r0
 810223a:	4608      	mov	r0, r1
 810223c:	4611      	mov	r1, r2
 810223e:	2200      	movs	r2, #0
 8102240:	602a      	str	r2, [r5, #0]
 8102242:	461a      	mov	r2, r3
 8102244:	f7fe fe5a 	bl	8100efc <_lseek>
 8102248:	1c43      	adds	r3, r0, #1
 810224a:	d102      	bne.n	8102252 <_lseek_r+0x1e>
 810224c:	682b      	ldr	r3, [r5, #0]
 810224e:	b103      	cbz	r3, 8102252 <_lseek_r+0x1e>
 8102250:	6023      	str	r3, [r4, #0]
 8102252:	bd38      	pop	{r3, r4, r5, pc}
 8102254:	10000338 	.word	0x10000338

08102258 <_read_r>:
 8102258:	b538      	push	{r3, r4, r5, lr}
 810225a:	4d07      	ldr	r5, [pc, #28]	@ (8102278 <_read_r+0x20>)
 810225c:	4604      	mov	r4, r0
 810225e:	4608      	mov	r0, r1
 8102260:	4611      	mov	r1, r2
 8102262:	2200      	movs	r2, #0
 8102264:	602a      	str	r2, [r5, #0]
 8102266:	461a      	mov	r2, r3
 8102268:	f7fe fde8 	bl	8100e3c <_read>
 810226c:	1c43      	adds	r3, r0, #1
 810226e:	d102      	bne.n	8102276 <_read_r+0x1e>
 8102270:	682b      	ldr	r3, [r5, #0]
 8102272:	b103      	cbz	r3, 8102276 <_read_r+0x1e>
 8102274:	6023      	str	r3, [r4, #0]
 8102276:	bd38      	pop	{r3, r4, r5, pc}
 8102278:	10000338 	.word	0x10000338

0810227c <_write_r>:
 810227c:	b538      	push	{r3, r4, r5, lr}
 810227e:	4d07      	ldr	r5, [pc, #28]	@ (810229c <_write_r+0x20>)
 8102280:	4604      	mov	r4, r0
 8102282:	4608      	mov	r0, r1
 8102284:	4611      	mov	r1, r2
 8102286:	2200      	movs	r2, #0
 8102288:	602a      	str	r2, [r5, #0]
 810228a:	461a      	mov	r2, r3
 810228c:	f7fe fdf3 	bl	8100e76 <_write>
 8102290:	1c43      	adds	r3, r0, #1
 8102292:	d102      	bne.n	810229a <_write_r+0x1e>
 8102294:	682b      	ldr	r3, [r5, #0]
 8102296:	b103      	cbz	r3, 810229a <_write_r+0x1e>
 8102298:	6023      	str	r3, [r4, #0]
 810229a:	bd38      	pop	{r3, r4, r5, pc}
 810229c:	10000338 	.word	0x10000338

081022a0 <__errno>:
 81022a0:	4b01      	ldr	r3, [pc, #4]	@ (81022a8 <__errno+0x8>)
 81022a2:	6818      	ldr	r0, [r3, #0]
 81022a4:	4770      	bx	lr
 81022a6:	bf00      	nop
 81022a8:	1000001c 	.word	0x1000001c

081022ac <__libc_init_array>:
 81022ac:	b570      	push	{r4, r5, r6, lr}
 81022ae:	4d0d      	ldr	r5, [pc, #52]	@ (81022e4 <__libc_init_array+0x38>)
 81022b0:	4c0d      	ldr	r4, [pc, #52]	@ (81022e8 <__libc_init_array+0x3c>)
 81022b2:	1b64      	subs	r4, r4, r5
 81022b4:	10a4      	asrs	r4, r4, #2
 81022b6:	2600      	movs	r6, #0
 81022b8:	42a6      	cmp	r6, r4
 81022ba:	d109      	bne.n	81022d0 <__libc_init_array+0x24>
 81022bc:	4d0b      	ldr	r5, [pc, #44]	@ (81022ec <__libc_init_array+0x40>)
 81022be:	4c0c      	ldr	r4, [pc, #48]	@ (81022f0 <__libc_init_array+0x44>)
 81022c0:	f001 febe 	bl	8104040 <_init>
 81022c4:	1b64      	subs	r4, r4, r5
 81022c6:	10a4      	asrs	r4, r4, #2
 81022c8:	2600      	movs	r6, #0
 81022ca:	42a6      	cmp	r6, r4
 81022cc:	d105      	bne.n	81022da <__libc_init_array+0x2e>
 81022ce:	bd70      	pop	{r4, r5, r6, pc}
 81022d0:	f855 3b04 	ldr.w	r3, [r5], #4
 81022d4:	4798      	blx	r3
 81022d6:	3601      	adds	r6, #1
 81022d8:	e7ee      	b.n	81022b8 <__libc_init_array+0xc>
 81022da:	f855 3b04 	ldr.w	r3, [r5], #4
 81022de:	4798      	blx	r3
 81022e0:	3601      	adds	r6, #1
 81022e2:	e7f2      	b.n	81022ca <__libc_init_array+0x1e>
 81022e4:	081043e0 	.word	0x081043e0
 81022e8:	081043e0 	.word	0x081043e0
 81022ec:	081043e0 	.word	0x081043e0
 81022f0:	081043e4 	.word	0x081043e4

081022f4 <__retarget_lock_init_recursive>:
 81022f4:	4770      	bx	lr

081022f6 <__retarget_lock_acquire_recursive>:
 81022f6:	4770      	bx	lr

081022f8 <__retarget_lock_release_recursive>:
 81022f8:	4770      	bx	lr

081022fa <quorem>:
 81022fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81022fe:	6903      	ldr	r3, [r0, #16]
 8102300:	690c      	ldr	r4, [r1, #16]
 8102302:	42a3      	cmp	r3, r4
 8102304:	4607      	mov	r7, r0
 8102306:	db7e      	blt.n	8102406 <quorem+0x10c>
 8102308:	3c01      	subs	r4, #1
 810230a:	f101 0814 	add.w	r8, r1, #20
 810230e:	00a3      	lsls	r3, r4, #2
 8102310:	f100 0514 	add.w	r5, r0, #20
 8102314:	9300      	str	r3, [sp, #0]
 8102316:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 810231a:	9301      	str	r3, [sp, #4]
 810231c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8102320:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8102324:	3301      	adds	r3, #1
 8102326:	429a      	cmp	r2, r3
 8102328:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 810232c:	fbb2 f6f3 	udiv	r6, r2, r3
 8102330:	d32e      	bcc.n	8102390 <quorem+0x96>
 8102332:	f04f 0a00 	mov.w	sl, #0
 8102336:	46c4      	mov	ip, r8
 8102338:	46ae      	mov	lr, r5
 810233a:	46d3      	mov	fp, sl
 810233c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8102340:	b298      	uxth	r0, r3
 8102342:	fb06 a000 	mla	r0, r6, r0, sl
 8102346:	0c02      	lsrs	r2, r0, #16
 8102348:	0c1b      	lsrs	r3, r3, #16
 810234a:	fb06 2303 	mla	r3, r6, r3, r2
 810234e:	f8de 2000 	ldr.w	r2, [lr]
 8102352:	b280      	uxth	r0, r0
 8102354:	b292      	uxth	r2, r2
 8102356:	1a12      	subs	r2, r2, r0
 8102358:	445a      	add	r2, fp
 810235a:	f8de 0000 	ldr.w	r0, [lr]
 810235e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8102362:	b29b      	uxth	r3, r3
 8102364:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8102368:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 810236c:	b292      	uxth	r2, r2
 810236e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8102372:	45e1      	cmp	r9, ip
 8102374:	f84e 2b04 	str.w	r2, [lr], #4
 8102378:	ea4f 4b23 	mov.w	fp, r3, asr #16
 810237c:	d2de      	bcs.n	810233c <quorem+0x42>
 810237e:	9b00      	ldr	r3, [sp, #0]
 8102380:	58eb      	ldr	r3, [r5, r3]
 8102382:	b92b      	cbnz	r3, 8102390 <quorem+0x96>
 8102384:	9b01      	ldr	r3, [sp, #4]
 8102386:	3b04      	subs	r3, #4
 8102388:	429d      	cmp	r5, r3
 810238a:	461a      	mov	r2, r3
 810238c:	d32f      	bcc.n	81023ee <quorem+0xf4>
 810238e:	613c      	str	r4, [r7, #16]
 8102390:	4638      	mov	r0, r7
 8102392:	f001 f97b 	bl	810368c <__mcmp>
 8102396:	2800      	cmp	r0, #0
 8102398:	db25      	blt.n	81023e6 <quorem+0xec>
 810239a:	4629      	mov	r1, r5
 810239c:	2000      	movs	r0, #0
 810239e:	f858 2b04 	ldr.w	r2, [r8], #4
 81023a2:	f8d1 c000 	ldr.w	ip, [r1]
 81023a6:	fa1f fe82 	uxth.w	lr, r2
 81023aa:	fa1f f38c 	uxth.w	r3, ip
 81023ae:	eba3 030e 	sub.w	r3, r3, lr
 81023b2:	4403      	add	r3, r0
 81023b4:	0c12      	lsrs	r2, r2, #16
 81023b6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 81023ba:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 81023be:	b29b      	uxth	r3, r3
 81023c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 81023c4:	45c1      	cmp	r9, r8
 81023c6:	f841 3b04 	str.w	r3, [r1], #4
 81023ca:	ea4f 4022 	mov.w	r0, r2, asr #16
 81023ce:	d2e6      	bcs.n	810239e <quorem+0xa4>
 81023d0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 81023d4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 81023d8:	b922      	cbnz	r2, 81023e4 <quorem+0xea>
 81023da:	3b04      	subs	r3, #4
 81023dc:	429d      	cmp	r5, r3
 81023de:	461a      	mov	r2, r3
 81023e0:	d30b      	bcc.n	81023fa <quorem+0x100>
 81023e2:	613c      	str	r4, [r7, #16]
 81023e4:	3601      	adds	r6, #1
 81023e6:	4630      	mov	r0, r6
 81023e8:	b003      	add	sp, #12
 81023ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81023ee:	6812      	ldr	r2, [r2, #0]
 81023f0:	3b04      	subs	r3, #4
 81023f2:	2a00      	cmp	r2, #0
 81023f4:	d1cb      	bne.n	810238e <quorem+0x94>
 81023f6:	3c01      	subs	r4, #1
 81023f8:	e7c6      	b.n	8102388 <quorem+0x8e>
 81023fa:	6812      	ldr	r2, [r2, #0]
 81023fc:	3b04      	subs	r3, #4
 81023fe:	2a00      	cmp	r2, #0
 8102400:	d1ef      	bne.n	81023e2 <quorem+0xe8>
 8102402:	3c01      	subs	r4, #1
 8102404:	e7ea      	b.n	81023dc <quorem+0xe2>
 8102406:	2000      	movs	r0, #0
 8102408:	e7ee      	b.n	81023e8 <quorem+0xee>
 810240a:	0000      	movs	r0, r0
 810240c:	0000      	movs	r0, r0
	...

08102410 <_dtoa_r>:
 8102410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8102414:	69c7      	ldr	r7, [r0, #28]
 8102416:	b099      	sub	sp, #100	@ 0x64
 8102418:	ed8d 0b02 	vstr	d0, [sp, #8]
 810241c:	ec55 4b10 	vmov	r4, r5, d0
 8102420:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8102422:	9109      	str	r1, [sp, #36]	@ 0x24
 8102424:	4683      	mov	fp, r0
 8102426:	920e      	str	r2, [sp, #56]	@ 0x38
 8102428:	9313      	str	r3, [sp, #76]	@ 0x4c
 810242a:	b97f      	cbnz	r7, 810244c <_dtoa_r+0x3c>
 810242c:	2010      	movs	r0, #16
 810242e:	f000 fdfd 	bl	810302c <malloc>
 8102432:	4602      	mov	r2, r0
 8102434:	f8cb 001c 	str.w	r0, [fp, #28]
 8102438:	b920      	cbnz	r0, 8102444 <_dtoa_r+0x34>
 810243a:	4ba7      	ldr	r3, [pc, #668]	@ (81026d8 <_dtoa_r+0x2c8>)
 810243c:	21ef      	movs	r1, #239	@ 0xef
 810243e:	48a7      	ldr	r0, [pc, #668]	@ (81026dc <_dtoa_r+0x2cc>)
 8102440:	f001 faf6 	bl	8103a30 <__assert_func>
 8102444:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8102448:	6007      	str	r7, [r0, #0]
 810244a:	60c7      	str	r7, [r0, #12]
 810244c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8102450:	6819      	ldr	r1, [r3, #0]
 8102452:	b159      	cbz	r1, 810246c <_dtoa_r+0x5c>
 8102454:	685a      	ldr	r2, [r3, #4]
 8102456:	604a      	str	r2, [r1, #4]
 8102458:	2301      	movs	r3, #1
 810245a:	4093      	lsls	r3, r2
 810245c:	608b      	str	r3, [r1, #8]
 810245e:	4658      	mov	r0, fp
 8102460:	f000 feda 	bl	8103218 <_Bfree>
 8102464:	f8db 301c 	ldr.w	r3, [fp, #28]
 8102468:	2200      	movs	r2, #0
 810246a:	601a      	str	r2, [r3, #0]
 810246c:	1e2b      	subs	r3, r5, #0
 810246e:	bfb9      	ittee	lt
 8102470:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8102474:	9303      	strlt	r3, [sp, #12]
 8102476:	2300      	movge	r3, #0
 8102478:	6033      	strge	r3, [r6, #0]
 810247a:	9f03      	ldr	r7, [sp, #12]
 810247c:	4b98      	ldr	r3, [pc, #608]	@ (81026e0 <_dtoa_r+0x2d0>)
 810247e:	bfbc      	itt	lt
 8102480:	2201      	movlt	r2, #1
 8102482:	6032      	strlt	r2, [r6, #0]
 8102484:	43bb      	bics	r3, r7
 8102486:	d112      	bne.n	81024ae <_dtoa_r+0x9e>
 8102488:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 810248a:	f242 730f 	movw	r3, #9999	@ 0x270f
 810248e:	6013      	str	r3, [r2, #0]
 8102490:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8102494:	4323      	orrs	r3, r4
 8102496:	f000 854d 	beq.w	8102f34 <_dtoa_r+0xb24>
 810249a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 810249c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 81026f4 <_dtoa_r+0x2e4>
 81024a0:	2b00      	cmp	r3, #0
 81024a2:	f000 854f 	beq.w	8102f44 <_dtoa_r+0xb34>
 81024a6:	f10a 0303 	add.w	r3, sl, #3
 81024aa:	f000 bd49 	b.w	8102f40 <_dtoa_r+0xb30>
 81024ae:	ed9d 7b02 	vldr	d7, [sp, #8]
 81024b2:	2200      	movs	r2, #0
 81024b4:	ec51 0b17 	vmov	r0, r1, d7
 81024b8:	2300      	movs	r3, #0
 81024ba:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 81024be:	f7fe fb8b 	bl	8100bd8 <__aeabi_dcmpeq>
 81024c2:	4680      	mov	r8, r0
 81024c4:	b158      	cbz	r0, 81024de <_dtoa_r+0xce>
 81024c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 81024c8:	2301      	movs	r3, #1
 81024ca:	6013      	str	r3, [r2, #0]
 81024cc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 81024ce:	b113      	cbz	r3, 81024d6 <_dtoa_r+0xc6>
 81024d0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 81024d2:	4b84      	ldr	r3, [pc, #528]	@ (81026e4 <_dtoa_r+0x2d4>)
 81024d4:	6013      	str	r3, [r2, #0]
 81024d6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 81026f8 <_dtoa_r+0x2e8>
 81024da:	f000 bd33 	b.w	8102f44 <_dtoa_r+0xb34>
 81024de:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 81024e2:	aa16      	add	r2, sp, #88	@ 0x58
 81024e4:	a917      	add	r1, sp, #92	@ 0x5c
 81024e6:	4658      	mov	r0, fp
 81024e8:	f001 f980 	bl	81037ec <__d2b>
 81024ec:	f3c7 560a 	ubfx	r6, r7, #20, #11
 81024f0:	4681      	mov	r9, r0
 81024f2:	2e00      	cmp	r6, #0
 81024f4:	d077      	beq.n	81025e6 <_dtoa_r+0x1d6>
 81024f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 81024f8:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 81024fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8102500:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102504:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8102508:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 810250c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8102510:	4619      	mov	r1, r3
 8102512:	2200      	movs	r2, #0
 8102514:	4b74      	ldr	r3, [pc, #464]	@ (81026e8 <_dtoa_r+0x2d8>)
 8102516:	f7fd ff3f 	bl	8100398 <__aeabi_dsub>
 810251a:	a369      	add	r3, pc, #420	@ (adr r3, 81026c0 <_dtoa_r+0x2b0>)
 810251c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102520:	f7fe f8f2 	bl	8100708 <__aeabi_dmul>
 8102524:	a368      	add	r3, pc, #416	@ (adr r3, 81026c8 <_dtoa_r+0x2b8>)
 8102526:	e9d3 2300 	ldrd	r2, r3, [r3]
 810252a:	f7fd ff37 	bl	810039c <__adddf3>
 810252e:	4604      	mov	r4, r0
 8102530:	4630      	mov	r0, r6
 8102532:	460d      	mov	r5, r1
 8102534:	f7fe f87e 	bl	8100634 <__aeabi_i2d>
 8102538:	a365      	add	r3, pc, #404	@ (adr r3, 81026d0 <_dtoa_r+0x2c0>)
 810253a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810253e:	f7fe f8e3 	bl	8100708 <__aeabi_dmul>
 8102542:	4602      	mov	r2, r0
 8102544:	460b      	mov	r3, r1
 8102546:	4620      	mov	r0, r4
 8102548:	4629      	mov	r1, r5
 810254a:	f7fd ff27 	bl	810039c <__adddf3>
 810254e:	4604      	mov	r4, r0
 8102550:	460d      	mov	r5, r1
 8102552:	f7fe fb89 	bl	8100c68 <__aeabi_d2iz>
 8102556:	2200      	movs	r2, #0
 8102558:	4607      	mov	r7, r0
 810255a:	2300      	movs	r3, #0
 810255c:	4620      	mov	r0, r4
 810255e:	4629      	mov	r1, r5
 8102560:	f7fe fb44 	bl	8100bec <__aeabi_dcmplt>
 8102564:	b140      	cbz	r0, 8102578 <_dtoa_r+0x168>
 8102566:	4638      	mov	r0, r7
 8102568:	f7fe f864 	bl	8100634 <__aeabi_i2d>
 810256c:	4622      	mov	r2, r4
 810256e:	462b      	mov	r3, r5
 8102570:	f7fe fb32 	bl	8100bd8 <__aeabi_dcmpeq>
 8102574:	b900      	cbnz	r0, 8102578 <_dtoa_r+0x168>
 8102576:	3f01      	subs	r7, #1
 8102578:	2f16      	cmp	r7, #22
 810257a:	d851      	bhi.n	8102620 <_dtoa_r+0x210>
 810257c:	4b5b      	ldr	r3, [pc, #364]	@ (81026ec <_dtoa_r+0x2dc>)
 810257e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8102582:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102586:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 810258a:	f7fe fb2f 	bl	8100bec <__aeabi_dcmplt>
 810258e:	2800      	cmp	r0, #0
 8102590:	d048      	beq.n	8102624 <_dtoa_r+0x214>
 8102592:	3f01      	subs	r7, #1
 8102594:	2300      	movs	r3, #0
 8102596:	9312      	str	r3, [sp, #72]	@ 0x48
 8102598:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 810259a:	1b9b      	subs	r3, r3, r6
 810259c:	1e5a      	subs	r2, r3, #1
 810259e:	bf44      	itt	mi
 81025a0:	f1c3 0801 	rsbmi	r8, r3, #1
 81025a4:	2300      	movmi	r3, #0
 81025a6:	9208      	str	r2, [sp, #32]
 81025a8:	bf54      	ite	pl
 81025aa:	f04f 0800 	movpl.w	r8, #0
 81025ae:	9308      	strmi	r3, [sp, #32]
 81025b0:	2f00      	cmp	r7, #0
 81025b2:	db39      	blt.n	8102628 <_dtoa_r+0x218>
 81025b4:	9b08      	ldr	r3, [sp, #32]
 81025b6:	970f      	str	r7, [sp, #60]	@ 0x3c
 81025b8:	443b      	add	r3, r7
 81025ba:	9308      	str	r3, [sp, #32]
 81025bc:	2300      	movs	r3, #0
 81025be:	930a      	str	r3, [sp, #40]	@ 0x28
 81025c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 81025c2:	2b09      	cmp	r3, #9
 81025c4:	d864      	bhi.n	8102690 <_dtoa_r+0x280>
 81025c6:	2b05      	cmp	r3, #5
 81025c8:	bfc4      	itt	gt
 81025ca:	3b04      	subgt	r3, #4
 81025cc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 81025ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 81025d0:	f1a3 0302 	sub.w	r3, r3, #2
 81025d4:	bfcc      	ite	gt
 81025d6:	2400      	movgt	r4, #0
 81025d8:	2401      	movle	r4, #1
 81025da:	2b03      	cmp	r3, #3
 81025dc:	d863      	bhi.n	81026a6 <_dtoa_r+0x296>
 81025de:	e8df f003 	tbb	[pc, r3]
 81025e2:	372a      	.short	0x372a
 81025e4:	5535      	.short	0x5535
 81025e6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 81025ea:	441e      	add	r6, r3
 81025ec:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 81025f0:	2b20      	cmp	r3, #32
 81025f2:	bfc1      	itttt	gt
 81025f4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 81025f8:	409f      	lslgt	r7, r3
 81025fa:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 81025fe:	fa24 f303 	lsrgt.w	r3, r4, r3
 8102602:	bfd6      	itet	le
 8102604:	f1c3 0320 	rsble	r3, r3, #32
 8102608:	ea47 0003 	orrgt.w	r0, r7, r3
 810260c:	fa04 f003 	lslle.w	r0, r4, r3
 8102610:	f7fe f800 	bl	8100614 <__aeabi_ui2d>
 8102614:	2201      	movs	r2, #1
 8102616:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 810261a:	3e01      	subs	r6, #1
 810261c:	9214      	str	r2, [sp, #80]	@ 0x50
 810261e:	e777      	b.n	8102510 <_dtoa_r+0x100>
 8102620:	2301      	movs	r3, #1
 8102622:	e7b8      	b.n	8102596 <_dtoa_r+0x186>
 8102624:	9012      	str	r0, [sp, #72]	@ 0x48
 8102626:	e7b7      	b.n	8102598 <_dtoa_r+0x188>
 8102628:	427b      	negs	r3, r7
 810262a:	930a      	str	r3, [sp, #40]	@ 0x28
 810262c:	2300      	movs	r3, #0
 810262e:	eba8 0807 	sub.w	r8, r8, r7
 8102632:	930f      	str	r3, [sp, #60]	@ 0x3c
 8102634:	e7c4      	b.n	81025c0 <_dtoa_r+0x1b0>
 8102636:	2300      	movs	r3, #0
 8102638:	930b      	str	r3, [sp, #44]	@ 0x2c
 810263a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 810263c:	2b00      	cmp	r3, #0
 810263e:	dc35      	bgt.n	81026ac <_dtoa_r+0x29c>
 8102640:	2301      	movs	r3, #1
 8102642:	9300      	str	r3, [sp, #0]
 8102644:	9307      	str	r3, [sp, #28]
 8102646:	461a      	mov	r2, r3
 8102648:	920e      	str	r2, [sp, #56]	@ 0x38
 810264a:	e00b      	b.n	8102664 <_dtoa_r+0x254>
 810264c:	2301      	movs	r3, #1
 810264e:	e7f3      	b.n	8102638 <_dtoa_r+0x228>
 8102650:	2300      	movs	r3, #0
 8102652:	930b      	str	r3, [sp, #44]	@ 0x2c
 8102654:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102656:	18fb      	adds	r3, r7, r3
 8102658:	9300      	str	r3, [sp, #0]
 810265a:	3301      	adds	r3, #1
 810265c:	2b01      	cmp	r3, #1
 810265e:	9307      	str	r3, [sp, #28]
 8102660:	bfb8      	it	lt
 8102662:	2301      	movlt	r3, #1
 8102664:	f8db 001c 	ldr.w	r0, [fp, #28]
 8102668:	2100      	movs	r1, #0
 810266a:	2204      	movs	r2, #4
 810266c:	f102 0514 	add.w	r5, r2, #20
 8102670:	429d      	cmp	r5, r3
 8102672:	d91f      	bls.n	81026b4 <_dtoa_r+0x2a4>
 8102674:	6041      	str	r1, [r0, #4]
 8102676:	4658      	mov	r0, fp
 8102678:	f000 fd8e 	bl	8103198 <_Balloc>
 810267c:	4682      	mov	sl, r0
 810267e:	2800      	cmp	r0, #0
 8102680:	d13c      	bne.n	81026fc <_dtoa_r+0x2ec>
 8102682:	4b1b      	ldr	r3, [pc, #108]	@ (81026f0 <_dtoa_r+0x2e0>)
 8102684:	4602      	mov	r2, r0
 8102686:	f240 11af 	movw	r1, #431	@ 0x1af
 810268a:	e6d8      	b.n	810243e <_dtoa_r+0x2e>
 810268c:	2301      	movs	r3, #1
 810268e:	e7e0      	b.n	8102652 <_dtoa_r+0x242>
 8102690:	2401      	movs	r4, #1
 8102692:	2300      	movs	r3, #0
 8102694:	9309      	str	r3, [sp, #36]	@ 0x24
 8102696:	940b      	str	r4, [sp, #44]	@ 0x2c
 8102698:	f04f 33ff 	mov.w	r3, #4294967295
 810269c:	9300      	str	r3, [sp, #0]
 810269e:	9307      	str	r3, [sp, #28]
 81026a0:	2200      	movs	r2, #0
 81026a2:	2312      	movs	r3, #18
 81026a4:	e7d0      	b.n	8102648 <_dtoa_r+0x238>
 81026a6:	2301      	movs	r3, #1
 81026a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 81026aa:	e7f5      	b.n	8102698 <_dtoa_r+0x288>
 81026ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 81026ae:	9300      	str	r3, [sp, #0]
 81026b0:	9307      	str	r3, [sp, #28]
 81026b2:	e7d7      	b.n	8102664 <_dtoa_r+0x254>
 81026b4:	3101      	adds	r1, #1
 81026b6:	0052      	lsls	r2, r2, #1
 81026b8:	e7d8      	b.n	810266c <_dtoa_r+0x25c>
 81026ba:	bf00      	nop
 81026bc:	f3af 8000 	nop.w
 81026c0:	636f4361 	.word	0x636f4361
 81026c4:	3fd287a7 	.word	0x3fd287a7
 81026c8:	8b60c8b3 	.word	0x8b60c8b3
 81026cc:	3fc68a28 	.word	0x3fc68a28
 81026d0:	509f79fb 	.word	0x509f79fb
 81026d4:	3fd34413 	.word	0x3fd34413
 81026d8:	081040a9 	.word	0x081040a9
 81026dc:	081040c0 	.word	0x081040c0
 81026e0:	7ff00000 	.word	0x7ff00000
 81026e4:	08104079 	.word	0x08104079
 81026e8:	3ff80000 	.word	0x3ff80000
 81026ec:	081041b8 	.word	0x081041b8
 81026f0:	08104118 	.word	0x08104118
 81026f4:	081040a5 	.word	0x081040a5
 81026f8:	08104078 	.word	0x08104078
 81026fc:	f8db 301c 	ldr.w	r3, [fp, #28]
 8102700:	6018      	str	r0, [r3, #0]
 8102702:	9b07      	ldr	r3, [sp, #28]
 8102704:	2b0e      	cmp	r3, #14
 8102706:	f200 80a4 	bhi.w	8102852 <_dtoa_r+0x442>
 810270a:	2c00      	cmp	r4, #0
 810270c:	f000 80a1 	beq.w	8102852 <_dtoa_r+0x442>
 8102710:	2f00      	cmp	r7, #0
 8102712:	dd33      	ble.n	810277c <_dtoa_r+0x36c>
 8102714:	4bad      	ldr	r3, [pc, #692]	@ (81029cc <_dtoa_r+0x5bc>)
 8102716:	f007 020f 	and.w	r2, r7, #15
 810271a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810271e:	ed93 7b00 	vldr	d7, [r3]
 8102722:	05f8      	lsls	r0, r7, #23
 8102724:	ed8d 7b04 	vstr	d7, [sp, #16]
 8102728:	ea4f 1427 	mov.w	r4, r7, asr #4
 810272c:	d516      	bpl.n	810275c <_dtoa_r+0x34c>
 810272e:	4ba8      	ldr	r3, [pc, #672]	@ (81029d0 <_dtoa_r+0x5c0>)
 8102730:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102734:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8102738:	f7fe f910 	bl	810095c <__aeabi_ddiv>
 810273c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102740:	f004 040f 	and.w	r4, r4, #15
 8102744:	2603      	movs	r6, #3
 8102746:	4da2      	ldr	r5, [pc, #648]	@ (81029d0 <_dtoa_r+0x5c0>)
 8102748:	b954      	cbnz	r4, 8102760 <_dtoa_r+0x350>
 810274a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 810274e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102752:	f7fe f903 	bl	810095c <__aeabi_ddiv>
 8102756:	e9cd 0102 	strd	r0, r1, [sp, #8]
 810275a:	e028      	b.n	81027ae <_dtoa_r+0x39e>
 810275c:	2602      	movs	r6, #2
 810275e:	e7f2      	b.n	8102746 <_dtoa_r+0x336>
 8102760:	07e1      	lsls	r1, r4, #31
 8102762:	d508      	bpl.n	8102776 <_dtoa_r+0x366>
 8102764:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8102768:	e9d5 2300 	ldrd	r2, r3, [r5]
 810276c:	f7fd ffcc 	bl	8100708 <__aeabi_dmul>
 8102770:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8102774:	3601      	adds	r6, #1
 8102776:	1064      	asrs	r4, r4, #1
 8102778:	3508      	adds	r5, #8
 810277a:	e7e5      	b.n	8102748 <_dtoa_r+0x338>
 810277c:	f000 80d2 	beq.w	8102924 <_dtoa_r+0x514>
 8102780:	427c      	negs	r4, r7
 8102782:	4b92      	ldr	r3, [pc, #584]	@ (81029cc <_dtoa_r+0x5bc>)
 8102784:	4d92      	ldr	r5, [pc, #584]	@ (81029d0 <_dtoa_r+0x5c0>)
 8102786:	f004 020f 	and.w	r2, r4, #15
 810278a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810278e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102792:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102796:	f7fd ffb7 	bl	8100708 <__aeabi_dmul>
 810279a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 810279e:	1124      	asrs	r4, r4, #4
 81027a0:	2300      	movs	r3, #0
 81027a2:	2602      	movs	r6, #2
 81027a4:	2c00      	cmp	r4, #0
 81027a6:	f040 80b2 	bne.w	810290e <_dtoa_r+0x4fe>
 81027aa:	2b00      	cmp	r3, #0
 81027ac:	d1d3      	bne.n	8102756 <_dtoa_r+0x346>
 81027ae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 81027b0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 81027b4:	2b00      	cmp	r3, #0
 81027b6:	f000 80b7 	beq.w	8102928 <_dtoa_r+0x518>
 81027ba:	4b86      	ldr	r3, [pc, #536]	@ (81029d4 <_dtoa_r+0x5c4>)
 81027bc:	2200      	movs	r2, #0
 81027be:	4620      	mov	r0, r4
 81027c0:	4629      	mov	r1, r5
 81027c2:	f7fe fa13 	bl	8100bec <__aeabi_dcmplt>
 81027c6:	2800      	cmp	r0, #0
 81027c8:	f000 80ae 	beq.w	8102928 <_dtoa_r+0x518>
 81027cc:	9b07      	ldr	r3, [sp, #28]
 81027ce:	2b00      	cmp	r3, #0
 81027d0:	f000 80aa 	beq.w	8102928 <_dtoa_r+0x518>
 81027d4:	9b00      	ldr	r3, [sp, #0]
 81027d6:	2b00      	cmp	r3, #0
 81027d8:	dd37      	ble.n	810284a <_dtoa_r+0x43a>
 81027da:	1e7b      	subs	r3, r7, #1
 81027dc:	9304      	str	r3, [sp, #16]
 81027de:	4620      	mov	r0, r4
 81027e0:	4b7d      	ldr	r3, [pc, #500]	@ (81029d8 <_dtoa_r+0x5c8>)
 81027e2:	2200      	movs	r2, #0
 81027e4:	4629      	mov	r1, r5
 81027e6:	f7fd ff8f 	bl	8100708 <__aeabi_dmul>
 81027ea:	e9cd 0102 	strd	r0, r1, [sp, #8]
 81027ee:	9c00      	ldr	r4, [sp, #0]
 81027f0:	3601      	adds	r6, #1
 81027f2:	4630      	mov	r0, r6
 81027f4:	f7fd ff1e 	bl	8100634 <__aeabi_i2d>
 81027f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 81027fc:	f7fd ff84 	bl	8100708 <__aeabi_dmul>
 8102800:	4b76      	ldr	r3, [pc, #472]	@ (81029dc <_dtoa_r+0x5cc>)
 8102802:	2200      	movs	r2, #0
 8102804:	f7fd fdca 	bl	810039c <__adddf3>
 8102808:	4605      	mov	r5, r0
 810280a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 810280e:	2c00      	cmp	r4, #0
 8102810:	f040 808d 	bne.w	810292e <_dtoa_r+0x51e>
 8102814:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102818:	4b71      	ldr	r3, [pc, #452]	@ (81029e0 <_dtoa_r+0x5d0>)
 810281a:	2200      	movs	r2, #0
 810281c:	f7fd fdbc 	bl	8100398 <__aeabi_dsub>
 8102820:	4602      	mov	r2, r0
 8102822:	460b      	mov	r3, r1
 8102824:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8102828:	462a      	mov	r2, r5
 810282a:	4633      	mov	r3, r6
 810282c:	f7fe f9fc 	bl	8100c28 <__aeabi_dcmpgt>
 8102830:	2800      	cmp	r0, #0
 8102832:	f040 828b 	bne.w	8102d4c <_dtoa_r+0x93c>
 8102836:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 810283a:	462a      	mov	r2, r5
 810283c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8102840:	f7fe f9d4 	bl	8100bec <__aeabi_dcmplt>
 8102844:	2800      	cmp	r0, #0
 8102846:	f040 8128 	bne.w	8102a9a <_dtoa_r+0x68a>
 810284a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 810284e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8102852:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8102854:	2b00      	cmp	r3, #0
 8102856:	f2c0 815a 	blt.w	8102b0e <_dtoa_r+0x6fe>
 810285a:	2f0e      	cmp	r7, #14
 810285c:	f300 8157 	bgt.w	8102b0e <_dtoa_r+0x6fe>
 8102860:	4b5a      	ldr	r3, [pc, #360]	@ (81029cc <_dtoa_r+0x5bc>)
 8102862:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8102866:	ed93 7b00 	vldr	d7, [r3]
 810286a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 810286c:	2b00      	cmp	r3, #0
 810286e:	ed8d 7b00 	vstr	d7, [sp]
 8102872:	da03      	bge.n	810287c <_dtoa_r+0x46c>
 8102874:	9b07      	ldr	r3, [sp, #28]
 8102876:	2b00      	cmp	r3, #0
 8102878:	f340 8101 	ble.w	8102a7e <_dtoa_r+0x66e>
 810287c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8102880:	4656      	mov	r6, sl
 8102882:	e9dd 2300 	ldrd	r2, r3, [sp]
 8102886:	4620      	mov	r0, r4
 8102888:	4629      	mov	r1, r5
 810288a:	f7fe f867 	bl	810095c <__aeabi_ddiv>
 810288e:	f7fe f9eb 	bl	8100c68 <__aeabi_d2iz>
 8102892:	4680      	mov	r8, r0
 8102894:	f7fd fece 	bl	8100634 <__aeabi_i2d>
 8102898:	e9dd 2300 	ldrd	r2, r3, [sp]
 810289c:	f7fd ff34 	bl	8100708 <__aeabi_dmul>
 81028a0:	4602      	mov	r2, r0
 81028a2:	460b      	mov	r3, r1
 81028a4:	4620      	mov	r0, r4
 81028a6:	4629      	mov	r1, r5
 81028a8:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 81028ac:	f7fd fd74 	bl	8100398 <__aeabi_dsub>
 81028b0:	f806 4b01 	strb.w	r4, [r6], #1
 81028b4:	9d07      	ldr	r5, [sp, #28]
 81028b6:	eba6 040a 	sub.w	r4, r6, sl
 81028ba:	42a5      	cmp	r5, r4
 81028bc:	4602      	mov	r2, r0
 81028be:	460b      	mov	r3, r1
 81028c0:	f040 8117 	bne.w	8102af2 <_dtoa_r+0x6e2>
 81028c4:	f7fd fd6a 	bl	810039c <__adddf3>
 81028c8:	e9dd 2300 	ldrd	r2, r3, [sp]
 81028cc:	4604      	mov	r4, r0
 81028ce:	460d      	mov	r5, r1
 81028d0:	f7fe f9aa 	bl	8100c28 <__aeabi_dcmpgt>
 81028d4:	2800      	cmp	r0, #0
 81028d6:	f040 80f9 	bne.w	8102acc <_dtoa_r+0x6bc>
 81028da:	e9dd 2300 	ldrd	r2, r3, [sp]
 81028de:	4620      	mov	r0, r4
 81028e0:	4629      	mov	r1, r5
 81028e2:	f7fe f979 	bl	8100bd8 <__aeabi_dcmpeq>
 81028e6:	b118      	cbz	r0, 81028f0 <_dtoa_r+0x4e0>
 81028e8:	f018 0f01 	tst.w	r8, #1
 81028ec:	f040 80ee 	bne.w	8102acc <_dtoa_r+0x6bc>
 81028f0:	4649      	mov	r1, r9
 81028f2:	4658      	mov	r0, fp
 81028f4:	f000 fc90 	bl	8103218 <_Bfree>
 81028f8:	2300      	movs	r3, #0
 81028fa:	7033      	strb	r3, [r6, #0]
 81028fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 81028fe:	3701      	adds	r7, #1
 8102900:	601f      	str	r7, [r3, #0]
 8102902:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8102904:	2b00      	cmp	r3, #0
 8102906:	f000 831d 	beq.w	8102f44 <_dtoa_r+0xb34>
 810290a:	601e      	str	r6, [r3, #0]
 810290c:	e31a      	b.n	8102f44 <_dtoa_r+0xb34>
 810290e:	07e2      	lsls	r2, r4, #31
 8102910:	d505      	bpl.n	810291e <_dtoa_r+0x50e>
 8102912:	e9d5 2300 	ldrd	r2, r3, [r5]
 8102916:	f7fd fef7 	bl	8100708 <__aeabi_dmul>
 810291a:	3601      	adds	r6, #1
 810291c:	2301      	movs	r3, #1
 810291e:	1064      	asrs	r4, r4, #1
 8102920:	3508      	adds	r5, #8
 8102922:	e73f      	b.n	81027a4 <_dtoa_r+0x394>
 8102924:	2602      	movs	r6, #2
 8102926:	e742      	b.n	81027ae <_dtoa_r+0x39e>
 8102928:	9c07      	ldr	r4, [sp, #28]
 810292a:	9704      	str	r7, [sp, #16]
 810292c:	e761      	b.n	81027f2 <_dtoa_r+0x3e2>
 810292e:	4b27      	ldr	r3, [pc, #156]	@ (81029cc <_dtoa_r+0x5bc>)
 8102930:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8102932:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8102936:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 810293a:	4454      	add	r4, sl
 810293c:	2900      	cmp	r1, #0
 810293e:	d053      	beq.n	81029e8 <_dtoa_r+0x5d8>
 8102940:	4928      	ldr	r1, [pc, #160]	@ (81029e4 <_dtoa_r+0x5d4>)
 8102942:	2000      	movs	r0, #0
 8102944:	f7fe f80a 	bl	810095c <__aeabi_ddiv>
 8102948:	4633      	mov	r3, r6
 810294a:	462a      	mov	r2, r5
 810294c:	f7fd fd24 	bl	8100398 <__aeabi_dsub>
 8102950:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8102954:	4656      	mov	r6, sl
 8102956:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 810295a:	f7fe f985 	bl	8100c68 <__aeabi_d2iz>
 810295e:	4605      	mov	r5, r0
 8102960:	f7fd fe68 	bl	8100634 <__aeabi_i2d>
 8102964:	4602      	mov	r2, r0
 8102966:	460b      	mov	r3, r1
 8102968:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 810296c:	f7fd fd14 	bl	8100398 <__aeabi_dsub>
 8102970:	3530      	adds	r5, #48	@ 0x30
 8102972:	4602      	mov	r2, r0
 8102974:	460b      	mov	r3, r1
 8102976:	e9cd 2302 	strd	r2, r3, [sp, #8]
 810297a:	f806 5b01 	strb.w	r5, [r6], #1
 810297e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8102982:	f7fe f933 	bl	8100bec <__aeabi_dcmplt>
 8102986:	2800      	cmp	r0, #0
 8102988:	d171      	bne.n	8102a6e <_dtoa_r+0x65e>
 810298a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 810298e:	4911      	ldr	r1, [pc, #68]	@ (81029d4 <_dtoa_r+0x5c4>)
 8102990:	2000      	movs	r0, #0
 8102992:	f7fd fd01 	bl	8100398 <__aeabi_dsub>
 8102996:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 810299a:	f7fe f927 	bl	8100bec <__aeabi_dcmplt>
 810299e:	2800      	cmp	r0, #0
 81029a0:	f040 8095 	bne.w	8102ace <_dtoa_r+0x6be>
 81029a4:	42a6      	cmp	r6, r4
 81029a6:	f43f af50 	beq.w	810284a <_dtoa_r+0x43a>
 81029aa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 81029ae:	4b0a      	ldr	r3, [pc, #40]	@ (81029d8 <_dtoa_r+0x5c8>)
 81029b0:	2200      	movs	r2, #0
 81029b2:	f7fd fea9 	bl	8100708 <__aeabi_dmul>
 81029b6:	4b08      	ldr	r3, [pc, #32]	@ (81029d8 <_dtoa_r+0x5c8>)
 81029b8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 81029bc:	2200      	movs	r2, #0
 81029be:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 81029c2:	f7fd fea1 	bl	8100708 <__aeabi_dmul>
 81029c6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 81029ca:	e7c4      	b.n	8102956 <_dtoa_r+0x546>
 81029cc:	081041b8 	.word	0x081041b8
 81029d0:	08104190 	.word	0x08104190
 81029d4:	3ff00000 	.word	0x3ff00000
 81029d8:	40240000 	.word	0x40240000
 81029dc:	401c0000 	.word	0x401c0000
 81029e0:	40140000 	.word	0x40140000
 81029e4:	3fe00000 	.word	0x3fe00000
 81029e8:	4631      	mov	r1, r6
 81029ea:	4628      	mov	r0, r5
 81029ec:	f7fd fe8c 	bl	8100708 <__aeabi_dmul>
 81029f0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 81029f4:	9415      	str	r4, [sp, #84]	@ 0x54
 81029f6:	4656      	mov	r6, sl
 81029f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 81029fc:	f7fe f934 	bl	8100c68 <__aeabi_d2iz>
 8102a00:	4605      	mov	r5, r0
 8102a02:	f7fd fe17 	bl	8100634 <__aeabi_i2d>
 8102a06:	4602      	mov	r2, r0
 8102a08:	460b      	mov	r3, r1
 8102a0a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102a0e:	f7fd fcc3 	bl	8100398 <__aeabi_dsub>
 8102a12:	3530      	adds	r5, #48	@ 0x30
 8102a14:	f806 5b01 	strb.w	r5, [r6], #1
 8102a18:	4602      	mov	r2, r0
 8102a1a:	460b      	mov	r3, r1
 8102a1c:	42a6      	cmp	r6, r4
 8102a1e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8102a22:	f04f 0200 	mov.w	r2, #0
 8102a26:	d124      	bne.n	8102a72 <_dtoa_r+0x662>
 8102a28:	4bac      	ldr	r3, [pc, #688]	@ (8102cdc <_dtoa_r+0x8cc>)
 8102a2a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8102a2e:	f7fd fcb5 	bl	810039c <__adddf3>
 8102a32:	4602      	mov	r2, r0
 8102a34:	460b      	mov	r3, r1
 8102a36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102a3a:	f7fe f8f5 	bl	8100c28 <__aeabi_dcmpgt>
 8102a3e:	2800      	cmp	r0, #0
 8102a40:	d145      	bne.n	8102ace <_dtoa_r+0x6be>
 8102a42:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8102a46:	49a5      	ldr	r1, [pc, #660]	@ (8102cdc <_dtoa_r+0x8cc>)
 8102a48:	2000      	movs	r0, #0
 8102a4a:	f7fd fca5 	bl	8100398 <__aeabi_dsub>
 8102a4e:	4602      	mov	r2, r0
 8102a50:	460b      	mov	r3, r1
 8102a52:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102a56:	f7fe f8c9 	bl	8100bec <__aeabi_dcmplt>
 8102a5a:	2800      	cmp	r0, #0
 8102a5c:	f43f aef5 	beq.w	810284a <_dtoa_r+0x43a>
 8102a60:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8102a62:	1e73      	subs	r3, r6, #1
 8102a64:	9315      	str	r3, [sp, #84]	@ 0x54
 8102a66:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8102a6a:	2b30      	cmp	r3, #48	@ 0x30
 8102a6c:	d0f8      	beq.n	8102a60 <_dtoa_r+0x650>
 8102a6e:	9f04      	ldr	r7, [sp, #16]
 8102a70:	e73e      	b.n	81028f0 <_dtoa_r+0x4e0>
 8102a72:	4b9b      	ldr	r3, [pc, #620]	@ (8102ce0 <_dtoa_r+0x8d0>)
 8102a74:	f7fd fe48 	bl	8100708 <__aeabi_dmul>
 8102a78:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102a7c:	e7bc      	b.n	81029f8 <_dtoa_r+0x5e8>
 8102a7e:	d10c      	bne.n	8102a9a <_dtoa_r+0x68a>
 8102a80:	4b98      	ldr	r3, [pc, #608]	@ (8102ce4 <_dtoa_r+0x8d4>)
 8102a82:	2200      	movs	r2, #0
 8102a84:	e9dd 0100 	ldrd	r0, r1, [sp]
 8102a88:	f7fd fe3e 	bl	8100708 <__aeabi_dmul>
 8102a8c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8102a90:	f7fe f8c0 	bl	8100c14 <__aeabi_dcmpge>
 8102a94:	2800      	cmp	r0, #0
 8102a96:	f000 8157 	beq.w	8102d48 <_dtoa_r+0x938>
 8102a9a:	2400      	movs	r4, #0
 8102a9c:	4625      	mov	r5, r4
 8102a9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102aa0:	43db      	mvns	r3, r3
 8102aa2:	9304      	str	r3, [sp, #16]
 8102aa4:	4656      	mov	r6, sl
 8102aa6:	2700      	movs	r7, #0
 8102aa8:	4621      	mov	r1, r4
 8102aaa:	4658      	mov	r0, fp
 8102aac:	f000 fbb4 	bl	8103218 <_Bfree>
 8102ab0:	2d00      	cmp	r5, #0
 8102ab2:	d0dc      	beq.n	8102a6e <_dtoa_r+0x65e>
 8102ab4:	b12f      	cbz	r7, 8102ac2 <_dtoa_r+0x6b2>
 8102ab6:	42af      	cmp	r7, r5
 8102ab8:	d003      	beq.n	8102ac2 <_dtoa_r+0x6b2>
 8102aba:	4639      	mov	r1, r7
 8102abc:	4658      	mov	r0, fp
 8102abe:	f000 fbab 	bl	8103218 <_Bfree>
 8102ac2:	4629      	mov	r1, r5
 8102ac4:	4658      	mov	r0, fp
 8102ac6:	f000 fba7 	bl	8103218 <_Bfree>
 8102aca:	e7d0      	b.n	8102a6e <_dtoa_r+0x65e>
 8102acc:	9704      	str	r7, [sp, #16]
 8102ace:	4633      	mov	r3, r6
 8102ad0:	461e      	mov	r6, r3
 8102ad2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8102ad6:	2a39      	cmp	r2, #57	@ 0x39
 8102ad8:	d107      	bne.n	8102aea <_dtoa_r+0x6da>
 8102ada:	459a      	cmp	sl, r3
 8102adc:	d1f8      	bne.n	8102ad0 <_dtoa_r+0x6c0>
 8102ade:	9a04      	ldr	r2, [sp, #16]
 8102ae0:	3201      	adds	r2, #1
 8102ae2:	9204      	str	r2, [sp, #16]
 8102ae4:	2230      	movs	r2, #48	@ 0x30
 8102ae6:	f88a 2000 	strb.w	r2, [sl]
 8102aea:	781a      	ldrb	r2, [r3, #0]
 8102aec:	3201      	adds	r2, #1
 8102aee:	701a      	strb	r2, [r3, #0]
 8102af0:	e7bd      	b.n	8102a6e <_dtoa_r+0x65e>
 8102af2:	4b7b      	ldr	r3, [pc, #492]	@ (8102ce0 <_dtoa_r+0x8d0>)
 8102af4:	2200      	movs	r2, #0
 8102af6:	f7fd fe07 	bl	8100708 <__aeabi_dmul>
 8102afa:	2200      	movs	r2, #0
 8102afc:	2300      	movs	r3, #0
 8102afe:	4604      	mov	r4, r0
 8102b00:	460d      	mov	r5, r1
 8102b02:	f7fe f869 	bl	8100bd8 <__aeabi_dcmpeq>
 8102b06:	2800      	cmp	r0, #0
 8102b08:	f43f aebb 	beq.w	8102882 <_dtoa_r+0x472>
 8102b0c:	e6f0      	b.n	81028f0 <_dtoa_r+0x4e0>
 8102b0e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8102b10:	2a00      	cmp	r2, #0
 8102b12:	f000 80db 	beq.w	8102ccc <_dtoa_r+0x8bc>
 8102b16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8102b18:	2a01      	cmp	r2, #1
 8102b1a:	f300 80bf 	bgt.w	8102c9c <_dtoa_r+0x88c>
 8102b1e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8102b20:	2a00      	cmp	r2, #0
 8102b22:	f000 80b7 	beq.w	8102c94 <_dtoa_r+0x884>
 8102b26:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8102b2a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8102b2c:	4646      	mov	r6, r8
 8102b2e:	9a08      	ldr	r2, [sp, #32]
 8102b30:	2101      	movs	r1, #1
 8102b32:	441a      	add	r2, r3
 8102b34:	4658      	mov	r0, fp
 8102b36:	4498      	add	r8, r3
 8102b38:	9208      	str	r2, [sp, #32]
 8102b3a:	f000 fc21 	bl	8103380 <__i2b>
 8102b3e:	4605      	mov	r5, r0
 8102b40:	b15e      	cbz	r6, 8102b5a <_dtoa_r+0x74a>
 8102b42:	9b08      	ldr	r3, [sp, #32]
 8102b44:	2b00      	cmp	r3, #0
 8102b46:	dd08      	ble.n	8102b5a <_dtoa_r+0x74a>
 8102b48:	42b3      	cmp	r3, r6
 8102b4a:	9a08      	ldr	r2, [sp, #32]
 8102b4c:	bfa8      	it	ge
 8102b4e:	4633      	movge	r3, r6
 8102b50:	eba8 0803 	sub.w	r8, r8, r3
 8102b54:	1af6      	subs	r6, r6, r3
 8102b56:	1ad3      	subs	r3, r2, r3
 8102b58:	9308      	str	r3, [sp, #32]
 8102b5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8102b5c:	b1f3      	cbz	r3, 8102b9c <_dtoa_r+0x78c>
 8102b5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8102b60:	2b00      	cmp	r3, #0
 8102b62:	f000 80b7 	beq.w	8102cd4 <_dtoa_r+0x8c4>
 8102b66:	b18c      	cbz	r4, 8102b8c <_dtoa_r+0x77c>
 8102b68:	4629      	mov	r1, r5
 8102b6a:	4622      	mov	r2, r4
 8102b6c:	4658      	mov	r0, fp
 8102b6e:	f000 fcc7 	bl	8103500 <__pow5mult>
 8102b72:	464a      	mov	r2, r9
 8102b74:	4601      	mov	r1, r0
 8102b76:	4605      	mov	r5, r0
 8102b78:	4658      	mov	r0, fp
 8102b7a:	f000 fc17 	bl	81033ac <__multiply>
 8102b7e:	4649      	mov	r1, r9
 8102b80:	9004      	str	r0, [sp, #16]
 8102b82:	4658      	mov	r0, fp
 8102b84:	f000 fb48 	bl	8103218 <_Bfree>
 8102b88:	9b04      	ldr	r3, [sp, #16]
 8102b8a:	4699      	mov	r9, r3
 8102b8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8102b8e:	1b1a      	subs	r2, r3, r4
 8102b90:	d004      	beq.n	8102b9c <_dtoa_r+0x78c>
 8102b92:	4649      	mov	r1, r9
 8102b94:	4658      	mov	r0, fp
 8102b96:	f000 fcb3 	bl	8103500 <__pow5mult>
 8102b9a:	4681      	mov	r9, r0
 8102b9c:	2101      	movs	r1, #1
 8102b9e:	4658      	mov	r0, fp
 8102ba0:	f000 fbee 	bl	8103380 <__i2b>
 8102ba4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8102ba6:	4604      	mov	r4, r0
 8102ba8:	2b00      	cmp	r3, #0
 8102baa:	f000 81cf 	beq.w	8102f4c <_dtoa_r+0xb3c>
 8102bae:	461a      	mov	r2, r3
 8102bb0:	4601      	mov	r1, r0
 8102bb2:	4658      	mov	r0, fp
 8102bb4:	f000 fca4 	bl	8103500 <__pow5mult>
 8102bb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102bba:	2b01      	cmp	r3, #1
 8102bbc:	4604      	mov	r4, r0
 8102bbe:	f300 8095 	bgt.w	8102cec <_dtoa_r+0x8dc>
 8102bc2:	9b02      	ldr	r3, [sp, #8]
 8102bc4:	2b00      	cmp	r3, #0
 8102bc6:	f040 8087 	bne.w	8102cd8 <_dtoa_r+0x8c8>
 8102bca:	9b03      	ldr	r3, [sp, #12]
 8102bcc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8102bd0:	2b00      	cmp	r3, #0
 8102bd2:	f040 8089 	bne.w	8102ce8 <_dtoa_r+0x8d8>
 8102bd6:	9b03      	ldr	r3, [sp, #12]
 8102bd8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8102bdc:	0d1b      	lsrs	r3, r3, #20
 8102bde:	051b      	lsls	r3, r3, #20
 8102be0:	b12b      	cbz	r3, 8102bee <_dtoa_r+0x7de>
 8102be2:	9b08      	ldr	r3, [sp, #32]
 8102be4:	3301      	adds	r3, #1
 8102be6:	9308      	str	r3, [sp, #32]
 8102be8:	f108 0801 	add.w	r8, r8, #1
 8102bec:	2301      	movs	r3, #1
 8102bee:	930a      	str	r3, [sp, #40]	@ 0x28
 8102bf0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8102bf2:	2b00      	cmp	r3, #0
 8102bf4:	f000 81b0 	beq.w	8102f58 <_dtoa_r+0xb48>
 8102bf8:	6923      	ldr	r3, [r4, #16]
 8102bfa:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8102bfe:	6918      	ldr	r0, [r3, #16]
 8102c00:	f000 fb72 	bl	81032e8 <__hi0bits>
 8102c04:	f1c0 0020 	rsb	r0, r0, #32
 8102c08:	9b08      	ldr	r3, [sp, #32]
 8102c0a:	4418      	add	r0, r3
 8102c0c:	f010 001f 	ands.w	r0, r0, #31
 8102c10:	d077      	beq.n	8102d02 <_dtoa_r+0x8f2>
 8102c12:	f1c0 0320 	rsb	r3, r0, #32
 8102c16:	2b04      	cmp	r3, #4
 8102c18:	dd6b      	ble.n	8102cf2 <_dtoa_r+0x8e2>
 8102c1a:	9b08      	ldr	r3, [sp, #32]
 8102c1c:	f1c0 001c 	rsb	r0, r0, #28
 8102c20:	4403      	add	r3, r0
 8102c22:	4480      	add	r8, r0
 8102c24:	4406      	add	r6, r0
 8102c26:	9308      	str	r3, [sp, #32]
 8102c28:	f1b8 0f00 	cmp.w	r8, #0
 8102c2c:	dd05      	ble.n	8102c3a <_dtoa_r+0x82a>
 8102c2e:	4649      	mov	r1, r9
 8102c30:	4642      	mov	r2, r8
 8102c32:	4658      	mov	r0, fp
 8102c34:	f000 fcbe 	bl	81035b4 <__lshift>
 8102c38:	4681      	mov	r9, r0
 8102c3a:	9b08      	ldr	r3, [sp, #32]
 8102c3c:	2b00      	cmp	r3, #0
 8102c3e:	dd05      	ble.n	8102c4c <_dtoa_r+0x83c>
 8102c40:	4621      	mov	r1, r4
 8102c42:	461a      	mov	r2, r3
 8102c44:	4658      	mov	r0, fp
 8102c46:	f000 fcb5 	bl	81035b4 <__lshift>
 8102c4a:	4604      	mov	r4, r0
 8102c4c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8102c4e:	2b00      	cmp	r3, #0
 8102c50:	d059      	beq.n	8102d06 <_dtoa_r+0x8f6>
 8102c52:	4621      	mov	r1, r4
 8102c54:	4648      	mov	r0, r9
 8102c56:	f000 fd19 	bl	810368c <__mcmp>
 8102c5a:	2800      	cmp	r0, #0
 8102c5c:	da53      	bge.n	8102d06 <_dtoa_r+0x8f6>
 8102c5e:	1e7b      	subs	r3, r7, #1
 8102c60:	9304      	str	r3, [sp, #16]
 8102c62:	4649      	mov	r1, r9
 8102c64:	2300      	movs	r3, #0
 8102c66:	220a      	movs	r2, #10
 8102c68:	4658      	mov	r0, fp
 8102c6a:	f000 faf7 	bl	810325c <__multadd>
 8102c6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8102c70:	4681      	mov	r9, r0
 8102c72:	2b00      	cmp	r3, #0
 8102c74:	f000 8172 	beq.w	8102f5c <_dtoa_r+0xb4c>
 8102c78:	2300      	movs	r3, #0
 8102c7a:	4629      	mov	r1, r5
 8102c7c:	220a      	movs	r2, #10
 8102c7e:	4658      	mov	r0, fp
 8102c80:	f000 faec 	bl	810325c <__multadd>
 8102c84:	9b00      	ldr	r3, [sp, #0]
 8102c86:	2b00      	cmp	r3, #0
 8102c88:	4605      	mov	r5, r0
 8102c8a:	dc67      	bgt.n	8102d5c <_dtoa_r+0x94c>
 8102c8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102c8e:	2b02      	cmp	r3, #2
 8102c90:	dc41      	bgt.n	8102d16 <_dtoa_r+0x906>
 8102c92:	e063      	b.n	8102d5c <_dtoa_r+0x94c>
 8102c94:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8102c96:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8102c9a:	e746      	b.n	8102b2a <_dtoa_r+0x71a>
 8102c9c:	9b07      	ldr	r3, [sp, #28]
 8102c9e:	1e5c      	subs	r4, r3, #1
 8102ca0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8102ca2:	42a3      	cmp	r3, r4
 8102ca4:	bfbf      	itttt	lt
 8102ca6:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8102ca8:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8102caa:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8102cac:	1ae3      	sublt	r3, r4, r3
 8102cae:	bfb4      	ite	lt
 8102cb0:	18d2      	addlt	r2, r2, r3
 8102cb2:	1b1c      	subge	r4, r3, r4
 8102cb4:	9b07      	ldr	r3, [sp, #28]
 8102cb6:	bfbc      	itt	lt
 8102cb8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8102cba:	2400      	movlt	r4, #0
 8102cbc:	2b00      	cmp	r3, #0
 8102cbe:	bfb5      	itete	lt
 8102cc0:	eba8 0603 	sublt.w	r6, r8, r3
 8102cc4:	9b07      	ldrge	r3, [sp, #28]
 8102cc6:	2300      	movlt	r3, #0
 8102cc8:	4646      	movge	r6, r8
 8102cca:	e730      	b.n	8102b2e <_dtoa_r+0x71e>
 8102ccc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8102cce:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8102cd0:	4646      	mov	r6, r8
 8102cd2:	e735      	b.n	8102b40 <_dtoa_r+0x730>
 8102cd4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8102cd6:	e75c      	b.n	8102b92 <_dtoa_r+0x782>
 8102cd8:	2300      	movs	r3, #0
 8102cda:	e788      	b.n	8102bee <_dtoa_r+0x7de>
 8102cdc:	3fe00000 	.word	0x3fe00000
 8102ce0:	40240000 	.word	0x40240000
 8102ce4:	40140000 	.word	0x40140000
 8102ce8:	9b02      	ldr	r3, [sp, #8]
 8102cea:	e780      	b.n	8102bee <_dtoa_r+0x7de>
 8102cec:	2300      	movs	r3, #0
 8102cee:	930a      	str	r3, [sp, #40]	@ 0x28
 8102cf0:	e782      	b.n	8102bf8 <_dtoa_r+0x7e8>
 8102cf2:	d099      	beq.n	8102c28 <_dtoa_r+0x818>
 8102cf4:	9a08      	ldr	r2, [sp, #32]
 8102cf6:	331c      	adds	r3, #28
 8102cf8:	441a      	add	r2, r3
 8102cfa:	4498      	add	r8, r3
 8102cfc:	441e      	add	r6, r3
 8102cfe:	9208      	str	r2, [sp, #32]
 8102d00:	e792      	b.n	8102c28 <_dtoa_r+0x818>
 8102d02:	4603      	mov	r3, r0
 8102d04:	e7f6      	b.n	8102cf4 <_dtoa_r+0x8e4>
 8102d06:	9b07      	ldr	r3, [sp, #28]
 8102d08:	9704      	str	r7, [sp, #16]
 8102d0a:	2b00      	cmp	r3, #0
 8102d0c:	dc20      	bgt.n	8102d50 <_dtoa_r+0x940>
 8102d0e:	9300      	str	r3, [sp, #0]
 8102d10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102d12:	2b02      	cmp	r3, #2
 8102d14:	dd1e      	ble.n	8102d54 <_dtoa_r+0x944>
 8102d16:	9b00      	ldr	r3, [sp, #0]
 8102d18:	2b00      	cmp	r3, #0
 8102d1a:	f47f aec0 	bne.w	8102a9e <_dtoa_r+0x68e>
 8102d1e:	4621      	mov	r1, r4
 8102d20:	2205      	movs	r2, #5
 8102d22:	4658      	mov	r0, fp
 8102d24:	f000 fa9a 	bl	810325c <__multadd>
 8102d28:	4601      	mov	r1, r0
 8102d2a:	4604      	mov	r4, r0
 8102d2c:	4648      	mov	r0, r9
 8102d2e:	f000 fcad 	bl	810368c <__mcmp>
 8102d32:	2800      	cmp	r0, #0
 8102d34:	f77f aeb3 	ble.w	8102a9e <_dtoa_r+0x68e>
 8102d38:	4656      	mov	r6, sl
 8102d3a:	2331      	movs	r3, #49	@ 0x31
 8102d3c:	f806 3b01 	strb.w	r3, [r6], #1
 8102d40:	9b04      	ldr	r3, [sp, #16]
 8102d42:	3301      	adds	r3, #1
 8102d44:	9304      	str	r3, [sp, #16]
 8102d46:	e6ae      	b.n	8102aa6 <_dtoa_r+0x696>
 8102d48:	9c07      	ldr	r4, [sp, #28]
 8102d4a:	9704      	str	r7, [sp, #16]
 8102d4c:	4625      	mov	r5, r4
 8102d4e:	e7f3      	b.n	8102d38 <_dtoa_r+0x928>
 8102d50:	9b07      	ldr	r3, [sp, #28]
 8102d52:	9300      	str	r3, [sp, #0]
 8102d54:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8102d56:	2b00      	cmp	r3, #0
 8102d58:	f000 8104 	beq.w	8102f64 <_dtoa_r+0xb54>
 8102d5c:	2e00      	cmp	r6, #0
 8102d5e:	dd05      	ble.n	8102d6c <_dtoa_r+0x95c>
 8102d60:	4629      	mov	r1, r5
 8102d62:	4632      	mov	r2, r6
 8102d64:	4658      	mov	r0, fp
 8102d66:	f000 fc25 	bl	81035b4 <__lshift>
 8102d6a:	4605      	mov	r5, r0
 8102d6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8102d6e:	2b00      	cmp	r3, #0
 8102d70:	d05a      	beq.n	8102e28 <_dtoa_r+0xa18>
 8102d72:	6869      	ldr	r1, [r5, #4]
 8102d74:	4658      	mov	r0, fp
 8102d76:	f000 fa0f 	bl	8103198 <_Balloc>
 8102d7a:	4606      	mov	r6, r0
 8102d7c:	b928      	cbnz	r0, 8102d8a <_dtoa_r+0x97a>
 8102d7e:	4b84      	ldr	r3, [pc, #528]	@ (8102f90 <_dtoa_r+0xb80>)
 8102d80:	4602      	mov	r2, r0
 8102d82:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8102d86:	f7ff bb5a 	b.w	810243e <_dtoa_r+0x2e>
 8102d8a:	692a      	ldr	r2, [r5, #16]
 8102d8c:	3202      	adds	r2, #2
 8102d8e:	0092      	lsls	r2, r2, #2
 8102d90:	f105 010c 	add.w	r1, r5, #12
 8102d94:	300c      	adds	r0, #12
 8102d96:	f000 fe3d 	bl	8103a14 <memcpy>
 8102d9a:	2201      	movs	r2, #1
 8102d9c:	4631      	mov	r1, r6
 8102d9e:	4658      	mov	r0, fp
 8102da0:	f000 fc08 	bl	81035b4 <__lshift>
 8102da4:	f10a 0301 	add.w	r3, sl, #1
 8102da8:	9307      	str	r3, [sp, #28]
 8102daa:	9b00      	ldr	r3, [sp, #0]
 8102dac:	4453      	add	r3, sl
 8102dae:	930b      	str	r3, [sp, #44]	@ 0x2c
 8102db0:	9b02      	ldr	r3, [sp, #8]
 8102db2:	f003 0301 	and.w	r3, r3, #1
 8102db6:	462f      	mov	r7, r5
 8102db8:	930a      	str	r3, [sp, #40]	@ 0x28
 8102dba:	4605      	mov	r5, r0
 8102dbc:	9b07      	ldr	r3, [sp, #28]
 8102dbe:	4621      	mov	r1, r4
 8102dc0:	3b01      	subs	r3, #1
 8102dc2:	4648      	mov	r0, r9
 8102dc4:	9300      	str	r3, [sp, #0]
 8102dc6:	f7ff fa98 	bl	81022fa <quorem>
 8102dca:	4639      	mov	r1, r7
 8102dcc:	9002      	str	r0, [sp, #8]
 8102dce:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8102dd2:	4648      	mov	r0, r9
 8102dd4:	f000 fc5a 	bl	810368c <__mcmp>
 8102dd8:	462a      	mov	r2, r5
 8102dda:	9008      	str	r0, [sp, #32]
 8102ddc:	4621      	mov	r1, r4
 8102dde:	4658      	mov	r0, fp
 8102de0:	f000 fc70 	bl	81036c4 <__mdiff>
 8102de4:	68c2      	ldr	r2, [r0, #12]
 8102de6:	4606      	mov	r6, r0
 8102de8:	bb02      	cbnz	r2, 8102e2c <_dtoa_r+0xa1c>
 8102dea:	4601      	mov	r1, r0
 8102dec:	4648      	mov	r0, r9
 8102dee:	f000 fc4d 	bl	810368c <__mcmp>
 8102df2:	4602      	mov	r2, r0
 8102df4:	4631      	mov	r1, r6
 8102df6:	4658      	mov	r0, fp
 8102df8:	920e      	str	r2, [sp, #56]	@ 0x38
 8102dfa:	f000 fa0d 	bl	8103218 <_Bfree>
 8102dfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102e00:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8102e02:	9e07      	ldr	r6, [sp, #28]
 8102e04:	ea43 0102 	orr.w	r1, r3, r2
 8102e08:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8102e0a:	4319      	orrs	r1, r3
 8102e0c:	d110      	bne.n	8102e30 <_dtoa_r+0xa20>
 8102e0e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8102e12:	d029      	beq.n	8102e68 <_dtoa_r+0xa58>
 8102e14:	9b08      	ldr	r3, [sp, #32]
 8102e16:	2b00      	cmp	r3, #0
 8102e18:	dd02      	ble.n	8102e20 <_dtoa_r+0xa10>
 8102e1a:	9b02      	ldr	r3, [sp, #8]
 8102e1c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8102e20:	9b00      	ldr	r3, [sp, #0]
 8102e22:	f883 8000 	strb.w	r8, [r3]
 8102e26:	e63f      	b.n	8102aa8 <_dtoa_r+0x698>
 8102e28:	4628      	mov	r0, r5
 8102e2a:	e7bb      	b.n	8102da4 <_dtoa_r+0x994>
 8102e2c:	2201      	movs	r2, #1
 8102e2e:	e7e1      	b.n	8102df4 <_dtoa_r+0x9e4>
 8102e30:	9b08      	ldr	r3, [sp, #32]
 8102e32:	2b00      	cmp	r3, #0
 8102e34:	db04      	blt.n	8102e40 <_dtoa_r+0xa30>
 8102e36:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8102e38:	430b      	orrs	r3, r1
 8102e3a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8102e3c:	430b      	orrs	r3, r1
 8102e3e:	d120      	bne.n	8102e82 <_dtoa_r+0xa72>
 8102e40:	2a00      	cmp	r2, #0
 8102e42:	dded      	ble.n	8102e20 <_dtoa_r+0xa10>
 8102e44:	4649      	mov	r1, r9
 8102e46:	2201      	movs	r2, #1
 8102e48:	4658      	mov	r0, fp
 8102e4a:	f000 fbb3 	bl	81035b4 <__lshift>
 8102e4e:	4621      	mov	r1, r4
 8102e50:	4681      	mov	r9, r0
 8102e52:	f000 fc1b 	bl	810368c <__mcmp>
 8102e56:	2800      	cmp	r0, #0
 8102e58:	dc03      	bgt.n	8102e62 <_dtoa_r+0xa52>
 8102e5a:	d1e1      	bne.n	8102e20 <_dtoa_r+0xa10>
 8102e5c:	f018 0f01 	tst.w	r8, #1
 8102e60:	d0de      	beq.n	8102e20 <_dtoa_r+0xa10>
 8102e62:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8102e66:	d1d8      	bne.n	8102e1a <_dtoa_r+0xa0a>
 8102e68:	9a00      	ldr	r2, [sp, #0]
 8102e6a:	2339      	movs	r3, #57	@ 0x39
 8102e6c:	7013      	strb	r3, [r2, #0]
 8102e6e:	4633      	mov	r3, r6
 8102e70:	461e      	mov	r6, r3
 8102e72:	3b01      	subs	r3, #1
 8102e74:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8102e78:	2a39      	cmp	r2, #57	@ 0x39
 8102e7a:	d052      	beq.n	8102f22 <_dtoa_r+0xb12>
 8102e7c:	3201      	adds	r2, #1
 8102e7e:	701a      	strb	r2, [r3, #0]
 8102e80:	e612      	b.n	8102aa8 <_dtoa_r+0x698>
 8102e82:	2a00      	cmp	r2, #0
 8102e84:	dd07      	ble.n	8102e96 <_dtoa_r+0xa86>
 8102e86:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8102e8a:	d0ed      	beq.n	8102e68 <_dtoa_r+0xa58>
 8102e8c:	9a00      	ldr	r2, [sp, #0]
 8102e8e:	f108 0301 	add.w	r3, r8, #1
 8102e92:	7013      	strb	r3, [r2, #0]
 8102e94:	e608      	b.n	8102aa8 <_dtoa_r+0x698>
 8102e96:	9b07      	ldr	r3, [sp, #28]
 8102e98:	9a07      	ldr	r2, [sp, #28]
 8102e9a:	f803 8c01 	strb.w	r8, [r3, #-1]
 8102e9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8102ea0:	4293      	cmp	r3, r2
 8102ea2:	d028      	beq.n	8102ef6 <_dtoa_r+0xae6>
 8102ea4:	4649      	mov	r1, r9
 8102ea6:	2300      	movs	r3, #0
 8102ea8:	220a      	movs	r2, #10
 8102eaa:	4658      	mov	r0, fp
 8102eac:	f000 f9d6 	bl	810325c <__multadd>
 8102eb0:	42af      	cmp	r7, r5
 8102eb2:	4681      	mov	r9, r0
 8102eb4:	f04f 0300 	mov.w	r3, #0
 8102eb8:	f04f 020a 	mov.w	r2, #10
 8102ebc:	4639      	mov	r1, r7
 8102ebe:	4658      	mov	r0, fp
 8102ec0:	d107      	bne.n	8102ed2 <_dtoa_r+0xac2>
 8102ec2:	f000 f9cb 	bl	810325c <__multadd>
 8102ec6:	4607      	mov	r7, r0
 8102ec8:	4605      	mov	r5, r0
 8102eca:	9b07      	ldr	r3, [sp, #28]
 8102ecc:	3301      	adds	r3, #1
 8102ece:	9307      	str	r3, [sp, #28]
 8102ed0:	e774      	b.n	8102dbc <_dtoa_r+0x9ac>
 8102ed2:	f000 f9c3 	bl	810325c <__multadd>
 8102ed6:	4629      	mov	r1, r5
 8102ed8:	4607      	mov	r7, r0
 8102eda:	2300      	movs	r3, #0
 8102edc:	220a      	movs	r2, #10
 8102ede:	4658      	mov	r0, fp
 8102ee0:	f000 f9bc 	bl	810325c <__multadd>
 8102ee4:	4605      	mov	r5, r0
 8102ee6:	e7f0      	b.n	8102eca <_dtoa_r+0xaba>
 8102ee8:	9b00      	ldr	r3, [sp, #0]
 8102eea:	2b00      	cmp	r3, #0
 8102eec:	bfcc      	ite	gt
 8102eee:	461e      	movgt	r6, r3
 8102ef0:	2601      	movle	r6, #1
 8102ef2:	4456      	add	r6, sl
 8102ef4:	2700      	movs	r7, #0
 8102ef6:	4649      	mov	r1, r9
 8102ef8:	2201      	movs	r2, #1
 8102efa:	4658      	mov	r0, fp
 8102efc:	f000 fb5a 	bl	81035b4 <__lshift>
 8102f00:	4621      	mov	r1, r4
 8102f02:	4681      	mov	r9, r0
 8102f04:	f000 fbc2 	bl	810368c <__mcmp>
 8102f08:	2800      	cmp	r0, #0
 8102f0a:	dcb0      	bgt.n	8102e6e <_dtoa_r+0xa5e>
 8102f0c:	d102      	bne.n	8102f14 <_dtoa_r+0xb04>
 8102f0e:	f018 0f01 	tst.w	r8, #1
 8102f12:	d1ac      	bne.n	8102e6e <_dtoa_r+0xa5e>
 8102f14:	4633      	mov	r3, r6
 8102f16:	461e      	mov	r6, r3
 8102f18:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8102f1c:	2a30      	cmp	r2, #48	@ 0x30
 8102f1e:	d0fa      	beq.n	8102f16 <_dtoa_r+0xb06>
 8102f20:	e5c2      	b.n	8102aa8 <_dtoa_r+0x698>
 8102f22:	459a      	cmp	sl, r3
 8102f24:	d1a4      	bne.n	8102e70 <_dtoa_r+0xa60>
 8102f26:	9b04      	ldr	r3, [sp, #16]
 8102f28:	3301      	adds	r3, #1
 8102f2a:	9304      	str	r3, [sp, #16]
 8102f2c:	2331      	movs	r3, #49	@ 0x31
 8102f2e:	f88a 3000 	strb.w	r3, [sl]
 8102f32:	e5b9      	b.n	8102aa8 <_dtoa_r+0x698>
 8102f34:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8102f36:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8102f94 <_dtoa_r+0xb84>
 8102f3a:	b11b      	cbz	r3, 8102f44 <_dtoa_r+0xb34>
 8102f3c:	f10a 0308 	add.w	r3, sl, #8
 8102f40:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8102f42:	6013      	str	r3, [r2, #0]
 8102f44:	4650      	mov	r0, sl
 8102f46:	b019      	add	sp, #100	@ 0x64
 8102f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8102f4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102f4e:	2b01      	cmp	r3, #1
 8102f50:	f77f ae37 	ble.w	8102bc2 <_dtoa_r+0x7b2>
 8102f54:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8102f56:	930a      	str	r3, [sp, #40]	@ 0x28
 8102f58:	2001      	movs	r0, #1
 8102f5a:	e655      	b.n	8102c08 <_dtoa_r+0x7f8>
 8102f5c:	9b00      	ldr	r3, [sp, #0]
 8102f5e:	2b00      	cmp	r3, #0
 8102f60:	f77f aed6 	ble.w	8102d10 <_dtoa_r+0x900>
 8102f64:	4656      	mov	r6, sl
 8102f66:	4621      	mov	r1, r4
 8102f68:	4648      	mov	r0, r9
 8102f6a:	f7ff f9c6 	bl	81022fa <quorem>
 8102f6e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8102f72:	f806 8b01 	strb.w	r8, [r6], #1
 8102f76:	9b00      	ldr	r3, [sp, #0]
 8102f78:	eba6 020a 	sub.w	r2, r6, sl
 8102f7c:	4293      	cmp	r3, r2
 8102f7e:	ddb3      	ble.n	8102ee8 <_dtoa_r+0xad8>
 8102f80:	4649      	mov	r1, r9
 8102f82:	2300      	movs	r3, #0
 8102f84:	220a      	movs	r2, #10
 8102f86:	4658      	mov	r0, fp
 8102f88:	f000 f968 	bl	810325c <__multadd>
 8102f8c:	4681      	mov	r9, r0
 8102f8e:	e7ea      	b.n	8102f66 <_dtoa_r+0xb56>
 8102f90:	08104118 	.word	0x08104118
 8102f94:	0810409c 	.word	0x0810409c

08102f98 <_free_r>:
 8102f98:	b538      	push	{r3, r4, r5, lr}
 8102f9a:	4605      	mov	r5, r0
 8102f9c:	2900      	cmp	r1, #0
 8102f9e:	d041      	beq.n	8103024 <_free_r+0x8c>
 8102fa0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8102fa4:	1f0c      	subs	r4, r1, #4
 8102fa6:	2b00      	cmp	r3, #0
 8102fa8:	bfb8      	it	lt
 8102faa:	18e4      	addlt	r4, r4, r3
 8102fac:	f000 f8e8 	bl	8103180 <__malloc_lock>
 8102fb0:	4a1d      	ldr	r2, [pc, #116]	@ (8103028 <_free_r+0x90>)
 8102fb2:	6813      	ldr	r3, [r2, #0]
 8102fb4:	b933      	cbnz	r3, 8102fc4 <_free_r+0x2c>
 8102fb6:	6063      	str	r3, [r4, #4]
 8102fb8:	6014      	str	r4, [r2, #0]
 8102fba:	4628      	mov	r0, r5
 8102fbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8102fc0:	f000 b8e4 	b.w	810318c <__malloc_unlock>
 8102fc4:	42a3      	cmp	r3, r4
 8102fc6:	d908      	bls.n	8102fda <_free_r+0x42>
 8102fc8:	6820      	ldr	r0, [r4, #0]
 8102fca:	1821      	adds	r1, r4, r0
 8102fcc:	428b      	cmp	r3, r1
 8102fce:	bf01      	itttt	eq
 8102fd0:	6819      	ldreq	r1, [r3, #0]
 8102fd2:	685b      	ldreq	r3, [r3, #4]
 8102fd4:	1809      	addeq	r1, r1, r0
 8102fd6:	6021      	streq	r1, [r4, #0]
 8102fd8:	e7ed      	b.n	8102fb6 <_free_r+0x1e>
 8102fda:	461a      	mov	r2, r3
 8102fdc:	685b      	ldr	r3, [r3, #4]
 8102fde:	b10b      	cbz	r3, 8102fe4 <_free_r+0x4c>
 8102fe0:	42a3      	cmp	r3, r4
 8102fe2:	d9fa      	bls.n	8102fda <_free_r+0x42>
 8102fe4:	6811      	ldr	r1, [r2, #0]
 8102fe6:	1850      	adds	r0, r2, r1
 8102fe8:	42a0      	cmp	r0, r4
 8102fea:	d10b      	bne.n	8103004 <_free_r+0x6c>
 8102fec:	6820      	ldr	r0, [r4, #0]
 8102fee:	4401      	add	r1, r0
 8102ff0:	1850      	adds	r0, r2, r1
 8102ff2:	4283      	cmp	r3, r0
 8102ff4:	6011      	str	r1, [r2, #0]
 8102ff6:	d1e0      	bne.n	8102fba <_free_r+0x22>
 8102ff8:	6818      	ldr	r0, [r3, #0]
 8102ffa:	685b      	ldr	r3, [r3, #4]
 8102ffc:	6053      	str	r3, [r2, #4]
 8102ffe:	4408      	add	r0, r1
 8103000:	6010      	str	r0, [r2, #0]
 8103002:	e7da      	b.n	8102fba <_free_r+0x22>
 8103004:	d902      	bls.n	810300c <_free_r+0x74>
 8103006:	230c      	movs	r3, #12
 8103008:	602b      	str	r3, [r5, #0]
 810300a:	e7d6      	b.n	8102fba <_free_r+0x22>
 810300c:	6820      	ldr	r0, [r4, #0]
 810300e:	1821      	adds	r1, r4, r0
 8103010:	428b      	cmp	r3, r1
 8103012:	bf04      	itt	eq
 8103014:	6819      	ldreq	r1, [r3, #0]
 8103016:	685b      	ldreq	r3, [r3, #4]
 8103018:	6063      	str	r3, [r4, #4]
 810301a:	bf04      	itt	eq
 810301c:	1809      	addeq	r1, r1, r0
 810301e:	6021      	streq	r1, [r4, #0]
 8103020:	6054      	str	r4, [r2, #4]
 8103022:	e7ca      	b.n	8102fba <_free_r+0x22>
 8103024:	bd38      	pop	{r3, r4, r5, pc}
 8103026:	bf00      	nop
 8103028:	10000344 	.word	0x10000344

0810302c <malloc>:
 810302c:	4b02      	ldr	r3, [pc, #8]	@ (8103038 <malloc+0xc>)
 810302e:	4601      	mov	r1, r0
 8103030:	6818      	ldr	r0, [r3, #0]
 8103032:	f000 b825 	b.w	8103080 <_malloc_r>
 8103036:	bf00      	nop
 8103038:	1000001c 	.word	0x1000001c

0810303c <sbrk_aligned>:
 810303c:	b570      	push	{r4, r5, r6, lr}
 810303e:	4e0f      	ldr	r6, [pc, #60]	@ (810307c <sbrk_aligned+0x40>)
 8103040:	460c      	mov	r4, r1
 8103042:	6831      	ldr	r1, [r6, #0]
 8103044:	4605      	mov	r5, r0
 8103046:	b911      	cbnz	r1, 810304e <sbrk_aligned+0x12>
 8103048:	f000 fcd4 	bl	81039f4 <_sbrk_r>
 810304c:	6030      	str	r0, [r6, #0]
 810304e:	4621      	mov	r1, r4
 8103050:	4628      	mov	r0, r5
 8103052:	f000 fccf 	bl	81039f4 <_sbrk_r>
 8103056:	1c43      	adds	r3, r0, #1
 8103058:	d103      	bne.n	8103062 <sbrk_aligned+0x26>
 810305a:	f04f 34ff 	mov.w	r4, #4294967295
 810305e:	4620      	mov	r0, r4
 8103060:	bd70      	pop	{r4, r5, r6, pc}
 8103062:	1cc4      	adds	r4, r0, #3
 8103064:	f024 0403 	bic.w	r4, r4, #3
 8103068:	42a0      	cmp	r0, r4
 810306a:	d0f8      	beq.n	810305e <sbrk_aligned+0x22>
 810306c:	1a21      	subs	r1, r4, r0
 810306e:	4628      	mov	r0, r5
 8103070:	f000 fcc0 	bl	81039f4 <_sbrk_r>
 8103074:	3001      	adds	r0, #1
 8103076:	d1f2      	bne.n	810305e <sbrk_aligned+0x22>
 8103078:	e7ef      	b.n	810305a <sbrk_aligned+0x1e>
 810307a:	bf00      	nop
 810307c:	10000340 	.word	0x10000340

08103080 <_malloc_r>:
 8103080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103084:	1ccd      	adds	r5, r1, #3
 8103086:	f025 0503 	bic.w	r5, r5, #3
 810308a:	3508      	adds	r5, #8
 810308c:	2d0c      	cmp	r5, #12
 810308e:	bf38      	it	cc
 8103090:	250c      	movcc	r5, #12
 8103092:	2d00      	cmp	r5, #0
 8103094:	4606      	mov	r6, r0
 8103096:	db01      	blt.n	810309c <_malloc_r+0x1c>
 8103098:	42a9      	cmp	r1, r5
 810309a:	d904      	bls.n	81030a6 <_malloc_r+0x26>
 810309c:	230c      	movs	r3, #12
 810309e:	6033      	str	r3, [r6, #0]
 81030a0:	2000      	movs	r0, #0
 81030a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 81030a6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 810317c <_malloc_r+0xfc>
 81030aa:	f000 f869 	bl	8103180 <__malloc_lock>
 81030ae:	f8d8 3000 	ldr.w	r3, [r8]
 81030b2:	461c      	mov	r4, r3
 81030b4:	bb44      	cbnz	r4, 8103108 <_malloc_r+0x88>
 81030b6:	4629      	mov	r1, r5
 81030b8:	4630      	mov	r0, r6
 81030ba:	f7ff ffbf 	bl	810303c <sbrk_aligned>
 81030be:	1c43      	adds	r3, r0, #1
 81030c0:	4604      	mov	r4, r0
 81030c2:	d158      	bne.n	8103176 <_malloc_r+0xf6>
 81030c4:	f8d8 4000 	ldr.w	r4, [r8]
 81030c8:	4627      	mov	r7, r4
 81030ca:	2f00      	cmp	r7, #0
 81030cc:	d143      	bne.n	8103156 <_malloc_r+0xd6>
 81030ce:	2c00      	cmp	r4, #0
 81030d0:	d04b      	beq.n	810316a <_malloc_r+0xea>
 81030d2:	6823      	ldr	r3, [r4, #0]
 81030d4:	4639      	mov	r1, r7
 81030d6:	4630      	mov	r0, r6
 81030d8:	eb04 0903 	add.w	r9, r4, r3
 81030dc:	f000 fc8a 	bl	81039f4 <_sbrk_r>
 81030e0:	4581      	cmp	r9, r0
 81030e2:	d142      	bne.n	810316a <_malloc_r+0xea>
 81030e4:	6821      	ldr	r1, [r4, #0]
 81030e6:	1a6d      	subs	r5, r5, r1
 81030e8:	4629      	mov	r1, r5
 81030ea:	4630      	mov	r0, r6
 81030ec:	f7ff ffa6 	bl	810303c <sbrk_aligned>
 81030f0:	3001      	adds	r0, #1
 81030f2:	d03a      	beq.n	810316a <_malloc_r+0xea>
 81030f4:	6823      	ldr	r3, [r4, #0]
 81030f6:	442b      	add	r3, r5
 81030f8:	6023      	str	r3, [r4, #0]
 81030fa:	f8d8 3000 	ldr.w	r3, [r8]
 81030fe:	685a      	ldr	r2, [r3, #4]
 8103100:	bb62      	cbnz	r2, 810315c <_malloc_r+0xdc>
 8103102:	f8c8 7000 	str.w	r7, [r8]
 8103106:	e00f      	b.n	8103128 <_malloc_r+0xa8>
 8103108:	6822      	ldr	r2, [r4, #0]
 810310a:	1b52      	subs	r2, r2, r5
 810310c:	d420      	bmi.n	8103150 <_malloc_r+0xd0>
 810310e:	2a0b      	cmp	r2, #11
 8103110:	d917      	bls.n	8103142 <_malloc_r+0xc2>
 8103112:	1961      	adds	r1, r4, r5
 8103114:	42a3      	cmp	r3, r4
 8103116:	6025      	str	r5, [r4, #0]
 8103118:	bf18      	it	ne
 810311a:	6059      	strne	r1, [r3, #4]
 810311c:	6863      	ldr	r3, [r4, #4]
 810311e:	bf08      	it	eq
 8103120:	f8c8 1000 	streq.w	r1, [r8]
 8103124:	5162      	str	r2, [r4, r5]
 8103126:	604b      	str	r3, [r1, #4]
 8103128:	4630      	mov	r0, r6
 810312a:	f000 f82f 	bl	810318c <__malloc_unlock>
 810312e:	f104 000b 	add.w	r0, r4, #11
 8103132:	1d23      	adds	r3, r4, #4
 8103134:	f020 0007 	bic.w	r0, r0, #7
 8103138:	1ac2      	subs	r2, r0, r3
 810313a:	bf1c      	itt	ne
 810313c:	1a1b      	subne	r3, r3, r0
 810313e:	50a3      	strne	r3, [r4, r2]
 8103140:	e7af      	b.n	81030a2 <_malloc_r+0x22>
 8103142:	6862      	ldr	r2, [r4, #4]
 8103144:	42a3      	cmp	r3, r4
 8103146:	bf0c      	ite	eq
 8103148:	f8c8 2000 	streq.w	r2, [r8]
 810314c:	605a      	strne	r2, [r3, #4]
 810314e:	e7eb      	b.n	8103128 <_malloc_r+0xa8>
 8103150:	4623      	mov	r3, r4
 8103152:	6864      	ldr	r4, [r4, #4]
 8103154:	e7ae      	b.n	81030b4 <_malloc_r+0x34>
 8103156:	463c      	mov	r4, r7
 8103158:	687f      	ldr	r7, [r7, #4]
 810315a:	e7b6      	b.n	81030ca <_malloc_r+0x4a>
 810315c:	461a      	mov	r2, r3
 810315e:	685b      	ldr	r3, [r3, #4]
 8103160:	42a3      	cmp	r3, r4
 8103162:	d1fb      	bne.n	810315c <_malloc_r+0xdc>
 8103164:	2300      	movs	r3, #0
 8103166:	6053      	str	r3, [r2, #4]
 8103168:	e7de      	b.n	8103128 <_malloc_r+0xa8>
 810316a:	230c      	movs	r3, #12
 810316c:	6033      	str	r3, [r6, #0]
 810316e:	4630      	mov	r0, r6
 8103170:	f000 f80c 	bl	810318c <__malloc_unlock>
 8103174:	e794      	b.n	81030a0 <_malloc_r+0x20>
 8103176:	6005      	str	r5, [r0, #0]
 8103178:	e7d6      	b.n	8103128 <_malloc_r+0xa8>
 810317a:	bf00      	nop
 810317c:	10000344 	.word	0x10000344

08103180 <__malloc_lock>:
 8103180:	4801      	ldr	r0, [pc, #4]	@ (8103188 <__malloc_lock+0x8>)
 8103182:	f7ff b8b8 	b.w	81022f6 <__retarget_lock_acquire_recursive>
 8103186:	bf00      	nop
 8103188:	1000033c 	.word	0x1000033c

0810318c <__malloc_unlock>:
 810318c:	4801      	ldr	r0, [pc, #4]	@ (8103194 <__malloc_unlock+0x8>)
 810318e:	f7ff b8b3 	b.w	81022f8 <__retarget_lock_release_recursive>
 8103192:	bf00      	nop
 8103194:	1000033c 	.word	0x1000033c

08103198 <_Balloc>:
 8103198:	b570      	push	{r4, r5, r6, lr}
 810319a:	69c6      	ldr	r6, [r0, #28]
 810319c:	4604      	mov	r4, r0
 810319e:	460d      	mov	r5, r1
 81031a0:	b976      	cbnz	r6, 81031c0 <_Balloc+0x28>
 81031a2:	2010      	movs	r0, #16
 81031a4:	f7ff ff42 	bl	810302c <malloc>
 81031a8:	4602      	mov	r2, r0
 81031aa:	61e0      	str	r0, [r4, #28]
 81031ac:	b920      	cbnz	r0, 81031b8 <_Balloc+0x20>
 81031ae:	4b18      	ldr	r3, [pc, #96]	@ (8103210 <_Balloc+0x78>)
 81031b0:	4818      	ldr	r0, [pc, #96]	@ (8103214 <_Balloc+0x7c>)
 81031b2:	216b      	movs	r1, #107	@ 0x6b
 81031b4:	f000 fc3c 	bl	8103a30 <__assert_func>
 81031b8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 81031bc:	6006      	str	r6, [r0, #0]
 81031be:	60c6      	str	r6, [r0, #12]
 81031c0:	69e6      	ldr	r6, [r4, #28]
 81031c2:	68f3      	ldr	r3, [r6, #12]
 81031c4:	b183      	cbz	r3, 81031e8 <_Balloc+0x50>
 81031c6:	69e3      	ldr	r3, [r4, #28]
 81031c8:	68db      	ldr	r3, [r3, #12]
 81031ca:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 81031ce:	b9b8      	cbnz	r0, 8103200 <_Balloc+0x68>
 81031d0:	2101      	movs	r1, #1
 81031d2:	fa01 f605 	lsl.w	r6, r1, r5
 81031d6:	1d72      	adds	r2, r6, #5
 81031d8:	0092      	lsls	r2, r2, #2
 81031da:	4620      	mov	r0, r4
 81031dc:	f000 fc46 	bl	8103a6c <_calloc_r>
 81031e0:	b160      	cbz	r0, 81031fc <_Balloc+0x64>
 81031e2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 81031e6:	e00e      	b.n	8103206 <_Balloc+0x6e>
 81031e8:	2221      	movs	r2, #33	@ 0x21
 81031ea:	2104      	movs	r1, #4
 81031ec:	4620      	mov	r0, r4
 81031ee:	f000 fc3d 	bl	8103a6c <_calloc_r>
 81031f2:	69e3      	ldr	r3, [r4, #28]
 81031f4:	60f0      	str	r0, [r6, #12]
 81031f6:	68db      	ldr	r3, [r3, #12]
 81031f8:	2b00      	cmp	r3, #0
 81031fa:	d1e4      	bne.n	81031c6 <_Balloc+0x2e>
 81031fc:	2000      	movs	r0, #0
 81031fe:	bd70      	pop	{r4, r5, r6, pc}
 8103200:	6802      	ldr	r2, [r0, #0]
 8103202:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8103206:	2300      	movs	r3, #0
 8103208:	e9c0 3303 	strd	r3, r3, [r0, #12]
 810320c:	e7f7      	b.n	81031fe <_Balloc+0x66>
 810320e:	bf00      	nop
 8103210:	081040a9 	.word	0x081040a9
 8103214:	08104129 	.word	0x08104129

08103218 <_Bfree>:
 8103218:	b570      	push	{r4, r5, r6, lr}
 810321a:	69c6      	ldr	r6, [r0, #28]
 810321c:	4605      	mov	r5, r0
 810321e:	460c      	mov	r4, r1
 8103220:	b976      	cbnz	r6, 8103240 <_Bfree+0x28>
 8103222:	2010      	movs	r0, #16
 8103224:	f7ff ff02 	bl	810302c <malloc>
 8103228:	4602      	mov	r2, r0
 810322a:	61e8      	str	r0, [r5, #28]
 810322c:	b920      	cbnz	r0, 8103238 <_Bfree+0x20>
 810322e:	4b09      	ldr	r3, [pc, #36]	@ (8103254 <_Bfree+0x3c>)
 8103230:	4809      	ldr	r0, [pc, #36]	@ (8103258 <_Bfree+0x40>)
 8103232:	218f      	movs	r1, #143	@ 0x8f
 8103234:	f000 fbfc 	bl	8103a30 <__assert_func>
 8103238:	e9c0 6601 	strd	r6, r6, [r0, #4]
 810323c:	6006      	str	r6, [r0, #0]
 810323e:	60c6      	str	r6, [r0, #12]
 8103240:	b13c      	cbz	r4, 8103252 <_Bfree+0x3a>
 8103242:	69eb      	ldr	r3, [r5, #28]
 8103244:	6862      	ldr	r2, [r4, #4]
 8103246:	68db      	ldr	r3, [r3, #12]
 8103248:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 810324c:	6021      	str	r1, [r4, #0]
 810324e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8103252:	bd70      	pop	{r4, r5, r6, pc}
 8103254:	081040a9 	.word	0x081040a9
 8103258:	08104129 	.word	0x08104129

0810325c <__multadd>:
 810325c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8103260:	690d      	ldr	r5, [r1, #16]
 8103262:	4607      	mov	r7, r0
 8103264:	460c      	mov	r4, r1
 8103266:	461e      	mov	r6, r3
 8103268:	f101 0c14 	add.w	ip, r1, #20
 810326c:	2000      	movs	r0, #0
 810326e:	f8dc 3000 	ldr.w	r3, [ip]
 8103272:	b299      	uxth	r1, r3
 8103274:	fb02 6101 	mla	r1, r2, r1, r6
 8103278:	0c1e      	lsrs	r6, r3, #16
 810327a:	0c0b      	lsrs	r3, r1, #16
 810327c:	fb02 3306 	mla	r3, r2, r6, r3
 8103280:	b289      	uxth	r1, r1
 8103282:	3001      	adds	r0, #1
 8103284:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8103288:	4285      	cmp	r5, r0
 810328a:	f84c 1b04 	str.w	r1, [ip], #4
 810328e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8103292:	dcec      	bgt.n	810326e <__multadd+0x12>
 8103294:	b30e      	cbz	r6, 81032da <__multadd+0x7e>
 8103296:	68a3      	ldr	r3, [r4, #8]
 8103298:	42ab      	cmp	r3, r5
 810329a:	dc19      	bgt.n	81032d0 <__multadd+0x74>
 810329c:	6861      	ldr	r1, [r4, #4]
 810329e:	4638      	mov	r0, r7
 81032a0:	3101      	adds	r1, #1
 81032a2:	f7ff ff79 	bl	8103198 <_Balloc>
 81032a6:	4680      	mov	r8, r0
 81032a8:	b928      	cbnz	r0, 81032b6 <__multadd+0x5a>
 81032aa:	4602      	mov	r2, r0
 81032ac:	4b0c      	ldr	r3, [pc, #48]	@ (81032e0 <__multadd+0x84>)
 81032ae:	480d      	ldr	r0, [pc, #52]	@ (81032e4 <__multadd+0x88>)
 81032b0:	21ba      	movs	r1, #186	@ 0xba
 81032b2:	f000 fbbd 	bl	8103a30 <__assert_func>
 81032b6:	6922      	ldr	r2, [r4, #16]
 81032b8:	3202      	adds	r2, #2
 81032ba:	f104 010c 	add.w	r1, r4, #12
 81032be:	0092      	lsls	r2, r2, #2
 81032c0:	300c      	adds	r0, #12
 81032c2:	f000 fba7 	bl	8103a14 <memcpy>
 81032c6:	4621      	mov	r1, r4
 81032c8:	4638      	mov	r0, r7
 81032ca:	f7ff ffa5 	bl	8103218 <_Bfree>
 81032ce:	4644      	mov	r4, r8
 81032d0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 81032d4:	3501      	adds	r5, #1
 81032d6:	615e      	str	r6, [r3, #20]
 81032d8:	6125      	str	r5, [r4, #16]
 81032da:	4620      	mov	r0, r4
 81032dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 81032e0:	08104118 	.word	0x08104118
 81032e4:	08104129 	.word	0x08104129

081032e8 <__hi0bits>:
 81032e8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 81032ec:	4603      	mov	r3, r0
 81032ee:	bf36      	itet	cc
 81032f0:	0403      	lslcc	r3, r0, #16
 81032f2:	2000      	movcs	r0, #0
 81032f4:	2010      	movcc	r0, #16
 81032f6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 81032fa:	bf3c      	itt	cc
 81032fc:	021b      	lslcc	r3, r3, #8
 81032fe:	3008      	addcc	r0, #8
 8103300:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8103304:	bf3c      	itt	cc
 8103306:	011b      	lslcc	r3, r3, #4
 8103308:	3004      	addcc	r0, #4
 810330a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 810330e:	bf3c      	itt	cc
 8103310:	009b      	lslcc	r3, r3, #2
 8103312:	3002      	addcc	r0, #2
 8103314:	2b00      	cmp	r3, #0
 8103316:	db05      	blt.n	8103324 <__hi0bits+0x3c>
 8103318:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 810331c:	f100 0001 	add.w	r0, r0, #1
 8103320:	bf08      	it	eq
 8103322:	2020      	moveq	r0, #32
 8103324:	4770      	bx	lr

08103326 <__lo0bits>:
 8103326:	6803      	ldr	r3, [r0, #0]
 8103328:	4602      	mov	r2, r0
 810332a:	f013 0007 	ands.w	r0, r3, #7
 810332e:	d00b      	beq.n	8103348 <__lo0bits+0x22>
 8103330:	07d9      	lsls	r1, r3, #31
 8103332:	d421      	bmi.n	8103378 <__lo0bits+0x52>
 8103334:	0798      	lsls	r0, r3, #30
 8103336:	bf49      	itett	mi
 8103338:	085b      	lsrmi	r3, r3, #1
 810333a:	089b      	lsrpl	r3, r3, #2
 810333c:	2001      	movmi	r0, #1
 810333e:	6013      	strmi	r3, [r2, #0]
 8103340:	bf5c      	itt	pl
 8103342:	6013      	strpl	r3, [r2, #0]
 8103344:	2002      	movpl	r0, #2
 8103346:	4770      	bx	lr
 8103348:	b299      	uxth	r1, r3
 810334a:	b909      	cbnz	r1, 8103350 <__lo0bits+0x2a>
 810334c:	0c1b      	lsrs	r3, r3, #16
 810334e:	2010      	movs	r0, #16
 8103350:	b2d9      	uxtb	r1, r3
 8103352:	b909      	cbnz	r1, 8103358 <__lo0bits+0x32>
 8103354:	3008      	adds	r0, #8
 8103356:	0a1b      	lsrs	r3, r3, #8
 8103358:	0719      	lsls	r1, r3, #28
 810335a:	bf04      	itt	eq
 810335c:	091b      	lsreq	r3, r3, #4
 810335e:	3004      	addeq	r0, #4
 8103360:	0799      	lsls	r1, r3, #30
 8103362:	bf04      	itt	eq
 8103364:	089b      	lsreq	r3, r3, #2
 8103366:	3002      	addeq	r0, #2
 8103368:	07d9      	lsls	r1, r3, #31
 810336a:	d403      	bmi.n	8103374 <__lo0bits+0x4e>
 810336c:	085b      	lsrs	r3, r3, #1
 810336e:	f100 0001 	add.w	r0, r0, #1
 8103372:	d003      	beq.n	810337c <__lo0bits+0x56>
 8103374:	6013      	str	r3, [r2, #0]
 8103376:	4770      	bx	lr
 8103378:	2000      	movs	r0, #0
 810337a:	4770      	bx	lr
 810337c:	2020      	movs	r0, #32
 810337e:	4770      	bx	lr

08103380 <__i2b>:
 8103380:	b510      	push	{r4, lr}
 8103382:	460c      	mov	r4, r1
 8103384:	2101      	movs	r1, #1
 8103386:	f7ff ff07 	bl	8103198 <_Balloc>
 810338a:	4602      	mov	r2, r0
 810338c:	b928      	cbnz	r0, 810339a <__i2b+0x1a>
 810338e:	4b05      	ldr	r3, [pc, #20]	@ (81033a4 <__i2b+0x24>)
 8103390:	4805      	ldr	r0, [pc, #20]	@ (81033a8 <__i2b+0x28>)
 8103392:	f240 1145 	movw	r1, #325	@ 0x145
 8103396:	f000 fb4b 	bl	8103a30 <__assert_func>
 810339a:	2301      	movs	r3, #1
 810339c:	6144      	str	r4, [r0, #20]
 810339e:	6103      	str	r3, [r0, #16]
 81033a0:	bd10      	pop	{r4, pc}
 81033a2:	bf00      	nop
 81033a4:	08104118 	.word	0x08104118
 81033a8:	08104129 	.word	0x08104129

081033ac <__multiply>:
 81033ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81033b0:	4614      	mov	r4, r2
 81033b2:	690a      	ldr	r2, [r1, #16]
 81033b4:	6923      	ldr	r3, [r4, #16]
 81033b6:	429a      	cmp	r2, r3
 81033b8:	bfa8      	it	ge
 81033ba:	4623      	movge	r3, r4
 81033bc:	460f      	mov	r7, r1
 81033be:	bfa4      	itt	ge
 81033c0:	460c      	movge	r4, r1
 81033c2:	461f      	movge	r7, r3
 81033c4:	f8d4 a010 	ldr.w	sl, [r4, #16]
 81033c8:	f8d7 9010 	ldr.w	r9, [r7, #16]
 81033cc:	68a3      	ldr	r3, [r4, #8]
 81033ce:	6861      	ldr	r1, [r4, #4]
 81033d0:	eb0a 0609 	add.w	r6, sl, r9
 81033d4:	42b3      	cmp	r3, r6
 81033d6:	b085      	sub	sp, #20
 81033d8:	bfb8      	it	lt
 81033da:	3101      	addlt	r1, #1
 81033dc:	f7ff fedc 	bl	8103198 <_Balloc>
 81033e0:	b930      	cbnz	r0, 81033f0 <__multiply+0x44>
 81033e2:	4602      	mov	r2, r0
 81033e4:	4b44      	ldr	r3, [pc, #272]	@ (81034f8 <__multiply+0x14c>)
 81033e6:	4845      	ldr	r0, [pc, #276]	@ (81034fc <__multiply+0x150>)
 81033e8:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 81033ec:	f000 fb20 	bl	8103a30 <__assert_func>
 81033f0:	f100 0514 	add.w	r5, r0, #20
 81033f4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 81033f8:	462b      	mov	r3, r5
 81033fa:	2200      	movs	r2, #0
 81033fc:	4543      	cmp	r3, r8
 81033fe:	d321      	bcc.n	8103444 <__multiply+0x98>
 8103400:	f107 0114 	add.w	r1, r7, #20
 8103404:	f104 0214 	add.w	r2, r4, #20
 8103408:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 810340c:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8103410:	9302      	str	r3, [sp, #8]
 8103412:	1b13      	subs	r3, r2, r4
 8103414:	3b15      	subs	r3, #21
 8103416:	f023 0303 	bic.w	r3, r3, #3
 810341a:	3304      	adds	r3, #4
 810341c:	f104 0715 	add.w	r7, r4, #21
 8103420:	42ba      	cmp	r2, r7
 8103422:	bf38      	it	cc
 8103424:	2304      	movcc	r3, #4
 8103426:	9301      	str	r3, [sp, #4]
 8103428:	9b02      	ldr	r3, [sp, #8]
 810342a:	9103      	str	r1, [sp, #12]
 810342c:	428b      	cmp	r3, r1
 810342e:	d80c      	bhi.n	810344a <__multiply+0x9e>
 8103430:	2e00      	cmp	r6, #0
 8103432:	dd03      	ble.n	810343c <__multiply+0x90>
 8103434:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8103438:	2b00      	cmp	r3, #0
 810343a:	d05b      	beq.n	81034f4 <__multiply+0x148>
 810343c:	6106      	str	r6, [r0, #16]
 810343e:	b005      	add	sp, #20
 8103440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8103444:	f843 2b04 	str.w	r2, [r3], #4
 8103448:	e7d8      	b.n	81033fc <__multiply+0x50>
 810344a:	f8b1 a000 	ldrh.w	sl, [r1]
 810344e:	f1ba 0f00 	cmp.w	sl, #0
 8103452:	d024      	beq.n	810349e <__multiply+0xf2>
 8103454:	f104 0e14 	add.w	lr, r4, #20
 8103458:	46a9      	mov	r9, r5
 810345a:	f04f 0c00 	mov.w	ip, #0
 810345e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8103462:	f8d9 3000 	ldr.w	r3, [r9]
 8103466:	fa1f fb87 	uxth.w	fp, r7
 810346a:	b29b      	uxth	r3, r3
 810346c:	fb0a 330b 	mla	r3, sl, fp, r3
 8103470:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8103474:	f8d9 7000 	ldr.w	r7, [r9]
 8103478:	4463      	add	r3, ip
 810347a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 810347e:	fb0a c70b 	mla	r7, sl, fp, ip
 8103482:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8103486:	b29b      	uxth	r3, r3
 8103488:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 810348c:	4572      	cmp	r2, lr
 810348e:	f849 3b04 	str.w	r3, [r9], #4
 8103492:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8103496:	d8e2      	bhi.n	810345e <__multiply+0xb2>
 8103498:	9b01      	ldr	r3, [sp, #4]
 810349a:	f845 c003 	str.w	ip, [r5, r3]
 810349e:	9b03      	ldr	r3, [sp, #12]
 81034a0:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 81034a4:	3104      	adds	r1, #4
 81034a6:	f1b9 0f00 	cmp.w	r9, #0
 81034aa:	d021      	beq.n	81034f0 <__multiply+0x144>
 81034ac:	682b      	ldr	r3, [r5, #0]
 81034ae:	f104 0c14 	add.w	ip, r4, #20
 81034b2:	46ae      	mov	lr, r5
 81034b4:	f04f 0a00 	mov.w	sl, #0
 81034b8:	f8bc b000 	ldrh.w	fp, [ip]
 81034bc:	f8be 7002 	ldrh.w	r7, [lr, #2]
 81034c0:	fb09 770b 	mla	r7, r9, fp, r7
 81034c4:	4457      	add	r7, sl
 81034c6:	b29b      	uxth	r3, r3
 81034c8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 81034cc:	f84e 3b04 	str.w	r3, [lr], #4
 81034d0:	f85c 3b04 	ldr.w	r3, [ip], #4
 81034d4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 81034d8:	f8be 3000 	ldrh.w	r3, [lr]
 81034dc:	fb09 330a 	mla	r3, r9, sl, r3
 81034e0:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 81034e4:	4562      	cmp	r2, ip
 81034e6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 81034ea:	d8e5      	bhi.n	81034b8 <__multiply+0x10c>
 81034ec:	9f01      	ldr	r7, [sp, #4]
 81034ee:	51eb      	str	r3, [r5, r7]
 81034f0:	3504      	adds	r5, #4
 81034f2:	e799      	b.n	8103428 <__multiply+0x7c>
 81034f4:	3e01      	subs	r6, #1
 81034f6:	e79b      	b.n	8103430 <__multiply+0x84>
 81034f8:	08104118 	.word	0x08104118
 81034fc:	08104129 	.word	0x08104129

08103500 <__pow5mult>:
 8103500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103504:	4615      	mov	r5, r2
 8103506:	f012 0203 	ands.w	r2, r2, #3
 810350a:	4607      	mov	r7, r0
 810350c:	460e      	mov	r6, r1
 810350e:	d007      	beq.n	8103520 <__pow5mult+0x20>
 8103510:	4c25      	ldr	r4, [pc, #148]	@ (81035a8 <__pow5mult+0xa8>)
 8103512:	3a01      	subs	r2, #1
 8103514:	2300      	movs	r3, #0
 8103516:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 810351a:	f7ff fe9f 	bl	810325c <__multadd>
 810351e:	4606      	mov	r6, r0
 8103520:	10ad      	asrs	r5, r5, #2
 8103522:	d03d      	beq.n	81035a0 <__pow5mult+0xa0>
 8103524:	69fc      	ldr	r4, [r7, #28]
 8103526:	b97c      	cbnz	r4, 8103548 <__pow5mult+0x48>
 8103528:	2010      	movs	r0, #16
 810352a:	f7ff fd7f 	bl	810302c <malloc>
 810352e:	4602      	mov	r2, r0
 8103530:	61f8      	str	r0, [r7, #28]
 8103532:	b928      	cbnz	r0, 8103540 <__pow5mult+0x40>
 8103534:	4b1d      	ldr	r3, [pc, #116]	@ (81035ac <__pow5mult+0xac>)
 8103536:	481e      	ldr	r0, [pc, #120]	@ (81035b0 <__pow5mult+0xb0>)
 8103538:	f240 11b3 	movw	r1, #435	@ 0x1b3
 810353c:	f000 fa78 	bl	8103a30 <__assert_func>
 8103540:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8103544:	6004      	str	r4, [r0, #0]
 8103546:	60c4      	str	r4, [r0, #12]
 8103548:	f8d7 801c 	ldr.w	r8, [r7, #28]
 810354c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8103550:	b94c      	cbnz	r4, 8103566 <__pow5mult+0x66>
 8103552:	f240 2171 	movw	r1, #625	@ 0x271
 8103556:	4638      	mov	r0, r7
 8103558:	f7ff ff12 	bl	8103380 <__i2b>
 810355c:	2300      	movs	r3, #0
 810355e:	f8c8 0008 	str.w	r0, [r8, #8]
 8103562:	4604      	mov	r4, r0
 8103564:	6003      	str	r3, [r0, #0]
 8103566:	f04f 0900 	mov.w	r9, #0
 810356a:	07eb      	lsls	r3, r5, #31
 810356c:	d50a      	bpl.n	8103584 <__pow5mult+0x84>
 810356e:	4631      	mov	r1, r6
 8103570:	4622      	mov	r2, r4
 8103572:	4638      	mov	r0, r7
 8103574:	f7ff ff1a 	bl	81033ac <__multiply>
 8103578:	4631      	mov	r1, r6
 810357a:	4680      	mov	r8, r0
 810357c:	4638      	mov	r0, r7
 810357e:	f7ff fe4b 	bl	8103218 <_Bfree>
 8103582:	4646      	mov	r6, r8
 8103584:	106d      	asrs	r5, r5, #1
 8103586:	d00b      	beq.n	81035a0 <__pow5mult+0xa0>
 8103588:	6820      	ldr	r0, [r4, #0]
 810358a:	b938      	cbnz	r0, 810359c <__pow5mult+0x9c>
 810358c:	4622      	mov	r2, r4
 810358e:	4621      	mov	r1, r4
 8103590:	4638      	mov	r0, r7
 8103592:	f7ff ff0b 	bl	81033ac <__multiply>
 8103596:	6020      	str	r0, [r4, #0]
 8103598:	f8c0 9000 	str.w	r9, [r0]
 810359c:	4604      	mov	r4, r0
 810359e:	e7e4      	b.n	810356a <__pow5mult+0x6a>
 81035a0:	4630      	mov	r0, r6
 81035a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 81035a6:	bf00      	nop
 81035a8:	08104184 	.word	0x08104184
 81035ac:	081040a9 	.word	0x081040a9
 81035b0:	08104129 	.word	0x08104129

081035b4 <__lshift>:
 81035b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 81035b8:	460c      	mov	r4, r1
 81035ba:	6849      	ldr	r1, [r1, #4]
 81035bc:	6923      	ldr	r3, [r4, #16]
 81035be:	eb03 1862 	add.w	r8, r3, r2, asr #5
 81035c2:	68a3      	ldr	r3, [r4, #8]
 81035c4:	4607      	mov	r7, r0
 81035c6:	4691      	mov	r9, r2
 81035c8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 81035cc:	f108 0601 	add.w	r6, r8, #1
 81035d0:	42b3      	cmp	r3, r6
 81035d2:	db0b      	blt.n	81035ec <__lshift+0x38>
 81035d4:	4638      	mov	r0, r7
 81035d6:	f7ff fddf 	bl	8103198 <_Balloc>
 81035da:	4605      	mov	r5, r0
 81035dc:	b948      	cbnz	r0, 81035f2 <__lshift+0x3e>
 81035de:	4602      	mov	r2, r0
 81035e0:	4b28      	ldr	r3, [pc, #160]	@ (8103684 <__lshift+0xd0>)
 81035e2:	4829      	ldr	r0, [pc, #164]	@ (8103688 <__lshift+0xd4>)
 81035e4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 81035e8:	f000 fa22 	bl	8103a30 <__assert_func>
 81035ec:	3101      	adds	r1, #1
 81035ee:	005b      	lsls	r3, r3, #1
 81035f0:	e7ee      	b.n	81035d0 <__lshift+0x1c>
 81035f2:	2300      	movs	r3, #0
 81035f4:	f100 0114 	add.w	r1, r0, #20
 81035f8:	f100 0210 	add.w	r2, r0, #16
 81035fc:	4618      	mov	r0, r3
 81035fe:	4553      	cmp	r3, sl
 8103600:	db33      	blt.n	810366a <__lshift+0xb6>
 8103602:	6920      	ldr	r0, [r4, #16]
 8103604:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8103608:	f104 0314 	add.w	r3, r4, #20
 810360c:	f019 091f 	ands.w	r9, r9, #31
 8103610:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8103614:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8103618:	d02b      	beq.n	8103672 <__lshift+0xbe>
 810361a:	f1c9 0e20 	rsb	lr, r9, #32
 810361e:	468a      	mov	sl, r1
 8103620:	2200      	movs	r2, #0
 8103622:	6818      	ldr	r0, [r3, #0]
 8103624:	fa00 f009 	lsl.w	r0, r0, r9
 8103628:	4310      	orrs	r0, r2
 810362a:	f84a 0b04 	str.w	r0, [sl], #4
 810362e:	f853 2b04 	ldr.w	r2, [r3], #4
 8103632:	459c      	cmp	ip, r3
 8103634:	fa22 f20e 	lsr.w	r2, r2, lr
 8103638:	d8f3      	bhi.n	8103622 <__lshift+0x6e>
 810363a:	ebac 0304 	sub.w	r3, ip, r4
 810363e:	3b15      	subs	r3, #21
 8103640:	f023 0303 	bic.w	r3, r3, #3
 8103644:	3304      	adds	r3, #4
 8103646:	f104 0015 	add.w	r0, r4, #21
 810364a:	4584      	cmp	ip, r0
 810364c:	bf38      	it	cc
 810364e:	2304      	movcc	r3, #4
 8103650:	50ca      	str	r2, [r1, r3]
 8103652:	b10a      	cbz	r2, 8103658 <__lshift+0xa4>
 8103654:	f108 0602 	add.w	r6, r8, #2
 8103658:	3e01      	subs	r6, #1
 810365a:	4638      	mov	r0, r7
 810365c:	612e      	str	r6, [r5, #16]
 810365e:	4621      	mov	r1, r4
 8103660:	f7ff fdda 	bl	8103218 <_Bfree>
 8103664:	4628      	mov	r0, r5
 8103666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 810366a:	f842 0f04 	str.w	r0, [r2, #4]!
 810366e:	3301      	adds	r3, #1
 8103670:	e7c5      	b.n	81035fe <__lshift+0x4a>
 8103672:	3904      	subs	r1, #4
 8103674:	f853 2b04 	ldr.w	r2, [r3], #4
 8103678:	f841 2f04 	str.w	r2, [r1, #4]!
 810367c:	459c      	cmp	ip, r3
 810367e:	d8f9      	bhi.n	8103674 <__lshift+0xc0>
 8103680:	e7ea      	b.n	8103658 <__lshift+0xa4>
 8103682:	bf00      	nop
 8103684:	08104118 	.word	0x08104118
 8103688:	08104129 	.word	0x08104129

0810368c <__mcmp>:
 810368c:	690a      	ldr	r2, [r1, #16]
 810368e:	4603      	mov	r3, r0
 8103690:	6900      	ldr	r0, [r0, #16]
 8103692:	1a80      	subs	r0, r0, r2
 8103694:	b530      	push	{r4, r5, lr}
 8103696:	d10e      	bne.n	81036b6 <__mcmp+0x2a>
 8103698:	3314      	adds	r3, #20
 810369a:	3114      	adds	r1, #20
 810369c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 81036a0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 81036a4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 81036a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 81036ac:	4295      	cmp	r5, r2
 81036ae:	d003      	beq.n	81036b8 <__mcmp+0x2c>
 81036b0:	d205      	bcs.n	81036be <__mcmp+0x32>
 81036b2:	f04f 30ff 	mov.w	r0, #4294967295
 81036b6:	bd30      	pop	{r4, r5, pc}
 81036b8:	42a3      	cmp	r3, r4
 81036ba:	d3f3      	bcc.n	81036a4 <__mcmp+0x18>
 81036bc:	e7fb      	b.n	81036b6 <__mcmp+0x2a>
 81036be:	2001      	movs	r0, #1
 81036c0:	e7f9      	b.n	81036b6 <__mcmp+0x2a>
	...

081036c4 <__mdiff>:
 81036c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81036c8:	4689      	mov	r9, r1
 81036ca:	4606      	mov	r6, r0
 81036cc:	4611      	mov	r1, r2
 81036ce:	4648      	mov	r0, r9
 81036d0:	4614      	mov	r4, r2
 81036d2:	f7ff ffdb 	bl	810368c <__mcmp>
 81036d6:	1e05      	subs	r5, r0, #0
 81036d8:	d112      	bne.n	8103700 <__mdiff+0x3c>
 81036da:	4629      	mov	r1, r5
 81036dc:	4630      	mov	r0, r6
 81036de:	f7ff fd5b 	bl	8103198 <_Balloc>
 81036e2:	4602      	mov	r2, r0
 81036e4:	b928      	cbnz	r0, 81036f2 <__mdiff+0x2e>
 81036e6:	4b3f      	ldr	r3, [pc, #252]	@ (81037e4 <__mdiff+0x120>)
 81036e8:	f240 2137 	movw	r1, #567	@ 0x237
 81036ec:	483e      	ldr	r0, [pc, #248]	@ (81037e8 <__mdiff+0x124>)
 81036ee:	f000 f99f 	bl	8103a30 <__assert_func>
 81036f2:	2301      	movs	r3, #1
 81036f4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 81036f8:	4610      	mov	r0, r2
 81036fa:	b003      	add	sp, #12
 81036fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8103700:	bfbc      	itt	lt
 8103702:	464b      	movlt	r3, r9
 8103704:	46a1      	movlt	r9, r4
 8103706:	4630      	mov	r0, r6
 8103708:	f8d9 1004 	ldr.w	r1, [r9, #4]
 810370c:	bfba      	itte	lt
 810370e:	461c      	movlt	r4, r3
 8103710:	2501      	movlt	r5, #1
 8103712:	2500      	movge	r5, #0
 8103714:	f7ff fd40 	bl	8103198 <_Balloc>
 8103718:	4602      	mov	r2, r0
 810371a:	b918      	cbnz	r0, 8103724 <__mdiff+0x60>
 810371c:	4b31      	ldr	r3, [pc, #196]	@ (81037e4 <__mdiff+0x120>)
 810371e:	f240 2145 	movw	r1, #581	@ 0x245
 8103722:	e7e3      	b.n	81036ec <__mdiff+0x28>
 8103724:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8103728:	6926      	ldr	r6, [r4, #16]
 810372a:	60c5      	str	r5, [r0, #12]
 810372c:	f109 0310 	add.w	r3, r9, #16
 8103730:	f109 0514 	add.w	r5, r9, #20
 8103734:	f104 0e14 	add.w	lr, r4, #20
 8103738:	f100 0b14 	add.w	fp, r0, #20
 810373c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8103740:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8103744:	9301      	str	r3, [sp, #4]
 8103746:	46d9      	mov	r9, fp
 8103748:	f04f 0c00 	mov.w	ip, #0
 810374c:	9b01      	ldr	r3, [sp, #4]
 810374e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8103752:	f853 af04 	ldr.w	sl, [r3, #4]!
 8103756:	9301      	str	r3, [sp, #4]
 8103758:	fa1f f38a 	uxth.w	r3, sl
 810375c:	4619      	mov	r1, r3
 810375e:	b283      	uxth	r3, r0
 8103760:	1acb      	subs	r3, r1, r3
 8103762:	0c00      	lsrs	r0, r0, #16
 8103764:	4463      	add	r3, ip
 8103766:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 810376a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 810376e:	b29b      	uxth	r3, r3
 8103770:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8103774:	4576      	cmp	r6, lr
 8103776:	f849 3b04 	str.w	r3, [r9], #4
 810377a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 810377e:	d8e5      	bhi.n	810374c <__mdiff+0x88>
 8103780:	1b33      	subs	r3, r6, r4
 8103782:	3b15      	subs	r3, #21
 8103784:	f023 0303 	bic.w	r3, r3, #3
 8103788:	3415      	adds	r4, #21
 810378a:	3304      	adds	r3, #4
 810378c:	42a6      	cmp	r6, r4
 810378e:	bf38      	it	cc
 8103790:	2304      	movcc	r3, #4
 8103792:	441d      	add	r5, r3
 8103794:	445b      	add	r3, fp
 8103796:	461e      	mov	r6, r3
 8103798:	462c      	mov	r4, r5
 810379a:	4544      	cmp	r4, r8
 810379c:	d30e      	bcc.n	81037bc <__mdiff+0xf8>
 810379e:	f108 0103 	add.w	r1, r8, #3
 81037a2:	1b49      	subs	r1, r1, r5
 81037a4:	f021 0103 	bic.w	r1, r1, #3
 81037a8:	3d03      	subs	r5, #3
 81037aa:	45a8      	cmp	r8, r5
 81037ac:	bf38      	it	cc
 81037ae:	2100      	movcc	r1, #0
 81037b0:	440b      	add	r3, r1
 81037b2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 81037b6:	b191      	cbz	r1, 81037de <__mdiff+0x11a>
 81037b8:	6117      	str	r7, [r2, #16]
 81037ba:	e79d      	b.n	81036f8 <__mdiff+0x34>
 81037bc:	f854 1b04 	ldr.w	r1, [r4], #4
 81037c0:	46e6      	mov	lr, ip
 81037c2:	0c08      	lsrs	r0, r1, #16
 81037c4:	fa1c fc81 	uxtah	ip, ip, r1
 81037c8:	4471      	add	r1, lr
 81037ca:	eb00 402c 	add.w	r0, r0, ip, asr #16
 81037ce:	b289      	uxth	r1, r1
 81037d0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 81037d4:	f846 1b04 	str.w	r1, [r6], #4
 81037d8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 81037dc:	e7dd      	b.n	810379a <__mdiff+0xd6>
 81037de:	3f01      	subs	r7, #1
 81037e0:	e7e7      	b.n	81037b2 <__mdiff+0xee>
 81037e2:	bf00      	nop
 81037e4:	08104118 	.word	0x08104118
 81037e8:	08104129 	.word	0x08104129

081037ec <__d2b>:
 81037ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 81037f0:	460f      	mov	r7, r1
 81037f2:	2101      	movs	r1, #1
 81037f4:	ec59 8b10 	vmov	r8, r9, d0
 81037f8:	4616      	mov	r6, r2
 81037fa:	f7ff fccd 	bl	8103198 <_Balloc>
 81037fe:	4604      	mov	r4, r0
 8103800:	b930      	cbnz	r0, 8103810 <__d2b+0x24>
 8103802:	4602      	mov	r2, r0
 8103804:	4b23      	ldr	r3, [pc, #140]	@ (8103894 <__d2b+0xa8>)
 8103806:	4824      	ldr	r0, [pc, #144]	@ (8103898 <__d2b+0xac>)
 8103808:	f240 310f 	movw	r1, #783	@ 0x30f
 810380c:	f000 f910 	bl	8103a30 <__assert_func>
 8103810:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8103814:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8103818:	b10d      	cbz	r5, 810381e <__d2b+0x32>
 810381a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 810381e:	9301      	str	r3, [sp, #4]
 8103820:	f1b8 0300 	subs.w	r3, r8, #0
 8103824:	d023      	beq.n	810386e <__d2b+0x82>
 8103826:	4668      	mov	r0, sp
 8103828:	9300      	str	r3, [sp, #0]
 810382a:	f7ff fd7c 	bl	8103326 <__lo0bits>
 810382e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8103832:	b1d0      	cbz	r0, 810386a <__d2b+0x7e>
 8103834:	f1c0 0320 	rsb	r3, r0, #32
 8103838:	fa02 f303 	lsl.w	r3, r2, r3
 810383c:	430b      	orrs	r3, r1
 810383e:	40c2      	lsrs	r2, r0
 8103840:	6163      	str	r3, [r4, #20]
 8103842:	9201      	str	r2, [sp, #4]
 8103844:	9b01      	ldr	r3, [sp, #4]
 8103846:	61a3      	str	r3, [r4, #24]
 8103848:	2b00      	cmp	r3, #0
 810384a:	bf0c      	ite	eq
 810384c:	2201      	moveq	r2, #1
 810384e:	2202      	movne	r2, #2
 8103850:	6122      	str	r2, [r4, #16]
 8103852:	b1a5      	cbz	r5, 810387e <__d2b+0x92>
 8103854:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8103858:	4405      	add	r5, r0
 810385a:	603d      	str	r5, [r7, #0]
 810385c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8103860:	6030      	str	r0, [r6, #0]
 8103862:	4620      	mov	r0, r4
 8103864:	b003      	add	sp, #12
 8103866:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 810386a:	6161      	str	r1, [r4, #20]
 810386c:	e7ea      	b.n	8103844 <__d2b+0x58>
 810386e:	a801      	add	r0, sp, #4
 8103870:	f7ff fd59 	bl	8103326 <__lo0bits>
 8103874:	9b01      	ldr	r3, [sp, #4]
 8103876:	6163      	str	r3, [r4, #20]
 8103878:	3020      	adds	r0, #32
 810387a:	2201      	movs	r2, #1
 810387c:	e7e8      	b.n	8103850 <__d2b+0x64>
 810387e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8103882:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8103886:	6038      	str	r0, [r7, #0]
 8103888:	6918      	ldr	r0, [r3, #16]
 810388a:	f7ff fd2d 	bl	81032e8 <__hi0bits>
 810388e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8103892:	e7e5      	b.n	8103860 <__d2b+0x74>
 8103894:	08104118 	.word	0x08104118
 8103898:	08104129 	.word	0x08104129

0810389c <__sflush_r>:
 810389c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 81038a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 81038a4:	0716      	lsls	r6, r2, #28
 81038a6:	4605      	mov	r5, r0
 81038a8:	460c      	mov	r4, r1
 81038aa:	d454      	bmi.n	8103956 <__sflush_r+0xba>
 81038ac:	684b      	ldr	r3, [r1, #4]
 81038ae:	2b00      	cmp	r3, #0
 81038b0:	dc02      	bgt.n	81038b8 <__sflush_r+0x1c>
 81038b2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 81038b4:	2b00      	cmp	r3, #0
 81038b6:	dd48      	ble.n	810394a <__sflush_r+0xae>
 81038b8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 81038ba:	2e00      	cmp	r6, #0
 81038bc:	d045      	beq.n	810394a <__sflush_r+0xae>
 81038be:	2300      	movs	r3, #0
 81038c0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 81038c4:	682f      	ldr	r7, [r5, #0]
 81038c6:	6a21      	ldr	r1, [r4, #32]
 81038c8:	602b      	str	r3, [r5, #0]
 81038ca:	d030      	beq.n	810392e <__sflush_r+0x92>
 81038cc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 81038ce:	89a3      	ldrh	r3, [r4, #12]
 81038d0:	0759      	lsls	r1, r3, #29
 81038d2:	d505      	bpl.n	81038e0 <__sflush_r+0x44>
 81038d4:	6863      	ldr	r3, [r4, #4]
 81038d6:	1ad2      	subs	r2, r2, r3
 81038d8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 81038da:	b10b      	cbz	r3, 81038e0 <__sflush_r+0x44>
 81038dc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 81038de:	1ad2      	subs	r2, r2, r3
 81038e0:	2300      	movs	r3, #0
 81038e2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 81038e4:	6a21      	ldr	r1, [r4, #32]
 81038e6:	4628      	mov	r0, r5
 81038e8:	47b0      	blx	r6
 81038ea:	1c43      	adds	r3, r0, #1
 81038ec:	89a3      	ldrh	r3, [r4, #12]
 81038ee:	d106      	bne.n	81038fe <__sflush_r+0x62>
 81038f0:	6829      	ldr	r1, [r5, #0]
 81038f2:	291d      	cmp	r1, #29
 81038f4:	d82b      	bhi.n	810394e <__sflush_r+0xb2>
 81038f6:	4a2a      	ldr	r2, [pc, #168]	@ (81039a0 <__sflush_r+0x104>)
 81038f8:	410a      	asrs	r2, r1
 81038fa:	07d6      	lsls	r6, r2, #31
 81038fc:	d427      	bmi.n	810394e <__sflush_r+0xb2>
 81038fe:	2200      	movs	r2, #0
 8103900:	6062      	str	r2, [r4, #4]
 8103902:	04d9      	lsls	r1, r3, #19
 8103904:	6922      	ldr	r2, [r4, #16]
 8103906:	6022      	str	r2, [r4, #0]
 8103908:	d504      	bpl.n	8103914 <__sflush_r+0x78>
 810390a:	1c42      	adds	r2, r0, #1
 810390c:	d101      	bne.n	8103912 <__sflush_r+0x76>
 810390e:	682b      	ldr	r3, [r5, #0]
 8103910:	b903      	cbnz	r3, 8103914 <__sflush_r+0x78>
 8103912:	6560      	str	r0, [r4, #84]	@ 0x54
 8103914:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8103916:	602f      	str	r7, [r5, #0]
 8103918:	b1b9      	cbz	r1, 810394a <__sflush_r+0xae>
 810391a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 810391e:	4299      	cmp	r1, r3
 8103920:	d002      	beq.n	8103928 <__sflush_r+0x8c>
 8103922:	4628      	mov	r0, r5
 8103924:	f7ff fb38 	bl	8102f98 <_free_r>
 8103928:	2300      	movs	r3, #0
 810392a:	6363      	str	r3, [r4, #52]	@ 0x34
 810392c:	e00d      	b.n	810394a <__sflush_r+0xae>
 810392e:	2301      	movs	r3, #1
 8103930:	4628      	mov	r0, r5
 8103932:	47b0      	blx	r6
 8103934:	4602      	mov	r2, r0
 8103936:	1c50      	adds	r0, r2, #1
 8103938:	d1c9      	bne.n	81038ce <__sflush_r+0x32>
 810393a:	682b      	ldr	r3, [r5, #0]
 810393c:	2b00      	cmp	r3, #0
 810393e:	d0c6      	beq.n	81038ce <__sflush_r+0x32>
 8103940:	2b1d      	cmp	r3, #29
 8103942:	d001      	beq.n	8103948 <__sflush_r+0xac>
 8103944:	2b16      	cmp	r3, #22
 8103946:	d11e      	bne.n	8103986 <__sflush_r+0xea>
 8103948:	602f      	str	r7, [r5, #0]
 810394a:	2000      	movs	r0, #0
 810394c:	e022      	b.n	8103994 <__sflush_r+0xf8>
 810394e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8103952:	b21b      	sxth	r3, r3
 8103954:	e01b      	b.n	810398e <__sflush_r+0xf2>
 8103956:	690f      	ldr	r7, [r1, #16]
 8103958:	2f00      	cmp	r7, #0
 810395a:	d0f6      	beq.n	810394a <__sflush_r+0xae>
 810395c:	0793      	lsls	r3, r2, #30
 810395e:	680e      	ldr	r6, [r1, #0]
 8103960:	bf08      	it	eq
 8103962:	694b      	ldreq	r3, [r1, #20]
 8103964:	600f      	str	r7, [r1, #0]
 8103966:	bf18      	it	ne
 8103968:	2300      	movne	r3, #0
 810396a:	eba6 0807 	sub.w	r8, r6, r7
 810396e:	608b      	str	r3, [r1, #8]
 8103970:	f1b8 0f00 	cmp.w	r8, #0
 8103974:	dde9      	ble.n	810394a <__sflush_r+0xae>
 8103976:	6a21      	ldr	r1, [r4, #32]
 8103978:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 810397a:	4643      	mov	r3, r8
 810397c:	463a      	mov	r2, r7
 810397e:	4628      	mov	r0, r5
 8103980:	47b0      	blx	r6
 8103982:	2800      	cmp	r0, #0
 8103984:	dc08      	bgt.n	8103998 <__sflush_r+0xfc>
 8103986:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 810398a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 810398e:	81a3      	strh	r3, [r4, #12]
 8103990:	f04f 30ff 	mov.w	r0, #4294967295
 8103994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8103998:	4407      	add	r7, r0
 810399a:	eba8 0800 	sub.w	r8, r8, r0
 810399e:	e7e7      	b.n	8103970 <__sflush_r+0xd4>
 81039a0:	dfbffffe 	.word	0xdfbffffe

081039a4 <_fflush_r>:
 81039a4:	b538      	push	{r3, r4, r5, lr}
 81039a6:	690b      	ldr	r3, [r1, #16]
 81039a8:	4605      	mov	r5, r0
 81039aa:	460c      	mov	r4, r1
 81039ac:	b913      	cbnz	r3, 81039b4 <_fflush_r+0x10>
 81039ae:	2500      	movs	r5, #0
 81039b0:	4628      	mov	r0, r5
 81039b2:	bd38      	pop	{r3, r4, r5, pc}
 81039b4:	b118      	cbz	r0, 81039be <_fflush_r+0x1a>
 81039b6:	6a03      	ldr	r3, [r0, #32]
 81039b8:	b90b      	cbnz	r3, 81039be <_fflush_r+0x1a>
 81039ba:	f7fe fba5 	bl	8102108 <__sinit>
 81039be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 81039c2:	2b00      	cmp	r3, #0
 81039c4:	d0f3      	beq.n	81039ae <_fflush_r+0xa>
 81039c6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 81039c8:	07d0      	lsls	r0, r2, #31
 81039ca:	d404      	bmi.n	81039d6 <_fflush_r+0x32>
 81039cc:	0599      	lsls	r1, r3, #22
 81039ce:	d402      	bmi.n	81039d6 <_fflush_r+0x32>
 81039d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 81039d2:	f7fe fc90 	bl	81022f6 <__retarget_lock_acquire_recursive>
 81039d6:	4628      	mov	r0, r5
 81039d8:	4621      	mov	r1, r4
 81039da:	f7ff ff5f 	bl	810389c <__sflush_r>
 81039de:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 81039e0:	07da      	lsls	r2, r3, #31
 81039e2:	4605      	mov	r5, r0
 81039e4:	d4e4      	bmi.n	81039b0 <_fflush_r+0xc>
 81039e6:	89a3      	ldrh	r3, [r4, #12]
 81039e8:	059b      	lsls	r3, r3, #22
 81039ea:	d4e1      	bmi.n	81039b0 <_fflush_r+0xc>
 81039ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 81039ee:	f7fe fc83 	bl	81022f8 <__retarget_lock_release_recursive>
 81039f2:	e7dd      	b.n	81039b0 <_fflush_r+0xc>

081039f4 <_sbrk_r>:
 81039f4:	b538      	push	{r3, r4, r5, lr}
 81039f6:	4d06      	ldr	r5, [pc, #24]	@ (8103a10 <_sbrk_r+0x1c>)
 81039f8:	2300      	movs	r3, #0
 81039fa:	4604      	mov	r4, r0
 81039fc:	4608      	mov	r0, r1
 81039fe:	602b      	str	r3, [r5, #0]
 8103a00:	f7fd fa8a 	bl	8100f18 <_sbrk>
 8103a04:	1c43      	adds	r3, r0, #1
 8103a06:	d102      	bne.n	8103a0e <_sbrk_r+0x1a>
 8103a08:	682b      	ldr	r3, [r5, #0]
 8103a0a:	b103      	cbz	r3, 8103a0e <_sbrk_r+0x1a>
 8103a0c:	6023      	str	r3, [r4, #0]
 8103a0e:	bd38      	pop	{r3, r4, r5, pc}
 8103a10:	10000338 	.word	0x10000338

08103a14 <memcpy>:
 8103a14:	440a      	add	r2, r1
 8103a16:	4291      	cmp	r1, r2
 8103a18:	f100 33ff 	add.w	r3, r0, #4294967295
 8103a1c:	d100      	bne.n	8103a20 <memcpy+0xc>
 8103a1e:	4770      	bx	lr
 8103a20:	b510      	push	{r4, lr}
 8103a22:	f811 4b01 	ldrb.w	r4, [r1], #1
 8103a26:	f803 4f01 	strb.w	r4, [r3, #1]!
 8103a2a:	4291      	cmp	r1, r2
 8103a2c:	d1f9      	bne.n	8103a22 <memcpy+0xe>
 8103a2e:	bd10      	pop	{r4, pc}

08103a30 <__assert_func>:
 8103a30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8103a32:	4614      	mov	r4, r2
 8103a34:	461a      	mov	r2, r3
 8103a36:	4b09      	ldr	r3, [pc, #36]	@ (8103a5c <__assert_func+0x2c>)
 8103a38:	681b      	ldr	r3, [r3, #0]
 8103a3a:	4605      	mov	r5, r0
 8103a3c:	68d8      	ldr	r0, [r3, #12]
 8103a3e:	b954      	cbnz	r4, 8103a56 <__assert_func+0x26>
 8103a40:	4b07      	ldr	r3, [pc, #28]	@ (8103a60 <__assert_func+0x30>)
 8103a42:	461c      	mov	r4, r3
 8103a44:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8103a48:	9100      	str	r1, [sp, #0]
 8103a4a:	462b      	mov	r3, r5
 8103a4c:	4905      	ldr	r1, [pc, #20]	@ (8103a64 <__assert_func+0x34>)
 8103a4e:	f000 f841 	bl	8103ad4 <fiprintf>
 8103a52:	f000 f851 	bl	8103af8 <abort>
 8103a56:	4b04      	ldr	r3, [pc, #16]	@ (8103a68 <__assert_func+0x38>)
 8103a58:	e7f4      	b.n	8103a44 <__assert_func+0x14>
 8103a5a:	bf00      	nop
 8103a5c:	1000001c 	.word	0x1000001c
 8103a60:	081042c5 	.word	0x081042c5
 8103a64:	08104297 	.word	0x08104297
 8103a68:	0810428a 	.word	0x0810428a

08103a6c <_calloc_r>:
 8103a6c:	b570      	push	{r4, r5, r6, lr}
 8103a6e:	fba1 5402 	umull	r5, r4, r1, r2
 8103a72:	b93c      	cbnz	r4, 8103a84 <_calloc_r+0x18>
 8103a74:	4629      	mov	r1, r5
 8103a76:	f7ff fb03 	bl	8103080 <_malloc_r>
 8103a7a:	4606      	mov	r6, r0
 8103a7c:	b928      	cbnz	r0, 8103a8a <_calloc_r+0x1e>
 8103a7e:	2600      	movs	r6, #0
 8103a80:	4630      	mov	r0, r6
 8103a82:	bd70      	pop	{r4, r5, r6, pc}
 8103a84:	220c      	movs	r2, #12
 8103a86:	6002      	str	r2, [r0, #0]
 8103a88:	e7f9      	b.n	8103a7e <_calloc_r+0x12>
 8103a8a:	462a      	mov	r2, r5
 8103a8c:	4621      	mov	r1, r4
 8103a8e:	f7fe fbb4 	bl	81021fa <memset>
 8103a92:	e7f5      	b.n	8103a80 <_calloc_r+0x14>

08103a94 <__ascii_mbtowc>:
 8103a94:	b082      	sub	sp, #8
 8103a96:	b901      	cbnz	r1, 8103a9a <__ascii_mbtowc+0x6>
 8103a98:	a901      	add	r1, sp, #4
 8103a9a:	b142      	cbz	r2, 8103aae <__ascii_mbtowc+0x1a>
 8103a9c:	b14b      	cbz	r3, 8103ab2 <__ascii_mbtowc+0x1e>
 8103a9e:	7813      	ldrb	r3, [r2, #0]
 8103aa0:	600b      	str	r3, [r1, #0]
 8103aa2:	7812      	ldrb	r2, [r2, #0]
 8103aa4:	1e10      	subs	r0, r2, #0
 8103aa6:	bf18      	it	ne
 8103aa8:	2001      	movne	r0, #1
 8103aaa:	b002      	add	sp, #8
 8103aac:	4770      	bx	lr
 8103aae:	4610      	mov	r0, r2
 8103ab0:	e7fb      	b.n	8103aaa <__ascii_mbtowc+0x16>
 8103ab2:	f06f 0001 	mvn.w	r0, #1
 8103ab6:	e7f8      	b.n	8103aaa <__ascii_mbtowc+0x16>

08103ab8 <__ascii_wctomb>:
 8103ab8:	4603      	mov	r3, r0
 8103aba:	4608      	mov	r0, r1
 8103abc:	b141      	cbz	r1, 8103ad0 <__ascii_wctomb+0x18>
 8103abe:	2aff      	cmp	r2, #255	@ 0xff
 8103ac0:	d904      	bls.n	8103acc <__ascii_wctomb+0x14>
 8103ac2:	228a      	movs	r2, #138	@ 0x8a
 8103ac4:	601a      	str	r2, [r3, #0]
 8103ac6:	f04f 30ff 	mov.w	r0, #4294967295
 8103aca:	4770      	bx	lr
 8103acc:	700a      	strb	r2, [r1, #0]
 8103ace:	2001      	movs	r0, #1
 8103ad0:	4770      	bx	lr
	...

08103ad4 <fiprintf>:
 8103ad4:	b40e      	push	{r1, r2, r3}
 8103ad6:	b503      	push	{r0, r1, lr}
 8103ad8:	4601      	mov	r1, r0
 8103ada:	ab03      	add	r3, sp, #12
 8103adc:	4805      	ldr	r0, [pc, #20]	@ (8103af4 <fiprintf+0x20>)
 8103ade:	f853 2b04 	ldr.w	r2, [r3], #4
 8103ae2:	6800      	ldr	r0, [r0, #0]
 8103ae4:	9301      	str	r3, [sp, #4]
 8103ae6:	f000 f837 	bl	8103b58 <_vfiprintf_r>
 8103aea:	b002      	add	sp, #8
 8103aec:	f85d eb04 	ldr.w	lr, [sp], #4
 8103af0:	b003      	add	sp, #12
 8103af2:	4770      	bx	lr
 8103af4:	1000001c 	.word	0x1000001c

08103af8 <abort>:
 8103af8:	b508      	push	{r3, lr}
 8103afa:	2006      	movs	r0, #6
 8103afc:	f000 fa00 	bl	8103f00 <raise>
 8103b00:	2001      	movs	r0, #1
 8103b02:	f7fd f990 	bl	8100e26 <_exit>

08103b06 <__sfputc_r>:
 8103b06:	6893      	ldr	r3, [r2, #8]
 8103b08:	3b01      	subs	r3, #1
 8103b0a:	2b00      	cmp	r3, #0
 8103b0c:	b410      	push	{r4}
 8103b0e:	6093      	str	r3, [r2, #8]
 8103b10:	da08      	bge.n	8103b24 <__sfputc_r+0x1e>
 8103b12:	6994      	ldr	r4, [r2, #24]
 8103b14:	42a3      	cmp	r3, r4
 8103b16:	db01      	blt.n	8103b1c <__sfputc_r+0x16>
 8103b18:	290a      	cmp	r1, #10
 8103b1a:	d103      	bne.n	8103b24 <__sfputc_r+0x1e>
 8103b1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103b20:	f000 b932 	b.w	8103d88 <__swbuf_r>
 8103b24:	6813      	ldr	r3, [r2, #0]
 8103b26:	1c58      	adds	r0, r3, #1
 8103b28:	6010      	str	r0, [r2, #0]
 8103b2a:	7019      	strb	r1, [r3, #0]
 8103b2c:	4608      	mov	r0, r1
 8103b2e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103b32:	4770      	bx	lr

08103b34 <__sfputs_r>:
 8103b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8103b36:	4606      	mov	r6, r0
 8103b38:	460f      	mov	r7, r1
 8103b3a:	4614      	mov	r4, r2
 8103b3c:	18d5      	adds	r5, r2, r3
 8103b3e:	42ac      	cmp	r4, r5
 8103b40:	d101      	bne.n	8103b46 <__sfputs_r+0x12>
 8103b42:	2000      	movs	r0, #0
 8103b44:	e007      	b.n	8103b56 <__sfputs_r+0x22>
 8103b46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103b4a:	463a      	mov	r2, r7
 8103b4c:	4630      	mov	r0, r6
 8103b4e:	f7ff ffda 	bl	8103b06 <__sfputc_r>
 8103b52:	1c43      	adds	r3, r0, #1
 8103b54:	d1f3      	bne.n	8103b3e <__sfputs_r+0xa>
 8103b56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08103b58 <_vfiprintf_r>:
 8103b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103b5c:	460d      	mov	r5, r1
 8103b5e:	b09d      	sub	sp, #116	@ 0x74
 8103b60:	4614      	mov	r4, r2
 8103b62:	4698      	mov	r8, r3
 8103b64:	4606      	mov	r6, r0
 8103b66:	b118      	cbz	r0, 8103b70 <_vfiprintf_r+0x18>
 8103b68:	6a03      	ldr	r3, [r0, #32]
 8103b6a:	b90b      	cbnz	r3, 8103b70 <_vfiprintf_r+0x18>
 8103b6c:	f7fe facc 	bl	8102108 <__sinit>
 8103b70:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8103b72:	07d9      	lsls	r1, r3, #31
 8103b74:	d405      	bmi.n	8103b82 <_vfiprintf_r+0x2a>
 8103b76:	89ab      	ldrh	r3, [r5, #12]
 8103b78:	059a      	lsls	r2, r3, #22
 8103b7a:	d402      	bmi.n	8103b82 <_vfiprintf_r+0x2a>
 8103b7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8103b7e:	f7fe fbba 	bl	81022f6 <__retarget_lock_acquire_recursive>
 8103b82:	89ab      	ldrh	r3, [r5, #12]
 8103b84:	071b      	lsls	r3, r3, #28
 8103b86:	d501      	bpl.n	8103b8c <_vfiprintf_r+0x34>
 8103b88:	692b      	ldr	r3, [r5, #16]
 8103b8a:	b99b      	cbnz	r3, 8103bb4 <_vfiprintf_r+0x5c>
 8103b8c:	4629      	mov	r1, r5
 8103b8e:	4630      	mov	r0, r6
 8103b90:	f000 f938 	bl	8103e04 <__swsetup_r>
 8103b94:	b170      	cbz	r0, 8103bb4 <_vfiprintf_r+0x5c>
 8103b96:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8103b98:	07dc      	lsls	r4, r3, #31
 8103b9a:	d504      	bpl.n	8103ba6 <_vfiprintf_r+0x4e>
 8103b9c:	f04f 30ff 	mov.w	r0, #4294967295
 8103ba0:	b01d      	add	sp, #116	@ 0x74
 8103ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8103ba6:	89ab      	ldrh	r3, [r5, #12]
 8103ba8:	0598      	lsls	r0, r3, #22
 8103baa:	d4f7      	bmi.n	8103b9c <_vfiprintf_r+0x44>
 8103bac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8103bae:	f7fe fba3 	bl	81022f8 <__retarget_lock_release_recursive>
 8103bb2:	e7f3      	b.n	8103b9c <_vfiprintf_r+0x44>
 8103bb4:	2300      	movs	r3, #0
 8103bb6:	9309      	str	r3, [sp, #36]	@ 0x24
 8103bb8:	2320      	movs	r3, #32
 8103bba:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8103bbe:	f8cd 800c 	str.w	r8, [sp, #12]
 8103bc2:	2330      	movs	r3, #48	@ 0x30
 8103bc4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8103d74 <_vfiprintf_r+0x21c>
 8103bc8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8103bcc:	f04f 0901 	mov.w	r9, #1
 8103bd0:	4623      	mov	r3, r4
 8103bd2:	469a      	mov	sl, r3
 8103bd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8103bd8:	b10a      	cbz	r2, 8103bde <_vfiprintf_r+0x86>
 8103bda:	2a25      	cmp	r2, #37	@ 0x25
 8103bdc:	d1f9      	bne.n	8103bd2 <_vfiprintf_r+0x7a>
 8103bde:	ebba 0b04 	subs.w	fp, sl, r4
 8103be2:	d00b      	beq.n	8103bfc <_vfiprintf_r+0xa4>
 8103be4:	465b      	mov	r3, fp
 8103be6:	4622      	mov	r2, r4
 8103be8:	4629      	mov	r1, r5
 8103bea:	4630      	mov	r0, r6
 8103bec:	f7ff ffa2 	bl	8103b34 <__sfputs_r>
 8103bf0:	3001      	adds	r0, #1
 8103bf2:	f000 80a7 	beq.w	8103d44 <_vfiprintf_r+0x1ec>
 8103bf6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8103bf8:	445a      	add	r2, fp
 8103bfa:	9209      	str	r2, [sp, #36]	@ 0x24
 8103bfc:	f89a 3000 	ldrb.w	r3, [sl]
 8103c00:	2b00      	cmp	r3, #0
 8103c02:	f000 809f 	beq.w	8103d44 <_vfiprintf_r+0x1ec>
 8103c06:	2300      	movs	r3, #0
 8103c08:	f04f 32ff 	mov.w	r2, #4294967295
 8103c0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8103c10:	f10a 0a01 	add.w	sl, sl, #1
 8103c14:	9304      	str	r3, [sp, #16]
 8103c16:	9307      	str	r3, [sp, #28]
 8103c18:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8103c1c:	931a      	str	r3, [sp, #104]	@ 0x68
 8103c1e:	4654      	mov	r4, sl
 8103c20:	2205      	movs	r2, #5
 8103c22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103c26:	4853      	ldr	r0, [pc, #332]	@ (8103d74 <_vfiprintf_r+0x21c>)
 8103c28:	f7fc fb5a 	bl	81002e0 <memchr>
 8103c2c:	9a04      	ldr	r2, [sp, #16]
 8103c2e:	b9d8      	cbnz	r0, 8103c68 <_vfiprintf_r+0x110>
 8103c30:	06d1      	lsls	r1, r2, #27
 8103c32:	bf44      	itt	mi
 8103c34:	2320      	movmi	r3, #32
 8103c36:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8103c3a:	0713      	lsls	r3, r2, #28
 8103c3c:	bf44      	itt	mi
 8103c3e:	232b      	movmi	r3, #43	@ 0x2b
 8103c40:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8103c44:	f89a 3000 	ldrb.w	r3, [sl]
 8103c48:	2b2a      	cmp	r3, #42	@ 0x2a
 8103c4a:	d015      	beq.n	8103c78 <_vfiprintf_r+0x120>
 8103c4c:	9a07      	ldr	r2, [sp, #28]
 8103c4e:	4654      	mov	r4, sl
 8103c50:	2000      	movs	r0, #0
 8103c52:	f04f 0c0a 	mov.w	ip, #10
 8103c56:	4621      	mov	r1, r4
 8103c58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8103c5c:	3b30      	subs	r3, #48	@ 0x30
 8103c5e:	2b09      	cmp	r3, #9
 8103c60:	d94b      	bls.n	8103cfa <_vfiprintf_r+0x1a2>
 8103c62:	b1b0      	cbz	r0, 8103c92 <_vfiprintf_r+0x13a>
 8103c64:	9207      	str	r2, [sp, #28]
 8103c66:	e014      	b.n	8103c92 <_vfiprintf_r+0x13a>
 8103c68:	eba0 0308 	sub.w	r3, r0, r8
 8103c6c:	fa09 f303 	lsl.w	r3, r9, r3
 8103c70:	4313      	orrs	r3, r2
 8103c72:	9304      	str	r3, [sp, #16]
 8103c74:	46a2      	mov	sl, r4
 8103c76:	e7d2      	b.n	8103c1e <_vfiprintf_r+0xc6>
 8103c78:	9b03      	ldr	r3, [sp, #12]
 8103c7a:	1d19      	adds	r1, r3, #4
 8103c7c:	681b      	ldr	r3, [r3, #0]
 8103c7e:	9103      	str	r1, [sp, #12]
 8103c80:	2b00      	cmp	r3, #0
 8103c82:	bfbb      	ittet	lt
 8103c84:	425b      	neglt	r3, r3
 8103c86:	f042 0202 	orrlt.w	r2, r2, #2
 8103c8a:	9307      	strge	r3, [sp, #28]
 8103c8c:	9307      	strlt	r3, [sp, #28]
 8103c8e:	bfb8      	it	lt
 8103c90:	9204      	strlt	r2, [sp, #16]
 8103c92:	7823      	ldrb	r3, [r4, #0]
 8103c94:	2b2e      	cmp	r3, #46	@ 0x2e
 8103c96:	d10a      	bne.n	8103cae <_vfiprintf_r+0x156>
 8103c98:	7863      	ldrb	r3, [r4, #1]
 8103c9a:	2b2a      	cmp	r3, #42	@ 0x2a
 8103c9c:	d132      	bne.n	8103d04 <_vfiprintf_r+0x1ac>
 8103c9e:	9b03      	ldr	r3, [sp, #12]
 8103ca0:	1d1a      	adds	r2, r3, #4
 8103ca2:	681b      	ldr	r3, [r3, #0]
 8103ca4:	9203      	str	r2, [sp, #12]
 8103ca6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8103caa:	3402      	adds	r4, #2
 8103cac:	9305      	str	r3, [sp, #20]
 8103cae:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8103d84 <_vfiprintf_r+0x22c>
 8103cb2:	7821      	ldrb	r1, [r4, #0]
 8103cb4:	2203      	movs	r2, #3
 8103cb6:	4650      	mov	r0, sl
 8103cb8:	f7fc fb12 	bl	81002e0 <memchr>
 8103cbc:	b138      	cbz	r0, 8103cce <_vfiprintf_r+0x176>
 8103cbe:	9b04      	ldr	r3, [sp, #16]
 8103cc0:	eba0 000a 	sub.w	r0, r0, sl
 8103cc4:	2240      	movs	r2, #64	@ 0x40
 8103cc6:	4082      	lsls	r2, r0
 8103cc8:	4313      	orrs	r3, r2
 8103cca:	3401      	adds	r4, #1
 8103ccc:	9304      	str	r3, [sp, #16]
 8103cce:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103cd2:	4829      	ldr	r0, [pc, #164]	@ (8103d78 <_vfiprintf_r+0x220>)
 8103cd4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8103cd8:	2206      	movs	r2, #6
 8103cda:	f7fc fb01 	bl	81002e0 <memchr>
 8103cde:	2800      	cmp	r0, #0
 8103ce0:	d03f      	beq.n	8103d62 <_vfiprintf_r+0x20a>
 8103ce2:	4b26      	ldr	r3, [pc, #152]	@ (8103d7c <_vfiprintf_r+0x224>)
 8103ce4:	bb1b      	cbnz	r3, 8103d2e <_vfiprintf_r+0x1d6>
 8103ce6:	9b03      	ldr	r3, [sp, #12]
 8103ce8:	3307      	adds	r3, #7
 8103cea:	f023 0307 	bic.w	r3, r3, #7
 8103cee:	3308      	adds	r3, #8
 8103cf0:	9303      	str	r3, [sp, #12]
 8103cf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8103cf4:	443b      	add	r3, r7
 8103cf6:	9309      	str	r3, [sp, #36]	@ 0x24
 8103cf8:	e76a      	b.n	8103bd0 <_vfiprintf_r+0x78>
 8103cfa:	fb0c 3202 	mla	r2, ip, r2, r3
 8103cfe:	460c      	mov	r4, r1
 8103d00:	2001      	movs	r0, #1
 8103d02:	e7a8      	b.n	8103c56 <_vfiprintf_r+0xfe>
 8103d04:	2300      	movs	r3, #0
 8103d06:	3401      	adds	r4, #1
 8103d08:	9305      	str	r3, [sp, #20]
 8103d0a:	4619      	mov	r1, r3
 8103d0c:	f04f 0c0a 	mov.w	ip, #10
 8103d10:	4620      	mov	r0, r4
 8103d12:	f810 2b01 	ldrb.w	r2, [r0], #1
 8103d16:	3a30      	subs	r2, #48	@ 0x30
 8103d18:	2a09      	cmp	r2, #9
 8103d1a:	d903      	bls.n	8103d24 <_vfiprintf_r+0x1cc>
 8103d1c:	2b00      	cmp	r3, #0
 8103d1e:	d0c6      	beq.n	8103cae <_vfiprintf_r+0x156>
 8103d20:	9105      	str	r1, [sp, #20]
 8103d22:	e7c4      	b.n	8103cae <_vfiprintf_r+0x156>
 8103d24:	fb0c 2101 	mla	r1, ip, r1, r2
 8103d28:	4604      	mov	r4, r0
 8103d2a:	2301      	movs	r3, #1
 8103d2c:	e7f0      	b.n	8103d10 <_vfiprintf_r+0x1b8>
 8103d2e:	ab03      	add	r3, sp, #12
 8103d30:	9300      	str	r3, [sp, #0]
 8103d32:	462a      	mov	r2, r5
 8103d34:	4b12      	ldr	r3, [pc, #72]	@ (8103d80 <_vfiprintf_r+0x228>)
 8103d36:	a904      	add	r1, sp, #16
 8103d38:	4630      	mov	r0, r6
 8103d3a:	f7fd fda1 	bl	8101880 <_printf_float>
 8103d3e:	4607      	mov	r7, r0
 8103d40:	1c78      	adds	r0, r7, #1
 8103d42:	d1d6      	bne.n	8103cf2 <_vfiprintf_r+0x19a>
 8103d44:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8103d46:	07d9      	lsls	r1, r3, #31
 8103d48:	d405      	bmi.n	8103d56 <_vfiprintf_r+0x1fe>
 8103d4a:	89ab      	ldrh	r3, [r5, #12]
 8103d4c:	059a      	lsls	r2, r3, #22
 8103d4e:	d402      	bmi.n	8103d56 <_vfiprintf_r+0x1fe>
 8103d50:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8103d52:	f7fe fad1 	bl	81022f8 <__retarget_lock_release_recursive>
 8103d56:	89ab      	ldrh	r3, [r5, #12]
 8103d58:	065b      	lsls	r3, r3, #25
 8103d5a:	f53f af1f 	bmi.w	8103b9c <_vfiprintf_r+0x44>
 8103d5e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8103d60:	e71e      	b.n	8103ba0 <_vfiprintf_r+0x48>
 8103d62:	ab03      	add	r3, sp, #12
 8103d64:	9300      	str	r3, [sp, #0]
 8103d66:	462a      	mov	r2, r5
 8103d68:	4b05      	ldr	r3, [pc, #20]	@ (8103d80 <_vfiprintf_r+0x228>)
 8103d6a:	a904      	add	r1, sp, #16
 8103d6c:	4630      	mov	r0, r6
 8103d6e:	f7fe f81f 	bl	8101db0 <_printf_i>
 8103d72:	e7e4      	b.n	8103d3e <_vfiprintf_r+0x1e6>
 8103d74:	081043c7 	.word	0x081043c7
 8103d78:	081043d1 	.word	0x081043d1
 8103d7c:	08101881 	.word	0x08101881
 8103d80:	08103b35 	.word	0x08103b35
 8103d84:	081043cd 	.word	0x081043cd

08103d88 <__swbuf_r>:
 8103d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8103d8a:	460e      	mov	r6, r1
 8103d8c:	4614      	mov	r4, r2
 8103d8e:	4605      	mov	r5, r0
 8103d90:	b118      	cbz	r0, 8103d9a <__swbuf_r+0x12>
 8103d92:	6a03      	ldr	r3, [r0, #32]
 8103d94:	b90b      	cbnz	r3, 8103d9a <__swbuf_r+0x12>
 8103d96:	f7fe f9b7 	bl	8102108 <__sinit>
 8103d9a:	69a3      	ldr	r3, [r4, #24]
 8103d9c:	60a3      	str	r3, [r4, #8]
 8103d9e:	89a3      	ldrh	r3, [r4, #12]
 8103da0:	071a      	lsls	r2, r3, #28
 8103da2:	d501      	bpl.n	8103da8 <__swbuf_r+0x20>
 8103da4:	6923      	ldr	r3, [r4, #16]
 8103da6:	b943      	cbnz	r3, 8103dba <__swbuf_r+0x32>
 8103da8:	4621      	mov	r1, r4
 8103daa:	4628      	mov	r0, r5
 8103dac:	f000 f82a 	bl	8103e04 <__swsetup_r>
 8103db0:	b118      	cbz	r0, 8103dba <__swbuf_r+0x32>
 8103db2:	f04f 37ff 	mov.w	r7, #4294967295
 8103db6:	4638      	mov	r0, r7
 8103db8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8103dba:	6823      	ldr	r3, [r4, #0]
 8103dbc:	6922      	ldr	r2, [r4, #16]
 8103dbe:	1a98      	subs	r0, r3, r2
 8103dc0:	6963      	ldr	r3, [r4, #20]
 8103dc2:	b2f6      	uxtb	r6, r6
 8103dc4:	4283      	cmp	r3, r0
 8103dc6:	4637      	mov	r7, r6
 8103dc8:	dc05      	bgt.n	8103dd6 <__swbuf_r+0x4e>
 8103dca:	4621      	mov	r1, r4
 8103dcc:	4628      	mov	r0, r5
 8103dce:	f7ff fde9 	bl	81039a4 <_fflush_r>
 8103dd2:	2800      	cmp	r0, #0
 8103dd4:	d1ed      	bne.n	8103db2 <__swbuf_r+0x2a>
 8103dd6:	68a3      	ldr	r3, [r4, #8]
 8103dd8:	3b01      	subs	r3, #1
 8103dda:	60a3      	str	r3, [r4, #8]
 8103ddc:	6823      	ldr	r3, [r4, #0]
 8103dde:	1c5a      	adds	r2, r3, #1
 8103de0:	6022      	str	r2, [r4, #0]
 8103de2:	701e      	strb	r6, [r3, #0]
 8103de4:	6962      	ldr	r2, [r4, #20]
 8103de6:	1c43      	adds	r3, r0, #1
 8103de8:	429a      	cmp	r2, r3
 8103dea:	d004      	beq.n	8103df6 <__swbuf_r+0x6e>
 8103dec:	89a3      	ldrh	r3, [r4, #12]
 8103dee:	07db      	lsls	r3, r3, #31
 8103df0:	d5e1      	bpl.n	8103db6 <__swbuf_r+0x2e>
 8103df2:	2e0a      	cmp	r6, #10
 8103df4:	d1df      	bne.n	8103db6 <__swbuf_r+0x2e>
 8103df6:	4621      	mov	r1, r4
 8103df8:	4628      	mov	r0, r5
 8103dfa:	f7ff fdd3 	bl	81039a4 <_fflush_r>
 8103dfe:	2800      	cmp	r0, #0
 8103e00:	d0d9      	beq.n	8103db6 <__swbuf_r+0x2e>
 8103e02:	e7d6      	b.n	8103db2 <__swbuf_r+0x2a>

08103e04 <__swsetup_r>:
 8103e04:	b538      	push	{r3, r4, r5, lr}
 8103e06:	4b29      	ldr	r3, [pc, #164]	@ (8103eac <__swsetup_r+0xa8>)
 8103e08:	4605      	mov	r5, r0
 8103e0a:	6818      	ldr	r0, [r3, #0]
 8103e0c:	460c      	mov	r4, r1
 8103e0e:	b118      	cbz	r0, 8103e18 <__swsetup_r+0x14>
 8103e10:	6a03      	ldr	r3, [r0, #32]
 8103e12:	b90b      	cbnz	r3, 8103e18 <__swsetup_r+0x14>
 8103e14:	f7fe f978 	bl	8102108 <__sinit>
 8103e18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103e1c:	0719      	lsls	r1, r3, #28
 8103e1e:	d422      	bmi.n	8103e66 <__swsetup_r+0x62>
 8103e20:	06da      	lsls	r2, r3, #27
 8103e22:	d407      	bmi.n	8103e34 <__swsetup_r+0x30>
 8103e24:	2209      	movs	r2, #9
 8103e26:	602a      	str	r2, [r5, #0]
 8103e28:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8103e2c:	81a3      	strh	r3, [r4, #12]
 8103e2e:	f04f 30ff 	mov.w	r0, #4294967295
 8103e32:	e033      	b.n	8103e9c <__swsetup_r+0x98>
 8103e34:	0758      	lsls	r0, r3, #29
 8103e36:	d512      	bpl.n	8103e5e <__swsetup_r+0x5a>
 8103e38:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8103e3a:	b141      	cbz	r1, 8103e4e <__swsetup_r+0x4a>
 8103e3c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8103e40:	4299      	cmp	r1, r3
 8103e42:	d002      	beq.n	8103e4a <__swsetup_r+0x46>
 8103e44:	4628      	mov	r0, r5
 8103e46:	f7ff f8a7 	bl	8102f98 <_free_r>
 8103e4a:	2300      	movs	r3, #0
 8103e4c:	6363      	str	r3, [r4, #52]	@ 0x34
 8103e4e:	89a3      	ldrh	r3, [r4, #12]
 8103e50:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8103e54:	81a3      	strh	r3, [r4, #12]
 8103e56:	2300      	movs	r3, #0
 8103e58:	6063      	str	r3, [r4, #4]
 8103e5a:	6923      	ldr	r3, [r4, #16]
 8103e5c:	6023      	str	r3, [r4, #0]
 8103e5e:	89a3      	ldrh	r3, [r4, #12]
 8103e60:	f043 0308 	orr.w	r3, r3, #8
 8103e64:	81a3      	strh	r3, [r4, #12]
 8103e66:	6923      	ldr	r3, [r4, #16]
 8103e68:	b94b      	cbnz	r3, 8103e7e <__swsetup_r+0x7a>
 8103e6a:	89a3      	ldrh	r3, [r4, #12]
 8103e6c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8103e70:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8103e74:	d003      	beq.n	8103e7e <__swsetup_r+0x7a>
 8103e76:	4621      	mov	r1, r4
 8103e78:	4628      	mov	r0, r5
 8103e7a:	f000 f883 	bl	8103f84 <__smakebuf_r>
 8103e7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103e82:	f013 0201 	ands.w	r2, r3, #1
 8103e86:	d00a      	beq.n	8103e9e <__swsetup_r+0x9a>
 8103e88:	2200      	movs	r2, #0
 8103e8a:	60a2      	str	r2, [r4, #8]
 8103e8c:	6962      	ldr	r2, [r4, #20]
 8103e8e:	4252      	negs	r2, r2
 8103e90:	61a2      	str	r2, [r4, #24]
 8103e92:	6922      	ldr	r2, [r4, #16]
 8103e94:	b942      	cbnz	r2, 8103ea8 <__swsetup_r+0xa4>
 8103e96:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8103e9a:	d1c5      	bne.n	8103e28 <__swsetup_r+0x24>
 8103e9c:	bd38      	pop	{r3, r4, r5, pc}
 8103e9e:	0799      	lsls	r1, r3, #30
 8103ea0:	bf58      	it	pl
 8103ea2:	6962      	ldrpl	r2, [r4, #20]
 8103ea4:	60a2      	str	r2, [r4, #8]
 8103ea6:	e7f4      	b.n	8103e92 <__swsetup_r+0x8e>
 8103ea8:	2000      	movs	r0, #0
 8103eaa:	e7f7      	b.n	8103e9c <__swsetup_r+0x98>
 8103eac:	1000001c 	.word	0x1000001c

08103eb0 <_raise_r>:
 8103eb0:	291f      	cmp	r1, #31
 8103eb2:	b538      	push	{r3, r4, r5, lr}
 8103eb4:	4605      	mov	r5, r0
 8103eb6:	460c      	mov	r4, r1
 8103eb8:	d904      	bls.n	8103ec4 <_raise_r+0x14>
 8103eba:	2316      	movs	r3, #22
 8103ebc:	6003      	str	r3, [r0, #0]
 8103ebe:	f04f 30ff 	mov.w	r0, #4294967295
 8103ec2:	bd38      	pop	{r3, r4, r5, pc}
 8103ec4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8103ec6:	b112      	cbz	r2, 8103ece <_raise_r+0x1e>
 8103ec8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8103ecc:	b94b      	cbnz	r3, 8103ee2 <_raise_r+0x32>
 8103ece:	4628      	mov	r0, r5
 8103ed0:	f000 f830 	bl	8103f34 <_getpid_r>
 8103ed4:	4622      	mov	r2, r4
 8103ed6:	4601      	mov	r1, r0
 8103ed8:	4628      	mov	r0, r5
 8103eda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8103ede:	f000 b817 	b.w	8103f10 <_kill_r>
 8103ee2:	2b01      	cmp	r3, #1
 8103ee4:	d00a      	beq.n	8103efc <_raise_r+0x4c>
 8103ee6:	1c59      	adds	r1, r3, #1
 8103ee8:	d103      	bne.n	8103ef2 <_raise_r+0x42>
 8103eea:	2316      	movs	r3, #22
 8103eec:	6003      	str	r3, [r0, #0]
 8103eee:	2001      	movs	r0, #1
 8103ef0:	e7e7      	b.n	8103ec2 <_raise_r+0x12>
 8103ef2:	2100      	movs	r1, #0
 8103ef4:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8103ef8:	4620      	mov	r0, r4
 8103efa:	4798      	blx	r3
 8103efc:	2000      	movs	r0, #0
 8103efe:	e7e0      	b.n	8103ec2 <_raise_r+0x12>

08103f00 <raise>:
 8103f00:	4b02      	ldr	r3, [pc, #8]	@ (8103f0c <raise+0xc>)
 8103f02:	4601      	mov	r1, r0
 8103f04:	6818      	ldr	r0, [r3, #0]
 8103f06:	f7ff bfd3 	b.w	8103eb0 <_raise_r>
 8103f0a:	bf00      	nop
 8103f0c:	1000001c 	.word	0x1000001c

08103f10 <_kill_r>:
 8103f10:	b538      	push	{r3, r4, r5, lr}
 8103f12:	4d07      	ldr	r5, [pc, #28]	@ (8103f30 <_kill_r+0x20>)
 8103f14:	2300      	movs	r3, #0
 8103f16:	4604      	mov	r4, r0
 8103f18:	4608      	mov	r0, r1
 8103f1a:	4611      	mov	r1, r2
 8103f1c:	602b      	str	r3, [r5, #0]
 8103f1e:	f7fc ff72 	bl	8100e06 <_kill>
 8103f22:	1c43      	adds	r3, r0, #1
 8103f24:	d102      	bne.n	8103f2c <_kill_r+0x1c>
 8103f26:	682b      	ldr	r3, [r5, #0]
 8103f28:	b103      	cbz	r3, 8103f2c <_kill_r+0x1c>
 8103f2a:	6023      	str	r3, [r4, #0]
 8103f2c:	bd38      	pop	{r3, r4, r5, pc}
 8103f2e:	bf00      	nop
 8103f30:	10000338 	.word	0x10000338

08103f34 <_getpid_r>:
 8103f34:	f7fc bf5f 	b.w	8100df6 <_getpid>

08103f38 <__swhatbuf_r>:
 8103f38:	b570      	push	{r4, r5, r6, lr}
 8103f3a:	460c      	mov	r4, r1
 8103f3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8103f40:	2900      	cmp	r1, #0
 8103f42:	b096      	sub	sp, #88	@ 0x58
 8103f44:	4615      	mov	r5, r2
 8103f46:	461e      	mov	r6, r3
 8103f48:	da0d      	bge.n	8103f66 <__swhatbuf_r+0x2e>
 8103f4a:	89a3      	ldrh	r3, [r4, #12]
 8103f4c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8103f50:	f04f 0100 	mov.w	r1, #0
 8103f54:	bf14      	ite	ne
 8103f56:	2340      	movne	r3, #64	@ 0x40
 8103f58:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8103f5c:	2000      	movs	r0, #0
 8103f5e:	6031      	str	r1, [r6, #0]
 8103f60:	602b      	str	r3, [r5, #0]
 8103f62:	b016      	add	sp, #88	@ 0x58
 8103f64:	bd70      	pop	{r4, r5, r6, pc}
 8103f66:	466a      	mov	r2, sp
 8103f68:	f000 f848 	bl	8103ffc <_fstat_r>
 8103f6c:	2800      	cmp	r0, #0
 8103f6e:	dbec      	blt.n	8103f4a <__swhatbuf_r+0x12>
 8103f70:	9901      	ldr	r1, [sp, #4]
 8103f72:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8103f76:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8103f7a:	4259      	negs	r1, r3
 8103f7c:	4159      	adcs	r1, r3
 8103f7e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8103f82:	e7eb      	b.n	8103f5c <__swhatbuf_r+0x24>

08103f84 <__smakebuf_r>:
 8103f84:	898b      	ldrh	r3, [r1, #12]
 8103f86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8103f88:	079d      	lsls	r5, r3, #30
 8103f8a:	4606      	mov	r6, r0
 8103f8c:	460c      	mov	r4, r1
 8103f8e:	d507      	bpl.n	8103fa0 <__smakebuf_r+0x1c>
 8103f90:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8103f94:	6023      	str	r3, [r4, #0]
 8103f96:	6123      	str	r3, [r4, #16]
 8103f98:	2301      	movs	r3, #1
 8103f9a:	6163      	str	r3, [r4, #20]
 8103f9c:	b003      	add	sp, #12
 8103f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8103fa0:	ab01      	add	r3, sp, #4
 8103fa2:	466a      	mov	r2, sp
 8103fa4:	f7ff ffc8 	bl	8103f38 <__swhatbuf_r>
 8103fa8:	9f00      	ldr	r7, [sp, #0]
 8103faa:	4605      	mov	r5, r0
 8103fac:	4639      	mov	r1, r7
 8103fae:	4630      	mov	r0, r6
 8103fb0:	f7ff f866 	bl	8103080 <_malloc_r>
 8103fb4:	b948      	cbnz	r0, 8103fca <__smakebuf_r+0x46>
 8103fb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103fba:	059a      	lsls	r2, r3, #22
 8103fbc:	d4ee      	bmi.n	8103f9c <__smakebuf_r+0x18>
 8103fbe:	f023 0303 	bic.w	r3, r3, #3
 8103fc2:	f043 0302 	orr.w	r3, r3, #2
 8103fc6:	81a3      	strh	r3, [r4, #12]
 8103fc8:	e7e2      	b.n	8103f90 <__smakebuf_r+0xc>
 8103fca:	89a3      	ldrh	r3, [r4, #12]
 8103fcc:	6020      	str	r0, [r4, #0]
 8103fce:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8103fd2:	81a3      	strh	r3, [r4, #12]
 8103fd4:	9b01      	ldr	r3, [sp, #4]
 8103fd6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8103fda:	b15b      	cbz	r3, 8103ff4 <__smakebuf_r+0x70>
 8103fdc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8103fe0:	4630      	mov	r0, r6
 8103fe2:	f000 f81d 	bl	8104020 <_isatty_r>
 8103fe6:	b128      	cbz	r0, 8103ff4 <__smakebuf_r+0x70>
 8103fe8:	89a3      	ldrh	r3, [r4, #12]
 8103fea:	f023 0303 	bic.w	r3, r3, #3
 8103fee:	f043 0301 	orr.w	r3, r3, #1
 8103ff2:	81a3      	strh	r3, [r4, #12]
 8103ff4:	89a3      	ldrh	r3, [r4, #12]
 8103ff6:	431d      	orrs	r5, r3
 8103ff8:	81a5      	strh	r5, [r4, #12]
 8103ffa:	e7cf      	b.n	8103f9c <__smakebuf_r+0x18>

08103ffc <_fstat_r>:
 8103ffc:	b538      	push	{r3, r4, r5, lr}
 8103ffe:	4d07      	ldr	r5, [pc, #28]	@ (810401c <_fstat_r+0x20>)
 8104000:	2300      	movs	r3, #0
 8104002:	4604      	mov	r4, r0
 8104004:	4608      	mov	r0, r1
 8104006:	4611      	mov	r1, r2
 8104008:	602b      	str	r3, [r5, #0]
 810400a:	f7fc ff5c 	bl	8100ec6 <_fstat>
 810400e:	1c43      	adds	r3, r0, #1
 8104010:	d102      	bne.n	8104018 <_fstat_r+0x1c>
 8104012:	682b      	ldr	r3, [r5, #0]
 8104014:	b103      	cbz	r3, 8104018 <_fstat_r+0x1c>
 8104016:	6023      	str	r3, [r4, #0]
 8104018:	bd38      	pop	{r3, r4, r5, pc}
 810401a:	bf00      	nop
 810401c:	10000338 	.word	0x10000338

08104020 <_isatty_r>:
 8104020:	b538      	push	{r3, r4, r5, lr}
 8104022:	4d06      	ldr	r5, [pc, #24]	@ (810403c <_isatty_r+0x1c>)
 8104024:	2300      	movs	r3, #0
 8104026:	4604      	mov	r4, r0
 8104028:	4608      	mov	r0, r1
 810402a:	602b      	str	r3, [r5, #0]
 810402c:	f7fc ff5b 	bl	8100ee6 <_isatty>
 8104030:	1c43      	adds	r3, r0, #1
 8104032:	d102      	bne.n	810403a <_isatty_r+0x1a>
 8104034:	682b      	ldr	r3, [r5, #0]
 8104036:	b103      	cbz	r3, 810403a <_isatty_r+0x1a>
 8104038:	6023      	str	r3, [r4, #0]
 810403a:	bd38      	pop	{r3, r4, r5, pc}
 810403c:	10000338 	.word	0x10000338

08104040 <_init>:
 8104040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104042:	bf00      	nop
 8104044:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8104046:	bc08      	pop	{r3}
 8104048:	469e      	mov	lr, r3
 810404a:	4770      	bx	lr

0810404c <_fini>:
 810404c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810404e:	bf00      	nop
 8104050:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8104052:	bc08      	pop	{r3}
 8104054:	469e      	mov	lr, r3
 8104056:	4770      	bx	lr
